{"file":[{"name":"protos/common/v1/geopoint.proto","package":"protos.common.v1","messageType":[{"name":"GeoPoint","field":[{"name":"lon","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"lon"},{"name":"lat","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"lat"}]}],"options":{"goPackage":"protocol-example/gen/go/protos/common/v1;commonpb"},"sourceCodeInfo":{"location":[{"span":[0,0,8,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,25]},{"path":[8],"span":[3,0,72]},{"path":[8,11],"span":[3,0,72]},{"path":[4,0],"span":[5,0,8,1]},{"path":[4,0,1],"span":[5,8,16]},{"path":[4,0,2,0],"span":[6,2,17]},{"path":[4,0,2,0,5],"span":[6,2,8]},{"path":[4,0,2,0,1],"span":[6,9,12]},{"path":[4,0,2,0,3],"span":[6,15,16]},{"path":[4,0,2,1],"span":[7,2,17]},{"path":[4,0,2,1,5],"span":[7,2,8]},{"path":[4,0,2,1,1],"span":[7,9,12]},{"path":[4,0,2,1,3],"span":[7,15,16]}]},"syntax":"proto3"},{"name":"google/protobuf/descriptor.proto","package":"google.protobuf","messageType":[{"name":"FileDescriptorSet","field":[{"name":"file","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FileDescriptorProto","jsonName":"file"}]},{"name":"FileDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"package","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"package"},{"name":"dependency","number":3,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"dependency"},{"name":"public_dependency","number":10,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"publicDependency"},{"name":"weak_dependency","number":11,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"weakDependency"},{"name":"message_type","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto","jsonName":"messageType"},{"name":"enum_type","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumDescriptorProto","jsonName":"enumType"},{"name":"service","number":6,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.ServiceDescriptorProto","jsonName":"service"},{"name":"extension","number":7,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldDescriptorProto","jsonName":"extension"},{"name":"options","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.FileOptions","jsonName":"options"},{"name":"source_code_info","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.SourceCodeInfo","jsonName":"sourceCodeInfo"},{"name":"syntax","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"syntax"}]},{"name":"DescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"field","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldDescriptorProto","jsonName":"field"},{"name":"extension","number":6,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldDescriptorProto","jsonName":"extension"},{"name":"nested_type","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto","jsonName":"nestedType"},{"name":"enum_type","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumDescriptorProto","jsonName":"enumType"},{"name":"extension_range","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto.ExtensionRange","jsonName":"extensionRange"},{"name":"oneof_decl","number":8,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.OneofDescriptorProto","jsonName":"oneofDecl"},{"name":"options","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.MessageOptions","jsonName":"options"},{"name":"reserved_range","number":9,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.DescriptorProto.ReservedRange","jsonName":"reservedRange"},{"name":"reserved_name","number":10,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"reservedName"}],"nestedType":[{"name":"ExtensionRange","field":[{"name":"start","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"start"},{"name":"end","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.ExtensionRangeOptions","jsonName":"options"}]},{"name":"ReservedRange","field":[{"name":"start","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"start"},{"name":"end","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"}]}]},{"name":"ExtensionRangeOptions","field":[{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"FieldDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"number","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"number"},{"name":"label","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldDescriptorProto.Label","jsonName":"label"},{"name":"type","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldDescriptorProto.Type","jsonName":"type"},{"name":"type_name","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"typeName"},{"name":"extendee","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"extendee"},{"name":"default_value","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"defaultValue"},{"name":"oneof_index","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"oneofIndex"},{"name":"json_name","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"jsonName"},{"name":"options","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.FieldOptions","jsonName":"options"},{"name":"proto3_optional","number":17,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"proto3Optional"}],"enumType":[{"name":"Type","value":[{"name":"TYPE_DOUBLE","number":1},{"name":"TYPE_FLOAT","number":2},{"name":"TYPE_INT64","number":3},{"name":"TYPE_UINT64","number":4},{"name":"TYPE_INT32","number":5},{"name":"TYPE_FIXED64","number":6},{"name":"TYPE_FIXED32","number":7},{"name":"TYPE_BOOL","number":8},{"name":"TYPE_STRING","number":9},{"name":"TYPE_GROUP","number":10},{"name":"TYPE_MESSAGE","number":11},{"name":"TYPE_BYTES","number":12},{"name":"TYPE_UINT32","number":13},{"name":"TYPE_ENUM","number":14},{"name":"TYPE_SFIXED32","number":15},{"name":"TYPE_SFIXED64","number":16},{"name":"TYPE_SINT32","number":17},{"name":"TYPE_SINT64","number":18}]},{"name":"Label","value":[{"name":"LABEL_OPTIONAL","number":1},{"name":"LABEL_REQUIRED","number":2},{"name":"LABEL_REPEATED","number":3}]}]},{"name":"OneofDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"options","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.OneofOptions","jsonName":"options"}]},{"name":"EnumDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"value","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumValueDescriptorProto","jsonName":"value"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumOptions","jsonName":"options"},{"name":"reserved_range","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumDescriptorProto.EnumReservedRange","jsonName":"reservedRange"},{"name":"reserved_name","number":5,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"reservedName"}],"nestedType":[{"name":"EnumReservedRange","field":[{"name":"start","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"start"},{"name":"end","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"}]}]},{"name":"EnumValueDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"number","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"number"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.EnumValueOptions","jsonName":"options"}]},{"name":"ServiceDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"method","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.MethodDescriptorProto","jsonName":"method"},{"name":"options","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.ServiceOptions","jsonName":"options"}]},{"name":"MethodDescriptorProto","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"input_type","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"inputType"},{"name":"output_type","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"outputType"},{"name":"options","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.MethodOptions","jsonName":"options"},{"name":"client_streaming","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"clientStreaming"},{"name":"server_streaming","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"serverStreaming"}]},{"name":"FileOptions","field":[{"name":"java_package","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"javaPackage"},{"name":"java_outer_classname","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"javaOuterClassname"},{"name":"java_multiple_files","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"javaMultipleFiles"},{"name":"java_generate_equals_and_hash","number":20,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"javaGenerateEqualsAndHash","options":{"deprecated":true}},{"name":"java_string_check_utf8","number":27,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"javaStringCheckUtf8"},{"name":"optimize_for","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FileOptions.OptimizeMode","defaultValue":"SPEED","jsonName":"optimizeFor"},{"name":"go_package","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"goPackage"},{"name":"cc_generic_services","number":16,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"ccGenericServices"},{"name":"java_generic_services","number":17,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"javaGenericServices"},{"name":"py_generic_services","number":18,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"pyGenericServices"},{"name":"php_generic_services","number":42,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"phpGenericServices"},{"name":"deprecated","number":23,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"cc_enable_arenas","number":31,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"true","jsonName":"ccEnableArenas"},{"name":"objc_class_prefix","number":36,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"objcClassPrefix"},{"name":"csharp_namespace","number":37,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"csharpNamespace"},{"name":"swift_prefix","number":39,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"swiftPrefix"},{"name":"php_class_prefix","number":40,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"phpClassPrefix"},{"name":"php_namespace","number":41,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"phpNamespace"},{"name":"php_metadata_namespace","number":44,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"phpMetadataNamespace"},{"name":"ruby_package","number":45,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"rubyPackage"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"enumType":[{"name":"OptimizeMode","value":[{"name":"SPEED","number":1},{"name":"CODE_SIZE","number":2},{"name":"LITE_RUNTIME","number":3}]}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":38,"end":39}]},{"name":"MessageOptions","field":[{"name":"message_set_wire_format","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"messageSetWireFormat"},{"name":"no_standard_descriptor_accessor","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"noStandardDescriptorAccessor"},{"name":"deprecated","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"map_entry","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"mapEntry"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":4,"end":5},{"start":5,"end":6},{"start":6,"end":7},{"start":8,"end":9},{"start":9,"end":10}]},{"name":"FieldOptions","field":[{"name":"ctype","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldOptions.CType","defaultValue":"STRING","jsonName":"ctype"},{"name":"packed","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"packed"},{"name":"jstype","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.FieldOptions.JSType","defaultValue":"JS_NORMAL","jsonName":"jstype"},{"name":"lazy","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"lazy"},{"name":"deprecated","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"weak","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"weak"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"enumType":[{"name":"CType","value":[{"name":"STRING","number":0},{"name":"CORD","number":1},{"name":"STRING_PIECE","number":2}]},{"name":"JSType","value":[{"name":"JS_NORMAL","number":0},{"name":"JS_STRING","number":1},{"name":"JS_NUMBER","number":2}]}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":4,"end":5}]},{"name":"OneofOptions","field":[{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"EnumOptions","field":[{"name":"allow_alias","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"allowAlias"},{"name":"deprecated","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}],"reservedRange":[{"start":5,"end":6}]},{"name":"EnumValueOptions","field":[{"name":"deprecated","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"ServiceOptions","field":[{"name":"deprecated","number":33,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"MethodOptions","field":[{"name":"deprecated","number":33,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","defaultValue":"false","jsonName":"deprecated"},{"name":"idempotency_level","number":34,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.MethodOptions.IdempotencyLevel","defaultValue":"IDEMPOTENCY_UNKNOWN","jsonName":"idempotencyLevel"},{"name":"uninterpreted_option","number":999,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption","jsonName":"uninterpretedOption"}],"enumType":[{"name":"IdempotencyLevel","value":[{"name":"IDEMPOTENCY_UNKNOWN","number":0},{"name":"NO_SIDE_EFFECTS","number":1},{"name":"IDEMPOTENT","number":2}]}],"extensionRange":[{"start":1000,"end":536870912}]},{"name":"UninterpretedOption","field":[{"name":"name","number":2,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.UninterpretedOption.NamePart","jsonName":"name"},{"name":"identifier_value","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"identifierValue"},{"name":"positive_int_value","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"positiveIntValue"},{"name":"negative_int_value","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"negativeIntValue"},{"name":"double_value","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"doubleValue"},{"name":"string_value","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_BYTES","jsonName":"stringValue"},{"name":"aggregate_value","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"aggregateValue"}],"nestedType":[{"name":"NamePart","field":[{"name":"name_part","number":1,"label":"LABEL_REQUIRED","type":"TYPE_STRING","jsonName":"namePart"},{"name":"is_extension","number":2,"label":"LABEL_REQUIRED","type":"TYPE_BOOL","jsonName":"isExtension"}]}]},{"name":"SourceCodeInfo","field":[{"name":"location","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.SourceCodeInfo.Location","jsonName":"location"}],"nestedType":[{"name":"Location","field":[{"name":"path","number":1,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"path","options":{"packed":true}},{"name":"span","number":2,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"span","options":{"packed":true}},{"name":"leading_comments","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"leadingComments"},{"name":"trailing_comments","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"trailingComments"},{"name":"leading_detached_comments","number":6,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"leadingDetachedComments"}]}]},{"name":"GeneratedCodeInfo","field":[{"name":"annotation","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.GeneratedCodeInfo.Annotation","jsonName":"annotation"}],"nestedType":[{"name":"Annotation","field":[{"name":"path","number":1,"label":"LABEL_REPEATED","type":"TYPE_INT32","jsonName":"path","options":{"packed":true}},{"name":"source_file","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"sourceFile"},{"name":"begin","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"begin"},{"name":"end","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"end"}]}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"DescriptorProtos","optimizeFor":"SPEED","goPackage":"google.golang.org/protobuf/types/descriptorpb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.Reflection"},"sourceCodeInfo":{"location":[{"span":[39,0,910,1]},{"path":[12],"span":[39,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"," Author: kenton@google.com (Kenton Varda)\n  Based on original Protocol Buffers design by\n  Sanjay Ghemawat, Jeff Dean, and others.\n\n The messages in this file describe the definitions found in .proto files.\n A valid .proto file can be translated directly to a FileDescriptorProto\n without any other information (e.g. without reading its imports).\n"]},{"path":[2],"span":[41,0,24]},{"path":[8],"span":[43,0,68]},{"path":[8,11],"span":[43,0,68]},{"path":[8],"span":[44,0,44]},{"path":[8,1],"span":[44,0,44]},{"path":[8],"span":[45,0,49]},{"path":[8,8],"span":[45,0,49]},{"path":[8],"span":[46,0,55]},{"path":[8,37],"span":[46,0,55]},{"path":[8],"span":[47,0,33]},{"path":[8,36],"span":[47,0,33]},{"path":[8],"span":[48,0,31]},{"path":[8,31],"span":[48,0,31]},{"path":[8],"span":[52,0,28]},{"path":[8,9],"span":[52,0,28],"leadingComments":" descriptor.proto must be optimized for speed because reflection-based\n algorithms don't work during bootstrapping.\n"},{"path":[4,0],"span":[56,0,58,1],"leadingComments":" The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n"},{"path":[4,0,1],"span":[56,8,25]},{"path":[4,0,2,0],"span":[57,2,40]},{"path":[4,0,2,0,4],"span":[57,2,10]},{"path":[4,0,2,0,6],"span":[57,11,30]},{"path":[4,0,2,0,1],"span":[57,31,35]},{"path":[4,0,2,0,3],"span":[57,38,39]},{"path":[4,1],"span":[61,0,90,1],"leadingComments":" Describes a complete .proto file.\n"},{"path":[4,1,1],"span":[61,8,27]},{"path":[4,1,2,0],"span":[62,2,27],"trailingComments":" file name, relative to root of source tree\n"},{"path":[4,1,2,0,4],"span":[62,2,10]},{"path":[4,1,2,0,5],"span":[62,11,17]},{"path":[4,1,2,0,1],"span":[62,18,22]},{"path":[4,1,2,0,3],"span":[62,25,26]},{"path":[4,1,2,1],"span":[63,2,30],"trailingComments":" e.g. \"foo\", \"foo.bar\", etc.\n"},{"path":[4,1,2,1,4],"span":[63,2,10]},{"path":[4,1,2,1,5],"span":[63,11,17]},{"path":[4,1,2,1,1],"span":[63,18,25]},{"path":[4,1,2,1,3],"span":[63,28,29]},{"path":[4,1,2,2],"span":[66,2,33],"leadingComments":" Names of files imported by this file.\n"},{"path":[4,1,2,2,4],"span":[66,2,10]},{"path":[4,1,2,2,5],"span":[66,11,17]},{"path":[4,1,2,2,1],"span":[66,18,28]},{"path":[4,1,2,2,3],"span":[66,31,32]},{"path":[4,1,2,3],"span":[68,2,40],"leadingComments":" Indexes of the public imported files in the dependency list above.\n"},{"path":[4,1,2,3,4],"span":[68,2,10]},{"path":[4,1,2,3,5],"span":[68,11,16]},{"path":[4,1,2,3,1],"span":[68,17,34]},{"path":[4,1,2,3,3],"span":[68,37,39]},{"path":[4,1,2,4],"span":[71,2,38],"leadingComments":" Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n"},{"path":[4,1,2,4,4],"span":[71,2,10]},{"path":[4,1,2,4,5],"span":[71,11,16]},{"path":[4,1,2,4,1],"span":[71,17,32]},{"path":[4,1,2,4,3],"span":[71,35,37]},{"path":[4,1,2,5],"span":[74,2,44],"leadingComments":" All top-level definitions in this file.\n"},{"path":[4,1,2,5,4],"span":[74,2,10]},{"path":[4,1,2,5,6],"span":[74,11,26]},{"path":[4,1,2,5,1],"span":[74,27,39]},{"path":[4,1,2,5,3],"span":[74,42,43]},{"path":[4,1,2,6],"span":[75,2,45]},{"path":[4,1,2,6,4],"span":[75,2,10]},{"path":[4,1,2,6,6],"span":[75,11,30]},{"path":[4,1,2,6,1],"span":[75,31,40]},{"path":[4,1,2,6,3],"span":[75,43,44]},{"path":[4,1,2,7],"span":[76,2,46]},{"path":[4,1,2,7,4],"span":[76,2,10]},{"path":[4,1,2,7,6],"span":[76,11,33]},{"path":[4,1,2,7,1],"span":[76,34,41]},{"path":[4,1,2,7,3],"span":[76,44,45]},{"path":[4,1,2,8],"span":[77,2,46]},{"path":[4,1,2,8,4],"span":[77,2,10]},{"path":[4,1,2,8,6],"span":[77,11,31]},{"path":[4,1,2,8,1],"span":[77,32,41]},{"path":[4,1,2,8,3],"span":[77,44,45]},{"path":[4,1,2,9],"span":[79,2,35]},{"path":[4,1,2,9,4],"span":[79,2,10]},{"path":[4,1,2,9,6],"span":[79,11,22]},{"path":[4,1,2,9,1],"span":[79,23,30]},{"path":[4,1,2,9,3],"span":[79,33,34]},{"path":[4,1,2,10],"span":[85,2,47],"leadingComments":" This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n"},{"path":[4,1,2,10,4],"span":[85,2,10]},{"path":[4,1,2,10,6],"span":[85,11,25]},{"path":[4,1,2,10,1],"span":[85,26,42]},{"path":[4,1,2,10,3],"span":[85,45,46]},{"path":[4,1,2,11],"span":[89,2,30],"leadingComments":" The syntax of the proto file.\n The supported values are \"proto2\" and \"proto3\".\n"},{"path":[4,1,2,11,4],"span":[89,2,10]},{"path":[4,1,2,11,5],"span":[89,11,17]},{"path":[4,1,2,11,1],"span":[89,18,24]},{"path":[4,1,2,11,3],"span":[89,27,29]},{"path":[4,2],"span":[93,0,125,1],"leadingComments":" Describes a message type.\n"},{"path":[4,2,1],"span":[93,8,23]},{"path":[4,2,2,0],"span":[94,2,27]},{"path":[4,2,2,0,4],"span":[94,2,10]},{"path":[4,2,2,0,5],"span":[94,11,17]},{"path":[4,2,2,0,1],"span":[94,18,22]},{"path":[4,2,2,0,3],"span":[94,25,26]},{"path":[4,2,2,1],"span":[96,2,42]},{"path":[4,2,2,1,4],"span":[96,2,10]},{"path":[4,2,2,1,6],"span":[96,11,31]},{"path":[4,2,2,1,1],"span":[96,32,37]},{"path":[4,2,2,1,3],"span":[96,40,41]},{"path":[4,2,2,2],"span":[97,2,46]},{"path":[4,2,2,2,4],"span":[97,2,10]},{"path":[4,2,2,2,6],"span":[97,11,31]},{"path":[4,2,2,2,1],"span":[97,32,41]},{"path":[4,2,2,2,3],"span":[97,44,45]},{"path":[4,2,2,3],"span":[99,2,43]},{"path":[4,2,2,3,4],"span":[99,2,10]},{"path":[4,2,2,3,6],"span":[99,11,26]},{"path":[4,2,2,3,1],"span":[99,27,38]},{"path":[4,2,2,3,3],"span":[99,41,42]},{"path":[4,2,2,4],"span":[100,2,45]},{"path":[4,2,2,4,4],"span":[100,2,10]},{"path":[4,2,2,4,6],"span":[100,11,30]},{"path":[4,2,2,4,1],"span":[100,31,40]},{"path":[4,2,2,4,3],"span":[100,43,44]},{"path":[4,2,3,0],"span":[102,2,107,3]},{"path":[4,2,3,0,1],"span":[102,10,24]},{"path":[4,2,3,0,2,0],"span":[103,4,29],"trailingComments":" Inclusive.\n"},{"path":[4,2,3,0,2,0,4],"span":[103,4,12]},{"path":[4,2,3,0,2,0,5],"span":[103,13,18]},{"path":[4,2,3,0,2,0,1],"span":[103,19,24]},{"path":[4,2,3,0,2,0,3],"span":[103,27,28]},{"path":[4,2,3,0,2,1],"span":[104,4,27],"trailingComments":" Exclusive.\n"},{"path":[4,2,3,0,2,1,4],"span":[104,4,12]},{"path":[4,2,3,0,2,1,5],"span":[104,13,18]},{"path":[4,2,3,0,2,1,1],"span":[104,19,22]},{"path":[4,2,3,0,2,1,3],"span":[104,25,26]},{"path":[4,2,3,0,2,2],"span":[106,4,47]},{"path":[4,2,3,0,2,2,4],"span":[106,4,12]},{"path":[4,2,3,0,2,2,6],"span":[106,13,34]},{"path":[4,2,3,0,2,2,1],"span":[106,35,42]},{"path":[4,2,3,0,2,2,3],"span":[106,45,46]},{"path":[4,2,2,5],"span":[108,2,46]},{"path":[4,2,2,5,4],"span":[108,2,10]},{"path":[4,2,2,5,6],"span":[108,11,25]},{"path":[4,2,2,5,1],"span":[108,26,41]},{"path":[4,2,2,5,3],"span":[108,44,45]},{"path":[4,2,2,6],"span":[110,2,47]},{"path":[4,2,2,6,4],"span":[110,2,10]},{"path":[4,2,2,6,6],"span":[110,11,31]},{"path":[4,2,2,6,1],"span":[110,32,42]},{"path":[4,2,2,6,3],"span":[110,45,46]},{"path":[4,2,2,7],"span":[112,2,38]},{"path":[4,2,2,7,4],"span":[112,2,10]},{"path":[4,2,2,7,6],"span":[112,11,25]},{"path":[4,2,2,7,1],"span":[112,26,33]},{"path":[4,2,2,7,3],"span":[112,36,37]},{"path":[4,2,3,1],"span":[117,2,120,3],"leadingComments":" Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n"},{"path":[4,2,3,1,1],"span":[117,10,23]},{"path":[4,2,3,1,2,0],"span":[118,4,29],"trailingComments":" Inclusive.\n"},{"path":[4,2,3,1,2,0,4],"span":[118,4,12]},{"path":[4,2,3,1,2,0,5],"span":[118,13,18]},{"path":[4,2,3,1,2,0,1],"span":[118,19,24]},{"path":[4,2,3,1,2,0,3],"span":[118,27,28]},{"path":[4,2,3,1,2,1],"span":[119,4,27],"trailingComments":" Exclusive.\n"},{"path":[4,2,3,1,2,1,4],"span":[119,4,12]},{"path":[4,2,3,1,2,1,5],"span":[119,13,18]},{"path":[4,2,3,1,2,1,1],"span":[119,19,22]},{"path":[4,2,3,1,2,1,3],"span":[119,25,26]},{"path":[4,2,2,8],"span":[121,2,44]},{"path":[4,2,2,8,4],"span":[121,2,10]},{"path":[4,2,2,8,6],"span":[121,11,24]},{"path":[4,2,2,8,1],"span":[121,25,39]},{"path":[4,2,2,8,3],"span":[121,42,43]},{"path":[4,2,2,9],"span":[124,2,37],"leadingComments":" Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n"},{"path":[4,2,2,9,4],"span":[124,2,10]},{"path":[4,2,2,9,5],"span":[124,11,17]},{"path":[4,2,2,9,1],"span":[124,18,31]},{"path":[4,2,2,9,3],"span":[124,34,36]},{"path":[4,3],"span":[127,0,134,1]},{"path":[4,3,1],"span":[127,8,29]},{"path":[4,3,2,0],"span":[129,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,3,2,0,4],"span":[129,2,10]},{"path":[4,3,2,0,6],"span":[129,11,30]},{"path":[4,3,2,0,1],"span":[129,31,51]},{"path":[4,3,2,0,3],"span":[129,54,57]},{"path":[4,3,5],"span":[133,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,3,5,0],"span":[133,13,24]},{"path":[4,3,5,0,1],"span":[133,13,17]},{"path":[4,3,5,0,2],"span":[133,21,24]},{"path":[4,4],"span":[137,0,238,1],"leadingComments":" Describes a field within a message.\n"},{"path":[4,4,1],"span":[137,8,28]},{"path":[4,4,4,0],"span":[138,2,169,3]},{"path":[4,4,4,0,1],"span":[138,7,11]},{"path":[4,4,4,0,2,0],"span":[141,4,20],"leadingComments":" 0 is reserved for errors.\n Order is weird for historical reasons.\n"},{"path":[4,4,4,0,2,0,1],"span":[141,4,15]},{"path":[4,4,4,0,2,0,2],"span":[141,18,19]},{"path":[4,4,4,0,2,1],"span":[142,4,19]},{"path":[4,4,4,0,2,1,1],"span":[142,4,14]},{"path":[4,4,4,0,2,1,2],"span":[142,17,18]},{"path":[4,4,4,0,2,2],"span":[145,4,19],"leadingComments":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n"},{"path":[4,4,4,0,2,2,1],"span":[145,4,14]},{"path":[4,4,4,0,2,2,2],"span":[145,17,18]},{"path":[4,4,4,0,2,3],"span":[146,4,20]},{"path":[4,4,4,0,2,3,1],"span":[146,4,15]},{"path":[4,4,4,0,2,3,2],"span":[146,18,19]},{"path":[4,4,4,0,2,4],"span":[149,4,19],"leadingComments":" Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n"},{"path":[4,4,4,0,2,4,1],"span":[149,4,14]},{"path":[4,4,4,0,2,4,2],"span":[149,17,18]},{"path":[4,4,4,0,2,5],"span":[150,4,21]},{"path":[4,4,4,0,2,5,1],"span":[150,4,16]},{"path":[4,4,4,0,2,5,2],"span":[150,19,20]},{"path":[4,4,4,0,2,6],"span":[151,4,21]},{"path":[4,4,4,0,2,6,1],"span":[151,4,16]},{"path":[4,4,4,0,2,6,2],"span":[151,19,20]},{"path":[4,4,4,0,2,7],"span":[152,4,18]},{"path":[4,4,4,0,2,7,1],"span":[152,4,13]},{"path":[4,4,4,0,2,7,2],"span":[152,16,17]},{"path":[4,4,4,0,2,8],"span":[153,4,20]},{"path":[4,4,4,0,2,8,1],"span":[153,4,15]},{"path":[4,4,4,0,2,8,2],"span":[153,18,19]},{"path":[4,4,4,0,2,9],"span":[158,4,20],"leadingComments":" Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n"},{"path":[4,4,4,0,2,9,1],"span":[158,4,14]},{"path":[4,4,4,0,2,9,2],"span":[158,17,19]},{"path":[4,4,4,0,2,10],"span":[159,4,22],"trailingComments":" Length-delimited aggregate.\n"},{"path":[4,4,4,0,2,10,1],"span":[159,4,16]},{"path":[4,4,4,0,2,10,2],"span":[159,19,21]},{"path":[4,4,4,0,2,11],"span":[162,4,20],"leadingComments":" New in version 2.\n"},{"path":[4,4,4,0,2,11,1],"span":[162,4,14]},{"path":[4,4,4,0,2,11,2],"span":[162,17,19]},{"path":[4,4,4,0,2,12],"span":[163,4,21]},{"path":[4,4,4,0,2,12,1],"span":[163,4,15]},{"path":[4,4,4,0,2,12,2],"span":[163,18,20]},{"path":[4,4,4,0,2,13],"span":[164,4,19]},{"path":[4,4,4,0,2,13,1],"span":[164,4,13]},{"path":[4,4,4,0,2,13,2],"span":[164,16,18]},{"path":[4,4,4,0,2,14],"span":[165,4,23]},{"path":[4,4,4,0,2,14,1],"span":[165,4,17]},{"path":[4,4,4,0,2,14,2],"span":[165,20,22]},{"path":[4,4,4,0,2,15],"span":[166,4,23]},{"path":[4,4,4,0,2,15,1],"span":[166,4,17]},{"path":[4,4,4,0,2,15,2],"span":[166,20,22]},{"path":[4,4,4,0,2,16],"span":[167,4,21],"trailingComments":" Uses ZigZag encoding.\n"},{"path":[4,4,4,0,2,16,1],"span":[167,4,15]},{"path":[4,4,4,0,2,16,2],"span":[167,18,20]},{"path":[4,4,4,0,2,17],"span":[168,4,21],"trailingComments":" Uses ZigZag encoding.\n"},{"path":[4,4,4,0,2,17,1],"span":[168,4,15]},{"path":[4,4,4,0,2,17,2],"span":[168,18,20]},{"path":[4,4,4,1],"span":[171,2,176,3]},{"path":[4,4,4,1,1],"span":[171,7,12]},{"path":[4,4,4,1,2,0],"span":[173,4,23],"leadingComments":" 0 is reserved for errors\n"},{"path":[4,4,4,1,2,0,1],"span":[173,4,18]},{"path":[4,4,4,1,2,0,2],"span":[173,21,22]},{"path":[4,4,4,1,2,1],"span":[174,4,23]},{"path":[4,4,4,1,2,1,1],"span":[174,4,18]},{"path":[4,4,4,1,2,1,2],"span":[174,21,22]},{"path":[4,4,4,1,2,2],"span":[175,4,23]},{"path":[4,4,4,1,2,2,1],"span":[175,4,18]},{"path":[4,4,4,1,2,2,2],"span":[175,21,22]},{"path":[4,4,2,0],"span":[178,2,27]},{"path":[4,4,2,0,4],"span":[178,2,10]},{"path":[4,4,2,0,5],"span":[178,11,17]},{"path":[4,4,2,0,1],"span":[178,18,22]},{"path":[4,4,2,0,3],"span":[178,25,26]},{"path":[4,4,2,1],"span":[179,2,28]},{"path":[4,4,2,1,4],"span":[179,2,10]},{"path":[4,4,2,1,5],"span":[179,11,16]},{"path":[4,4,2,1,1],"span":[179,17,23]},{"path":[4,4,2,1,3],"span":[179,26,27]},{"path":[4,4,2,2],"span":[180,2,27]},{"path":[4,4,2,2,4],"span":[180,2,10]},{"path":[4,4,2,2,6],"span":[180,11,16]},{"path":[4,4,2,2,1],"span":[180,17,22]},{"path":[4,4,2,2,3],"span":[180,25,26]},{"path":[4,4,2,3],"span":[184,2,25],"leadingComments":" If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n"},{"path":[4,4,2,3,4],"span":[184,2,10]},{"path":[4,4,2,3,6],"span":[184,11,15]},{"path":[4,4,2,3,1],"span":[184,16,20]},{"path":[4,4,2,3,3],"span":[184,23,24]},{"path":[4,4,2,4],"span":[191,2,32],"leadingComments":" For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n"},{"path":[4,4,2,4,4],"span":[191,2,10]},{"path":[4,4,2,4,5],"span":[191,11,17]},{"path":[4,4,2,4,1],"span":[191,18,27]},{"path":[4,4,2,4,3],"span":[191,30,31]},{"path":[4,4,2,5],"span":[195,2,31],"leadingComments":" For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n"},{"path":[4,4,2,5,4],"span":[195,2,10]},{"path":[4,4,2,5,5],"span":[195,11,17]},{"path":[4,4,2,5,1],"span":[195,18,26]},{"path":[4,4,2,5,3],"span":[195,29,30]},{"path":[4,4,2,6],"span":[202,2,36],"leadingComments":" For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n TODO(kenton):  Base-64 encode?\n"},{"path":[4,4,2,6,4],"span":[202,2,10]},{"path":[4,4,2,6,5],"span":[202,11,17]},{"path":[4,4,2,6,1],"span":[202,18,31]},{"path":[4,4,2,6,3],"span":[202,34,35]},{"path":[4,4,2,7],"span":[206,2,33],"leadingComments":" If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n"},{"path":[4,4,2,7,4],"span":[206,2,10]},{"path":[4,4,2,7,5],"span":[206,11,16]},{"path":[4,4,2,7,1],"span":[206,17,28]},{"path":[4,4,2,7,3],"span":[206,31,32]},{"path":[4,4,2,8],"span":[212,2,33],"leadingComments":" JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n"},{"path":[4,4,2,8,4],"span":[212,2,10]},{"path":[4,4,2,8,5],"span":[212,11,17]},{"path":[4,4,2,8,1],"span":[212,18,27]},{"path":[4,4,2,8,3],"span":[212,30,32]},{"path":[4,4,2,9],"span":[214,2,36]},{"path":[4,4,2,9,4],"span":[214,2,10]},{"path":[4,4,2,9,6],"span":[214,11,23]},{"path":[4,4,2,9,1],"span":[214,24,31]},{"path":[4,4,2,9,3],"span":[214,34,35]},{"path":[4,4,2,10],"span":[237,2,37],"leadingComments":" If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n tracks presence regardless of field type.\n\n When proto3_optional is true, this field must be belong to a oneof to\n signal to old proto3 clients that presence is tracked for this field. This\n oneof is known as a \"synthetic\" oneof, and this field must be its sole\n member (each proto3 optional field gets its own synthetic oneof). Synthetic\n oneofs exist in the descriptor only, and do not generate any API. Synthetic\n oneofs must be ordered after all \"real\" oneofs.\n\n For message fields, proto3_optional doesn't create any semantic change,\n since non-repeated message fields always track presence. However it still\n indicates the semantic detail of whether the user wrote \"optional\" or not.\n This can be useful for round-tripping the .proto file. For consistency we\n give message fields a synthetic oneof also, even though it is not required\n to track presence. This is especially important because the parser can't\n tell if a field is a message or an enum, so it must always create a\n synthetic oneof.\n\n Proto2 optional fields do not set this flag, because they already indicate\n optional with `LABEL_OPTIONAL`.\n"},{"path":[4,4,2,10,4],"span":[237,2,10]},{"path":[4,4,2,10,5],"span":[237,11,15]},{"path":[4,4,2,10,1],"span":[237,16,31]},{"path":[4,4,2,10,3],"span":[237,34,36]},{"path":[4,5],"span":[241,0,244,1],"leadingComments":" Describes a oneof.\n"},{"path":[4,5,1],"span":[241,8,28]},{"path":[4,5,2,0],"span":[242,2,27]},{"path":[4,5,2,0,4],"span":[242,2,10]},{"path":[4,5,2,0,5],"span":[242,11,17]},{"path":[4,5,2,0,1],"span":[242,18,22]},{"path":[4,5,2,0,3],"span":[242,25,26]},{"path":[4,5,2,1],"span":[243,2,36]},{"path":[4,5,2,1,4],"span":[243,2,10]},{"path":[4,5,2,1,6],"span":[243,11,23]},{"path":[4,5,2,1,1],"span":[243,24,31]},{"path":[4,5,2,1,3],"span":[243,34,35]},{"path":[4,6],"span":[247,0,273,1],"leadingComments":" Describes an enum type.\n"},{"path":[4,6,1],"span":[247,8,27]},{"path":[4,6,2,0],"span":[248,2,27]},{"path":[4,6,2,0,4],"span":[248,2,10]},{"path":[4,6,2,0,5],"span":[248,11,17]},{"path":[4,6,2,0,1],"span":[248,18,22]},{"path":[4,6,2,0,3],"span":[248,25,26]},{"path":[4,6,2,1],"span":[250,2,46]},{"path":[4,6,2,1,4],"span":[250,2,10]},{"path":[4,6,2,1,6],"span":[250,11,35]},{"path":[4,6,2,1,1],"span":[250,36,41]},{"path":[4,6,2,1,3],"span":[250,44,45]},{"path":[4,6,2,2],"span":[252,2,35]},{"path":[4,6,2,2,4],"span":[252,2,10]},{"path":[4,6,2,2,6],"span":[252,11,22]},{"path":[4,6,2,2,1],"span":[252,23,30]},{"path":[4,6,2,2,3],"span":[252,33,34]},{"path":[4,6,3,0],"span":[260,2,263,3],"leadingComments":" Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.\n\n Note that this is distinct from DescriptorProto.ReservedRange in that it\n is inclusive such that it can appropriately represent the entire int32\n domain.\n"},{"path":[4,6,3,0,1],"span":[260,10,27]},{"path":[4,6,3,0,2,0],"span":[261,4,29],"trailingComments":" Inclusive.\n"},{"path":[4,6,3,0,2,0,4],"span":[261,4,12]},{"path":[4,6,3,0,2,0,5],"span":[261,13,18]},{"path":[4,6,3,0,2,0,1],"span":[261,19,24]},{"path":[4,6,3,0,2,0,3],"span":[261,27,28]},{"path":[4,6,3,0,2,1],"span":[262,4,27],"trailingComments":" Inclusive.\n"},{"path":[4,6,3,0,2,1,4],"span":[262,4,12]},{"path":[4,6,3,0,2,1,5],"span":[262,13,18]},{"path":[4,6,3,0,2,1,1],"span":[262,19,22]},{"path":[4,6,3,0,2,1,3],"span":[262,25,26]},{"path":[4,6,2,3],"span":[268,2,48],"leadingComments":" Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n"},{"path":[4,6,2,3,4],"span":[268,2,10]},{"path":[4,6,2,3,6],"span":[268,11,28]},{"path":[4,6,2,3,1],"span":[268,29,43]},{"path":[4,6,2,3,3],"span":[268,46,47]},{"path":[4,6,2,4],"span":[272,2,36],"leadingComments":" Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n"},{"path":[4,6,2,4,4],"span":[272,2,10]},{"path":[4,6,2,4,5],"span":[272,11,17]},{"path":[4,6,2,4,1],"span":[272,18,31]},{"path":[4,6,2,4,3],"span":[272,34,35]},{"path":[4,7],"span":[276,0,281,1],"leadingComments":" Describes a value within an enum.\n"},{"path":[4,7,1],"span":[276,8,32]},{"path":[4,7,2,0],"span":[277,2,27]},{"path":[4,7,2,0,4],"span":[277,2,10]},{"path":[4,7,2,0,5],"span":[277,11,17]},{"path":[4,7,2,0,1],"span":[277,18,22]},{"path":[4,7,2,0,3],"span":[277,25,26]},{"path":[4,7,2,1],"span":[278,2,28]},{"path":[4,7,2,1,4],"span":[278,2,10]},{"path":[4,7,2,1,5],"span":[278,11,16]},{"path":[4,7,2,1,1],"span":[278,17,23]},{"path":[4,7,2,1,3],"span":[278,26,27]},{"path":[4,7,2,2],"span":[280,2,40]},{"path":[4,7,2,2,4],"span":[280,2,10]},{"path":[4,7,2,2,6],"span":[280,11,27]},{"path":[4,7,2,2,1],"span":[280,28,35]},{"path":[4,7,2,2,3],"span":[280,38,39]},{"path":[4,8],"span":[284,0,289,1],"leadingComments":" Describes a service.\n"},{"path":[4,8,1],"span":[284,8,30]},{"path":[4,8,2,0],"span":[285,2,27]},{"path":[4,8,2,0,4],"span":[285,2,10]},{"path":[4,8,2,0,5],"span":[285,11,17]},{"path":[4,8,2,0,1],"span":[285,18,22]},{"path":[4,8,2,0,3],"span":[285,25,26]},{"path":[4,8,2,1],"span":[286,2,44]},{"path":[4,8,2,1,4],"span":[286,2,10]},{"path":[4,8,2,1,6],"span":[286,11,32]},{"path":[4,8,2,1,1],"span":[286,33,39]},{"path":[4,8,2,1,3],"span":[286,42,43]},{"path":[4,8,2,2],"span":[288,2,38]},{"path":[4,8,2,2,4],"span":[288,2,10]},{"path":[4,8,2,2,6],"span":[288,11,25]},{"path":[4,8,2,2,1],"span":[288,26,33]},{"path":[4,8,2,2,3],"span":[288,36,37]},{"path":[4,9],"span":[292,0,306,1],"leadingComments":" Describes a method of a service.\n"},{"path":[4,9,1],"span":[292,8,29]},{"path":[4,9,2,0],"span":[293,2,27]},{"path":[4,9,2,0,4],"span":[293,2,10]},{"path":[4,9,2,0,5],"span":[293,11,17]},{"path":[4,9,2,0,1],"span":[293,18,22]},{"path":[4,9,2,0,3],"span":[293,25,26]},{"path":[4,9,2,1],"span":[297,2,33],"leadingComments":" Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n"},{"path":[4,9,2,1,4],"span":[297,2,10]},{"path":[4,9,2,1,5],"span":[297,11,17]},{"path":[4,9,2,1,1],"span":[297,18,28]},{"path":[4,9,2,1,3],"span":[297,31,32]},{"path":[4,9,2,2],"span":[298,2,34]},{"path":[4,9,2,2,4],"span":[298,2,10]},{"path":[4,9,2,2,5],"span":[298,11,17]},{"path":[4,9,2,2,1],"span":[298,18,29]},{"path":[4,9,2,2,3],"span":[298,32,33]},{"path":[4,9,2,3],"span":[300,2,37]},{"path":[4,9,2,3,4],"span":[300,2,10]},{"path":[4,9,2,3,6],"span":[300,11,24]},{"path":[4,9,2,3,1],"span":[300,25,32]},{"path":[4,9,2,3,3],"span":[300,35,36]},{"path":[4,9,2,4],"span":[303,2,55],"leadingComments":" Identifies if client streams multiple client messages\n"},{"path":[4,9,2,4,4],"span":[303,2,10]},{"path":[4,9,2,4,5],"span":[303,11,15]},{"path":[4,9,2,4,1],"span":[303,16,32]},{"path":[4,9,2,4,3],"span":[303,35,36]},{"path":[4,9,2,4,8],"span":[303,37,54]},{"path":[4,9,2,4,7],"span":[303,38,53]},{"path":[4,9,2,5],"span":[305,2,55],"leadingComments":" Identifies if server streams multiple server messages\n"},{"path":[4,9,2,5,4],"span":[305,2,10]},{"path":[4,9,2,5,5],"span":[305,11,15]},{"path":[4,9,2,5,1],"span":[305,16,32]},{"path":[4,9,2,5,3],"span":[305,35,36]},{"path":[4,9,2,5,8],"span":[305,37,54]},{"path":[4,9,2,5,7],"span":[305,38,53]},{"path":[4,10],"span":[341,0,464,1],"leadingDetachedComments":[" ===================================================================\n Options\n"," Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.\n\n Clients may define custom options as extensions of the *Options messages.\n These extensions may not yet be known at parsing time, so the parser cannot\n store the values in them.  Instead it stores them in a field in the *Options\n message called uninterpreted_option. This field must have the same name\n across all *Options messages. We then use this field to populate the\n extensions when we build a descriptor, at which point all protos have been\n parsed and so all extensions are known.\n\n Extension numbers for custom options may be chosen as follows:\n * For options which will only be used within a single application or\n   organization, or for experimental options, use field numbers 50000\n   through 99999.  It is up to you to ensure that you do not use the\n   same number for multiple options.\n * For options which will be published and used publicly by multiple\n   independent entities, e-mail protobuf-global-extension-registry@google.com\n   to reserve extension numbers. Simply provide your project name (e.g.\n   Objective-C plugin) and your project website (if available) -- there's no\n   need to explain how you intend to use them. Usually you only need one\n   extension number. You can declare multiple options with only one extension\n   number by putting them in a sub-message. See the Custom Options section of\n   the docs for examples:\n   https://developers.google.com/protocol-buffers/docs/proto#options\n   If this turns out to be popular, a web service will be set up\n   to automatically assign option numbers.\n"]},{"path":[4,10,1],"span":[341,8,19]},{"path":[4,10,2,0],"span":[347,2,35],"leadingComments":" Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n"},{"path":[4,10,2,0,4],"span":[347,2,10]},{"path":[4,10,2,0,5],"span":[347,11,17]},{"path":[4,10,2,0,1],"span":[347,18,30]},{"path":[4,10,2,0,3],"span":[347,33,34]},{"path":[4,10,2,1],"span":[355,2,43],"leadingComments":" Controls the name of the wrapper Java class generated for the .proto file.\n That class will always contain the .proto file's getDescriptor() method as\n well as any top-level extensions defined in the .proto file.\n If java_multiple_files is disabled, then all the other classes from the\n .proto file will be nested inside the single wrapper outer class.\n"},{"path":[4,10,2,1,4],"span":[355,2,10]},{"path":[4,10,2,1,5],"span":[355,11,17]},{"path":[4,10,2,1,1],"span":[355,18,38]},{"path":[4,10,2,1,3],"span":[355,41,42]},{"path":[4,10,2,2],"span":[363,2,59],"leadingComments":" If enabled, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the wrapper class\n named by java_outer_classname.  However, the wrapper class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n"},{"path":[4,10,2,2,4],"span":[363,2,10]},{"path":[4,10,2,2,5],"span":[363,11,15]},{"path":[4,10,2,2,1],"span":[363,16,35]},{"path":[4,10,2,2,3],"span":[363,38,40]},{"path":[4,10,2,2,8],"span":[363,41,58]},{"path":[4,10,2,2,7],"span":[363,42,57]},{"path":[4,10,2,3],"span":[366,2,69],"leadingComments":" This option does nothing.\n"},{"path":[4,10,2,3,4],"span":[366,2,10]},{"path":[4,10,2,3,5],"span":[366,11,15]},{"path":[4,10,2,3,1],"span":[366,16,45]},{"path":[4,10,2,3,3],"span":[366,48,50]},{"path":[4,10,2,3,8],"span":[366,51,68]},{"path":[4,10,2,3,8,3],"span":[366,52,67]},{"path":[4,10,2,4],"span":[374,2,62],"leadingComments":" If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n"},{"path":[4,10,2,4,4],"span":[374,2,10]},{"path":[4,10,2,4,5],"span":[374,11,15]},{"path":[4,10,2,4,1],"span":[374,16,38]},{"path":[4,10,2,4,3],"span":[374,41,43]},{"path":[4,10,2,4,8],"span":[374,44,61]},{"path":[4,10,2,4,7],"span":[374,45,60]},{"path":[4,10,4,0],"span":[378,2,383,3],"leadingComments":" Generated classes can be optimized for speed or code size.\n"},{"path":[4,10,4,0,1],"span":[378,7,19]},{"path":[4,10,4,0,2,0],"span":[379,4,14],"trailingComments":" Generate complete code for parsing, serialization,\n"},{"path":[4,10,4,0,2,0,1],"span":[379,4,9]},{"path":[4,10,4,0,2,0,2],"span":[379,12,13]},{"path":[4,10,4,0,2,1],"span":[381,4,18],"leadingComments":" etc.\n","trailingComments":" Use ReflectionOps to implement these methods.\n"},{"path":[4,10,4,0,2,1,1],"span":[381,4,13]},{"path":[4,10,4,0,2,1,2],"span":[381,16,17]},{"path":[4,10,4,0,2,2],"span":[382,4,21],"trailingComments":" Generate code using MessageLite and the lite runtime.\n"},{"path":[4,10,4,0,2,2,1],"span":[382,4,16]},{"path":[4,10,4,0,2,2,2],"span":[382,19,20]},{"path":[4,10,2,5],"span":[384,2,59]},{"path":[4,10,2,5,4],"span":[384,2,10]},{"path":[4,10,2,5,6],"span":[384,11,23]},{"path":[4,10,2,5,1],"span":[384,24,36]},{"path":[4,10,2,5,3],"span":[384,39,40]},{"path":[4,10,2,5,8],"span":[384,41,58]},{"path":[4,10,2,5,7],"span":[384,42,57]},{"path":[4,10,2,6],"span":[391,2,34],"leadingComments":" Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n"},{"path":[4,10,2,6,4],"span":[391,2,10]},{"path":[4,10,2,6,5],"span":[391,11,17]},{"path":[4,10,2,6,1],"span":[391,18,28]},{"path":[4,10,2,6,3],"span":[391,31,33]},{"path":[4,10,2,7],"span":[406,2,59],"leadingComments":" Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.\n\n Generic services are now considered deprecated in favor of using plugins\n that generate code specific to your particular RPC system.  Therefore,\n these default to false.  Old code which depends on generic services should\n explicitly set them to true.\n"},{"path":[4,10,2,7,4],"span":[406,2,10]},{"path":[4,10,2,7,5],"span":[406,11,15]},{"path":[4,10,2,7,1],"span":[406,16,35]},{"path":[4,10,2,7,3],"span":[406,38,40]},{"path":[4,10,2,7,8],"span":[406,41,58]},{"path":[4,10,2,7,7],"span":[406,42,57]},{"path":[4,10,2,8],"span":[407,2,61]},{"path":[4,10,2,8,4],"span":[407,2,10]},{"path":[4,10,2,8,5],"span":[407,11,15]},{"path":[4,10,2,8,1],"span":[407,16,37]},{"path":[4,10,2,8,3],"span":[407,40,42]},{"path":[4,10,2,8,8],"span":[407,43,60]},{"path":[4,10,2,8,7],"span":[407,44,59]},{"path":[4,10,2,9],"span":[408,2,59]},{"path":[4,10,2,9,4],"span":[408,2,10]},{"path":[4,10,2,9,5],"span":[408,11,15]},{"path":[4,10,2,9,1],"span":[408,16,35]},{"path":[4,10,2,9,3],"span":[408,38,40]},{"path":[4,10,2,9,8],"span":[408,41,58]},{"path":[4,10,2,9,7],"span":[408,42,57]},{"path":[4,10,2,10],"span":[409,2,60]},{"path":[4,10,2,10,4],"span":[409,2,10]},{"path":[4,10,2,10,5],"span":[409,11,15]},{"path":[4,10,2,10,1],"span":[409,16,36]},{"path":[4,10,2,10,3],"span":[409,39,41]},{"path":[4,10,2,10,8],"span":[409,42,59]},{"path":[4,10,2,10,7],"span":[409,43,58]},{"path":[4,10,2,11],"span":[415,2,50],"leadingComments":" Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n"},{"path":[4,10,2,11,4],"span":[415,2,10]},{"path":[4,10,2,11,5],"span":[415,11,15]},{"path":[4,10,2,11,1],"span":[415,16,26]},{"path":[4,10,2,11,3],"span":[415,29,31]},{"path":[4,10,2,11,8],"span":[415,32,49]},{"path":[4,10,2,11,7],"span":[415,33,48]},{"path":[4,10,2,12],"span":[419,2,55],"leadingComments":" Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n"},{"path":[4,10,2,12,4],"span":[419,2,10]},{"path":[4,10,2,12,5],"span":[419,11,15]},{"path":[4,10,2,12,1],"span":[419,16,32]},{"path":[4,10,2,12,3],"span":[419,35,37]},{"path":[4,10,2,12,8],"span":[419,38,54]},{"path":[4,10,2,12,7],"span":[419,39,53]},{"path":[4,10,2,13],"span":[424,2,41],"leadingComments":" Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n"},{"path":[4,10,2,13,4],"span":[424,2,10]},{"path":[4,10,2,13,5],"span":[424,11,17]},{"path":[4,10,2,13,1],"span":[424,18,35]},{"path":[4,10,2,13,3],"span":[424,38,40]},{"path":[4,10,2,14],"span":[427,2,40],"leadingComments":" Namespace for generated classes; defaults to the package.\n"},{"path":[4,10,2,14,4],"span":[427,2,10]},{"path":[4,10,2,14,5],"span":[427,11,17]},{"path":[4,10,2,14,1],"span":[427,18,34]},{"path":[4,10,2,14,3],"span":[427,37,39]},{"path":[4,10,2,15],"span":[433,2,36],"leadingComments":" By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n"},{"path":[4,10,2,15,4],"span":[433,2,10]},{"path":[4,10,2,15,5],"span":[433,11,17]},{"path":[4,10,2,15,1],"span":[433,18,30]},{"path":[4,10,2,15,3],"span":[433,33,35]},{"path":[4,10,2,16],"span":[437,2,40],"leadingComments":" Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n"},{"path":[4,10,2,16,4],"span":[437,2,10]},{"path":[4,10,2,16,5],"span":[437,11,17]},{"path":[4,10,2,16,1],"span":[437,18,34]},{"path":[4,10,2,16,3],"span":[437,37,39]},{"path":[4,10,2,17],"span":[442,2,37],"leadingComments":" Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n"},{"path":[4,10,2,17,4],"span":[442,2,10]},{"path":[4,10,2,17,5],"span":[442,11,17]},{"path":[4,10,2,17,1],"span":[442,18,31]},{"path":[4,10,2,17,3],"span":[442,34,36]},{"path":[4,10,2,18],"span":[447,2,46],"leadingComments":" Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n"},{"path":[4,10,2,18,4],"span":[447,2,10]},{"path":[4,10,2,18,5],"span":[447,11,17]},{"path":[4,10,2,18,1],"span":[447,18,40]},{"path":[4,10,2,18,3],"span":[447,43,45]},{"path":[4,10,2,19],"span":[452,2,36],"leadingComments":" Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n"},{"path":[4,10,2,19,4],"span":[452,2,10]},{"path":[4,10,2,19,5],"span":[452,11,17]},{"path":[4,10,2,19,1],"span":[452,18,30]},{"path":[4,10,2,19,3],"span":[452,33,35]},{"path":[4,10,2,20],"span":[457,2,58],"leadingComments":" The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n"},{"path":[4,10,2,20,4],"span":[457,2,10]},{"path":[4,10,2,20,6],"span":[457,11,30]},{"path":[4,10,2,20,1],"span":[457,31,51]},{"path":[4,10,2,20,3],"span":[457,54,57]},{"path":[4,10,5],"span":[461,2,25],"leadingComments":" Clients can define custom options in extensions of this message.\n See the documentation for the \"Options\" section above.\n"},{"path":[4,10,5,0],"span":[461,13,24]},{"path":[4,10,5,0,1],"span":[461,13,17]},{"path":[4,10,5,0,2],"span":[461,21,24]},{"path":[4,10,9],"span":[463,2,14]},{"path":[4,10,9,0],"span":[463,11,13]},{"path":[4,10,9,0,1],"span":[463,11,13]},{"path":[4,11],"span":[466,0,532,1]},{"path":[4,11,1],"span":[466,8,22]},{"path":[4,11,2,0],"span":[485,2,62],"leadingComments":" Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.\n\n The message must be defined exactly as follows:\n   message Foo {\n     option message_set_wire_format = true;\n     extensions 4 to max;\n   }\n Note that the message cannot have any defined fields; MessageSets only\n have extensions.\n\n All extensions of your type must be singular messages; e.g. they cannot\n be int32s, enums, or repeated messages.\n\n Because this is an option, the above two restrictions are not enforced by\n the protocol compiler.\n"},{"path":[4,11,2,0,4],"span":[485,2,10]},{"path":[4,11,2,0,5],"span":[485,11,15]},{"path":[4,11,2,0,1],"span":[485,16,39]},{"path":[4,11,2,0,3],"span":[485,42,43]},{"path":[4,11,2,0,8],"span":[485,44,61]},{"path":[4,11,2,0,7],"span":[485,45,60]},{"path":[4,11,2,1],"span":[490,2,70],"leadingComments":" Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n"},{"path":[4,11,2,1,4],"span":[490,2,10]},{"path":[4,11,2,1,5],"span":[490,11,15]},{"path":[4,11,2,1,1],"span":[490,16,47]},{"path":[4,11,2,1,3],"span":[490,50,51]},{"path":[4,11,2,1,8],"span":[490,52,69]},{"path":[4,11,2,1,7],"span":[490,53,68]},{"path":[4,11,2,2],"span":[496,2,49],"leadingComments":" Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n"},{"path":[4,11,2,2,4],"span":[496,2,10]},{"path":[4,11,2,2,5],"span":[496,11,15]},{"path":[4,11,2,2,1],"span":[496,16,26]},{"path":[4,11,2,2,3],"span":[496,29,30]},{"path":[4,11,2,2,8],"span":[496,31,48]},{"path":[4,11,2,2,7],"span":[496,32,47]},{"path":[4,11,9],"span":[498,2,19]},{"path":[4,11,9,0],"span":[498,11,12]},{"path":[4,11,9,0,1],"span":[498,11,12]},{"path":[4,11,9,1],"span":[498,14,15]},{"path":[4,11,9,1,1],"span":[498,14,15]},{"path":[4,11,9,2],"span":[498,17,18]},{"path":[4,11,9,2,1],"span":[498,17,18]},{"path":[4,11,2,3],"span":[521,2,30],"leadingComments":" Whether the message is an automatically generated map entry type for the\n maps field.\n\n For maps fields:\n     map<KeyType, ValueType> map_field = 1;\n The parsed descriptor looks like:\n     message MapFieldEntry {\n         option map_entry = true;\n         optional KeyType key = 1;\n         optional ValueType value = 2;\n     }\n     repeated MapFieldEntry map_field = 1;\n\n Implementations may choose not to generate the map_entry=true message, but\n use a native map in the target language to hold the keys and values.\n The reflection APIs in such implementations still need to work as\n if the field is a repeated message field.\n\n NOTE: Do not set the option in .proto files. Always use the maps syntax\n instead. The option should only be implicitly set by the proto compiler\n parser.\n"},{"path":[4,11,2,3,4],"span":[521,2,10]},{"path":[4,11,2,3,5],"span":[521,11,15]},{"path":[4,11,2,3,1],"span":[521,16,25]},{"path":[4,11,2,3,3],"span":[521,28,29]},{"path":[4,11,9],"span":[523,2,13],"trailingComments":" javalite_serializable\n"},{"path":[4,11,9,3],"span":[523,11,12]},{"path":[4,11,9,3,1],"span":[523,11,12]},{"path":[4,11,9],"span":[524,2,13],"trailingComments":" javanano_as_lite\n"},{"path":[4,11,9,4],"span":[524,11,12]},{"path":[4,11,9,4,1],"span":[524,11,12]},{"path":[4,11,2,4],"span":[528,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,11,2,4,4],"span":[528,2,10]},{"path":[4,11,2,4,6],"span":[528,11,30]},{"path":[4,11,2,4,1],"span":[528,31,51]},{"path":[4,11,2,4,3],"span":[528,54,57]},{"path":[4,11,5],"span":[531,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,11,5,0],"span":[531,13,24]},{"path":[4,11,5,0,1],"span":[531,13,17]},{"path":[4,11,5,0,2],"span":[531,21,24]},{"path":[4,12],"span":[534,0,625,1]},{"path":[4,12,1],"span":[534,8,20]},{"path":[4,12,2,0],"span":[539,2,46],"leadingComments":" The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is not yet implemented in the open source\n release -- sorry, we'll try to include it in a future version!\n"},{"path":[4,12,2,0,4],"span":[539,2,10]},{"path":[4,12,2,0,6],"span":[539,11,16]},{"path":[4,12,2,0,1],"span":[539,17,22]},{"path":[4,12,2,0,3],"span":[539,25,26]},{"path":[4,12,2,0,8],"span":[539,27,45]},{"path":[4,12,2,0,7],"span":[539,28,44]},{"path":[4,12,4,0],"span":[540,2,547,3]},{"path":[4,12,4,0,1],"span":[540,7,12]},{"path":[4,12,4,0,2,0],"span":[542,4,15],"leadingComments":" Default mode.\n"},{"path":[4,12,4,0,2,0,1],"span":[542,4,10]},{"path":[4,12,4,0,2,0,2],"span":[542,13,14]},{"path":[4,12,4,0,2,1],"span":[544,4,13]},{"path":[4,12,4,0,2,1,1],"span":[544,4,8]},{"path":[4,12,4,0,2,1,2],"span":[544,11,12]},{"path":[4,12,4,0,2,2],"span":[546,4,21]},{"path":[4,12,4,0,2,2,1],"span":[546,4,16]},{"path":[4,12,4,0,2,2,2],"span":[546,19,20]},{"path":[4,12,2,1],"span":[553,2,27],"leadingComments":" The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n"},{"path":[4,12,2,1,4],"span":[553,2,10]},{"path":[4,12,2,1,5],"span":[553,11,15]},{"path":[4,12,2,1,1],"span":[553,16,22]},{"path":[4,12,2,1,3],"span":[553,25,26]},{"path":[4,12,2,2],"span":[566,2,51],"leadingComments":" The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.\n\n This option is an enum to permit additional types to be added, e.g.\n goog.math.Integer.\n"},{"path":[4,12,2,2,4],"span":[566,2,10]},{"path":[4,12,2,2,6],"span":[566,11,17]},{"path":[4,12,2,2,1],"span":[566,18,24]},{"path":[4,12,2,2,3],"span":[566,27,28]},{"path":[4,12,2,2,8],"span":[566,29,50]},{"path":[4,12,2,2,7],"span":[566,30,49]},{"path":[4,12,4,1],"span":[567,2,576,3]},{"path":[4,12,4,1,1],"span":[567,7,13]},{"path":[4,12,4,1,2,0],"span":[569,4,18],"leadingComments":" Use the default type.\n"},{"path":[4,12,4,1,2,0,1],"span":[569,4,13]},{"path":[4,12,4,1,2,0,2],"span":[569,16,17]},{"path":[4,12,4,1,2,1],"span":[572,4,18],"leadingComments":" Use JavaScript strings.\n"},{"path":[4,12,4,1,2,1,1],"span":[572,4,13]},{"path":[4,12,4,1,2,1,2],"span":[572,16,17]},{"path":[4,12,4,1,2,2],"span":[575,4,18],"leadingComments":" Use JavaScript numbers.\n"},{"path":[4,12,4,1,2,2,1],"span":[575,4,13]},{"path":[4,12,4,1,2,2,2],"span":[575,16,17]},{"path":[4,12,2,3],"span":[606,2,43],"leadingComments":" Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.\n\n This is only a hint.  Implementations are free to choose whether to use\n eager or lazy parsing regardless of the value of this option.  However,\n setting this option true suggests that the protocol author believes that\n using lazy parsing on this field is worth the additional bookkeeping\n overhead typically needed to implement it.\n\n This option does not affect the public interface of any generated code;\n all method signatures remain the same.  Furthermore, thread-safety of the\n interface is not affected by this option; const methods remain safe to\n call from multiple threads concurrently, while non-const methods continue\n to require exclusive access.\n\n\n Note that implementations may choose not to check required fields within\n a lazy sub-message.  That is, calling IsInitialized() on the outer message\n may return true even if the inner message has missing required fields.\n This is necessary because otherwise the inner message would have to be\n parsed in order to perform the check, defeating the purpose of lazy\n parsing.  An implementation which chooses not to check required fields\n must be consistent about it.  That is, for any particular sub-message, the\n implementation must either *always* check its required fields, or *never*\n check its required fields, regardless of whether or not the message has\n been parsed.\n"},{"path":[4,12,2,3,4],"span":[606,2,10]},{"path":[4,12,2,3,5],"span":[606,11,15]},{"path":[4,12,2,3,1],"span":[606,16,20]},{"path":[4,12,2,3,3],"span":[606,23,24]},{"path":[4,12,2,3,8],"span":[606,25,42]},{"path":[4,12,2,3,7],"span":[606,26,41]},{"path":[4,12,2,4],"span":[612,2,49],"leadingComments":" Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n"},{"path":[4,12,2,4,4],"span":[612,2,10]},{"path":[4,12,2,4,5],"span":[612,11,15]},{"path":[4,12,2,4,1],"span":[612,16,26]},{"path":[4,12,2,4,3],"span":[612,29,30]},{"path":[4,12,2,4,8],"span":[612,31,48]},{"path":[4,12,2,4,7],"span":[612,32,47]},{"path":[4,12,2,5],"span":[615,2,44],"leadingComments":" For Google-internal migration only. Do not use.\n"},{"path":[4,12,2,5,4],"span":[615,2,10]},{"path":[4,12,2,5,5],"span":[615,11,15]},{"path":[4,12,2,5,1],"span":[615,16,20]},{"path":[4,12,2,5,3],"span":[615,23,25]},{"path":[4,12,2,5,8],"span":[615,26,43]},{"path":[4,12,2,5,7],"span":[615,27,42]},{"path":[4,12,2,6],"span":[619,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,12,2,6,4],"span":[619,2,10]},{"path":[4,12,2,6,6],"span":[619,11,30]},{"path":[4,12,2,6,1],"span":[619,31,51]},{"path":[4,12,2,6,3],"span":[619,54,57]},{"path":[4,12,5],"span":[622,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,12,5,0],"span":[622,13,24]},{"path":[4,12,5,0,1],"span":[622,13,17]},{"path":[4,12,5,0,2],"span":[622,21,24]},{"path":[4,12,9],"span":[624,2,13],"trailingComments":" removed jtype\n"},{"path":[4,12,9,0],"span":[624,11,12]},{"path":[4,12,9,0,1],"span":[624,11,12]},{"path":[4,13],"span":[627,0,633,1]},{"path":[4,13,1],"span":[627,8,20]},{"path":[4,13,2,0],"span":[629,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,13,2,0,4],"span":[629,2,10]},{"path":[4,13,2,0,6],"span":[629,11,30]},{"path":[4,13,2,0,1],"span":[629,31,51]},{"path":[4,13,2,0,3],"span":[629,54,57]},{"path":[4,13,5],"span":[632,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,13,5,0],"span":[632,13,24]},{"path":[4,13,5,0,1],"span":[632,13,17]},{"path":[4,13,5,0,2],"span":[632,21,24]},{"path":[4,14],"span":[635,0,654,1]},{"path":[4,14,1],"span":[635,8,19]},{"path":[4,14,2,0],"span":[639,2,32],"leadingComments":" Set this option to true to allow mapping different tag names to the same\n value.\n"},{"path":[4,14,2,0,4],"span":[639,2,10]},{"path":[4,14,2,0,5],"span":[639,11,15]},{"path":[4,14,2,0,1],"span":[639,16,27]},{"path":[4,14,2,0,3],"span":[639,30,31]},{"path":[4,14,2,1],"span":[645,2,49],"leadingComments":" Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n"},{"path":[4,14,2,1,4],"span":[645,2,10]},{"path":[4,14,2,1,5],"span":[645,11,15]},{"path":[4,14,2,1,1],"span":[645,16,26]},{"path":[4,14,2,1,3],"span":[645,29,30]},{"path":[4,14,2,1,8],"span":[645,31,48]},{"path":[4,14,2,1,7],"span":[645,32,47]},{"path":[4,14,9],"span":[647,2,13],"trailingComments":" javanano_as_lite\n"},{"path":[4,14,9,0],"span":[647,11,12]},{"path":[4,14,9,0,1],"span":[647,11,12]},{"path":[4,14,2,2],"span":[650,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,14,2,2,4],"span":[650,2,10]},{"path":[4,14,2,2,6],"span":[650,11,30]},{"path":[4,14,2,2,1],"span":[650,31,51]},{"path":[4,14,2,2,3],"span":[650,54,57]},{"path":[4,14,5],"span":[653,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,14,5,0],"span":[653,13,24]},{"path":[4,14,5,0,1],"span":[653,13,17]},{"path":[4,14,5,0,2],"span":[653,21,24]},{"path":[4,15],"span":[656,0,668,1]},{"path":[4,15,1],"span":[656,8,24]},{"path":[4,15,2,0],"span":[661,2,49],"leadingComments":" Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n"},{"path":[4,15,2,0,4],"span":[661,2,10]},{"path":[4,15,2,0,5],"span":[661,11,15]},{"path":[4,15,2,0,1],"span":[661,16,26]},{"path":[4,15,2,0,3],"span":[661,29,30]},{"path":[4,15,2,0,8],"span":[661,31,48]},{"path":[4,15,2,0,7],"span":[661,32,47]},{"path":[4,15,2,1],"span":[664,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,15,2,1,4],"span":[664,2,10]},{"path":[4,15,2,1,6],"span":[664,11,30]},{"path":[4,15,2,1,1],"span":[664,31,51]},{"path":[4,15,2,1,3],"span":[664,54,57]},{"path":[4,15,5],"span":[667,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,15,5,0],"span":[667,13,24]},{"path":[4,15,5,0,1],"span":[667,13,17]},{"path":[4,15,5,0,2],"span":[667,21,24]},{"path":[4,16],"span":[670,0,688,1]},{"path":[4,16,1],"span":[670,8,22]},{"path":[4,16,2,0],"span":[681,2,50],"leadingComments":" Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n","leadingDetachedComments":[" Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"]},{"path":[4,16,2,0,4],"span":[681,2,10]},{"path":[4,16,2,0,5],"span":[681,11,15]},{"path":[4,16,2,0,1],"span":[681,16,26]},{"path":[4,16,2,0,3],"span":[681,29,31]},{"path":[4,16,2,0,8],"span":[681,32,49]},{"path":[4,16,2,0,7],"span":[681,33,48]},{"path":[4,16,2,1],"span":[684,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,16,2,1,4],"span":[684,2,10]},{"path":[4,16,2,1,6],"span":[684,11,30]},{"path":[4,16,2,1,1],"span":[684,31,51]},{"path":[4,16,2,1,3],"span":[684,54,57]},{"path":[4,16,5],"span":[687,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,16,5,0],"span":[687,13,24]},{"path":[4,16,5,0,1],"span":[687,13,17]},{"path":[4,16,5,0,2],"span":[687,21,24]},{"path":[4,17],"span":[690,0,719,1]},{"path":[4,17,1],"span":[690,8,21]},{"path":[4,17,2,0],"span":[701,2,50],"leadingComments":" Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n","leadingDetachedComments":[" Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n"]},{"path":[4,17,2,0,4],"span":[701,2,10]},{"path":[4,17,2,0,5],"span":[701,11,15]},{"path":[4,17,2,0,1],"span":[701,16,26]},{"path":[4,17,2,0,3],"span":[701,29,31]},{"path":[4,17,2,0,8],"span":[701,32,49]},{"path":[4,17,2,0,7],"span":[701,33,48]},{"path":[4,17,4,0],"span":[706,2,710,3],"leadingComments":" Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n"},{"path":[4,17,4,0,1],"span":[706,7,23]},{"path":[4,17,4,0,2,0],"span":[707,4,28]},{"path":[4,17,4,0,2,0,1],"span":[707,4,23]},{"path":[4,17,4,0,2,0,2],"span":[707,26,27]},{"path":[4,17,4,0,2,1],"span":[708,4,24],"trailingComments":" implies idempotent\n"},{"path":[4,17,4,0,2,1,1],"span":[708,4,19]},{"path":[4,17,4,0,2,1,2],"span":[708,22,23]},{"path":[4,17,4,0,2,2],"span":[709,4,19],"trailingComments":" idempotent, but may have side effects\n"},{"path":[4,17,4,0,2,2,1],"span":[709,4,14]},{"path":[4,17,4,0,2,2,2],"span":[709,17,18]},{"path":[4,17,2,1],"span":[711,2,712,38]},{"path":[4,17,2,1,4],"span":[711,2,10]},{"path":[4,17,2,1,6],"span":[711,11,27]},{"path":[4,17,2,1,1],"span":[711,28,45]},{"path":[4,17,2,1,3],"span":[711,48,50]},{"path":[4,17,2,1,8],"span":[712,6,37]},{"path":[4,17,2,1,7],"span":[712,7,36]},{"path":[4,17,2,2],"span":[715,2,58],"leadingComments":" The parser stores options it doesn't recognize here. See above.\n"},{"path":[4,17,2,2,4],"span":[715,2,10]},{"path":[4,17,2,2,6],"span":[715,11,30]},{"path":[4,17,2,2,1],"span":[715,31,51]},{"path":[4,17,2,2,3],"span":[715,54,57]},{"path":[4,17,5],"span":[718,2,25],"leadingComments":" Clients can define custom options in extensions of this message. See above.\n"},{"path":[4,17,5,0],"span":[718,13,24]},{"path":[4,17,5,0,1],"span":[718,13,17]},{"path":[4,17,5,0,2],"span":[718,21,24]},{"path":[4,18],"span":[728,0,748,1],"leadingComments":" A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n"},{"path":[4,18,1],"span":[728,8,27]},{"path":[4,18,3,0],"span":[734,2,737,3],"leadingComments":" The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"qux\", false] } represents\n \"foo.(bar.baz).qux\".\n"},{"path":[4,18,3,0,1],"span":[734,10,18]},{"path":[4,18,3,0,2,0],"span":[735,4,34]},{"path":[4,18,3,0,2,0,4],"span":[735,4,12]},{"path":[4,18,3,0,2,0,5],"span":[735,13,19]},{"path":[4,18,3,0,2,0,1],"span":[735,20,29]},{"path":[4,18,3,0,2,0,3],"span":[735,32,33]},{"path":[4,18,3,0,2,1],"span":[736,4,35]},{"path":[4,18,3,0,2,1,4],"span":[736,4,12]},{"path":[4,18,3,0,2,1,5],"span":[736,13,17]},{"path":[4,18,3,0,2,1,1],"span":[736,18,30]},{"path":[4,18,3,0,2,1,3],"span":[736,33,34]},{"path":[4,18,2,0],"span":[738,2,29]},{"path":[4,18,2,0,4],"span":[738,2,10]},{"path":[4,18,2,0,6],"span":[738,11,19]},{"path":[4,18,2,0,1],"span":[738,20,24]},{"path":[4,18,2,0,3],"span":[738,27,28]},{"path":[4,18,2,1],"span":[742,2,39],"leadingComments":" The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n"},{"path":[4,18,2,1,4],"span":[742,2,10]},{"path":[4,18,2,1,5],"span":[742,11,17]},{"path":[4,18,2,1,1],"span":[742,18,34]},{"path":[4,18,2,1,3],"span":[742,37,38]},{"path":[4,18,2,2],"span":[743,2,41]},{"path":[4,18,2,2,4],"span":[743,2,10]},{"path":[4,18,2,2,5],"span":[743,11,17]},{"path":[4,18,2,2,1],"span":[743,18,36]},{"path":[4,18,2,2,3],"span":[743,39,40]},{"path":[4,18,2,3],"span":[744,2,40]},{"path":[4,18,2,3,4],"span":[744,2,10]},{"path":[4,18,2,3,5],"span":[744,11,16]},{"path":[4,18,2,3,1],"span":[744,17,35]},{"path":[4,18,2,3,3],"span":[744,38,39]},{"path":[4,18,2,4],"span":[745,2,35]},{"path":[4,18,2,4,4],"span":[745,2,10]},{"path":[4,18,2,4,5],"span":[745,11,17]},{"path":[4,18,2,4,1],"span":[745,18,30]},{"path":[4,18,2,4,3],"span":[745,33,34]},{"path":[4,18,2,5],"span":[746,2,34]},{"path":[4,18,2,5,4],"span":[746,2,10]},{"path":[4,18,2,5,5],"span":[746,11,16]},{"path":[4,18,2,5,1],"span":[746,17,29]},{"path":[4,18,2,5,3],"span":[746,32,33]},{"path":[4,18,2,6],"span":[747,2,38]},{"path":[4,18,2,6,4],"span":[747,2,10]},{"path":[4,18,2,6,5],"span":[747,11,17]},{"path":[4,18,2,6,1],"span":[747,18,33]},{"path":[4,18,2,6,3],"span":[747,36,37]},{"path":[4,19],"span":[755,0,884,1],"leadingComments":" Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n","leadingDetachedComments":[" ===================================================================\n Optional source code info\n"]},{"path":[4,19,1],"span":[755,8,22]},{"path":[4,19,2,0],"span":[799,2,33],"leadingComments":" A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.\n\n For example, say we have a file like:\n   message Foo {\n     optional string foo = 1;\n   }\n Let's look at just the field definition:\n   optional string foo = 1;\n   ^       ^^     ^^  ^  ^^^\n   a       bc     de  f  ghi\n We have the following locations:\n   span   path               represents\n   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n\n Notes:\n - A location may refer to a repeated field itself (i.e. not to any\n   particular index within it).  This is used whenever a set of elements are\n   logically enclosed in a single code segment.  For example, an entire\n   extend block (possibly containing multiple extension definitions) will\n   have an outer location whose path refers to the \"extensions\" repeated\n   field without an index.\n - Multiple locations may have the same path.  This happens when a single\n   logical declaration is spread out across multiple places.  The most\n   obvious example is the \"extend\" block again -- there may be multiple\n   extend blocks in the same scope, each of which will have the same path.\n - A location's span is not always a subset of its parent's span.  For\n   example, the \"extendee\" of an extension declaration appears at the\n   beginning of the \"extend\" block and is shared by all extensions within\n   the block.\n - Just because a location's span is a subset of some other location's span\n   does not mean that it is a descendant.  For example, a \"group\" defines\n   both a type and a field in a single declaration.  Thus, the locations\n   corresponding to the type and field and their components will overlap.\n - Code which tries to interpret locations should probably be designed to\n   ignore those that it doesn't understand, as more types of locations could\n   be recorded in the future.\n"},{"path":[4,19,2,0,4],"span":[799,2,10]},{"path":[4,19,2,0,6],"span":[799,11,19]},{"path":[4,19,2,0,1],"span":[799,20,28]},{"path":[4,19,2,0,3],"span":[799,31,32]},{"path":[4,19,3,0],"span":[800,2,883,3]},{"path":[4,19,3,0,1],"span":[800,10,18]},{"path":[4,19,3,0,2,0],"span":[824,4,44],"leadingComments":" Identifies which part of the FileDescriptorProto was defined at this\n location.\n\n Each element is a field number or an index.  They form a path from\n the root FileDescriptorProto to the place where the definition.  For\n example, this path:\n   [ 4, 3, 2, 7, 1 ]\n refers to:\n   file.message_type(3)  // 4, 3\n       .field(7)         // 2, 7\n       .name()           // 1\n This is because FileDescriptorProto.message_type has field number 4:\n   repeated DescriptorProto message_type = 4;\n and DescriptorProto.field has field number 2:\n   repeated FieldDescriptorProto field = 2;\n and FieldDescriptorProto.name has field number 1:\n   optional string name = 1;\n\n Thus, the above path gives the location of a field name.  If we removed\n the last element:\n   [ 4, 3, 2, 7 ]\n this path refers to the whole field declaration (from the beginning\n of the label to the terminating semicolon).\n"},{"path":[4,19,3,0,2,0,4],"span":[824,4,12]},{"path":[4,19,3,0,2,0,5],"span":[824,13,18]},{"path":[4,19,3,0,2,0,1],"span":[824,19,23]},{"path":[4,19,3,0,2,0,3],"span":[824,26,27]},{"path":[4,19,3,0,2,0,8],"span":[824,28,43]},{"path":[4,19,3,0,2,0,8,2],"span":[824,29,42]},{"path":[4,19,3,0,2,1],"span":[831,4,44],"leadingComments":" Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n"},{"path":[4,19,3,0,2,1,4],"span":[831,4,12]},{"path":[4,19,3,0,2,1,5],"span":[831,13,18]},{"path":[4,19,3,0,2,1,1],"span":[831,19,23]},{"path":[4,19,3,0,2,1,3],"span":[831,26,27]},{"path":[4,19,3,0,2,1,8],"span":[831,28,43]},{"path":[4,19,3,0,2,1,8,2],"span":[831,29,42]},{"path":[4,19,3,0,2,2],"span":[880,4,41],"leadingComments":" If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.\n\n A series of line comments appearing on consecutive lines, with no other\n tokens appearing on those lines, will be treated as a single comment.\n\n leading_detached_comments will keep paragraphs of comments that appear\n before (but not connected to) the current element. Each paragraph,\n separated by empty lines, will be one comment element in the repeated\n field.\n\n Only the comment content is provided; comment markers (e.g. //) are\n stripped out.  For block comments, leading whitespace and an asterisk\n will be stripped from the beginning of each line other than the first.\n Newlines are included in the output.\n\n Examples:\n\n   optional int32 foo = 1;  // Comment attached to foo.\n   // Comment attached to bar.\n   optional int32 bar = 2;\n\n   optional string baz = 3;\n   // Comment attached to baz.\n   // Another line attached to baz.\n\n   // Comment attached to qux.\n   //\n   // Another line attached to qux.\n   optional double qux = 4;\n\n   // Detached comment for corge. This is not leading or trailing comments\n   // to qux or corge because there are blank lines separating it from\n   // both.\n\n   // Detached comment for corge paragraph 2.\n\n   optional string corge = 5;\n   /* Block comment attached\n    * to corge.  Leading asterisks\n    * will be removed. */\n   /* Block comment attached to\n    * grault. */\n   optional int32 grault = 6;\n\n   // ignored detached comments.\n"},{"path":[4,19,3,0,2,2,4],"span":[880,4,12]},{"path":[4,19,3,0,2,2,5],"span":[880,13,19]},{"path":[4,19,3,0,2,2,1],"span":[880,20,36]},{"path":[4,19,3,0,2,2,3],"span":[880,39,40]},{"path":[4,19,3,0,2,3],"span":[881,4,42]},{"path":[4,19,3,0,2,3,4],"span":[881,4,12]},{"path":[4,19,3,0,2,3,5],"span":[881,13,19]},{"path":[4,19,3,0,2,3,1],"span":[881,20,37]},{"path":[4,19,3,0,2,3,3],"span":[881,40,41]},{"path":[4,19,3,0,2,4],"span":[882,4,50]},{"path":[4,19,3,0,2,4,4],"span":[882,4,12]},{"path":[4,19,3,0,2,4,5],"span":[882,13,19]},{"path":[4,19,3,0,2,4,1],"span":[882,20,45]},{"path":[4,19,3,0,2,4,3],"span":[882,48,49]},{"path":[4,20],"span":[889,0,910,1],"leadingComments":" Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n"},{"path":[4,20,1],"span":[889,8,25]},{"path":[4,20,2,0],"span":[892,2,37],"leadingComments":" An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n"},{"path":[4,20,2,0,4],"span":[892,2,10]},{"path":[4,20,2,0,6],"span":[892,11,21]},{"path":[4,20,2,0,1],"span":[892,22,32]},{"path":[4,20,2,0,3],"span":[892,35,36]},{"path":[4,20,3,0],"span":[893,2,909,3]},{"path":[4,20,3,0,1],"span":[893,10,20]},{"path":[4,20,3,0,2,0],"span":[896,4,44],"leadingComments":" Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n"},{"path":[4,20,3,0,2,0,4],"span":[896,4,12]},{"path":[4,20,3,0,2,0,5],"span":[896,13,18]},{"path":[4,20,3,0,2,0,1],"span":[896,19,23]},{"path":[4,20,3,0,2,0,3],"span":[896,26,27]},{"path":[4,20,3,0,2,0,8],"span":[896,28,43]},{"path":[4,20,3,0,2,0,8,2],"span":[896,29,42]},{"path":[4,20,3,0,2,1],"span":[899,4,36],"leadingComments":" Identifies the filesystem path to the original source .proto.\n"},{"path":[4,20,3,0,2,1,4],"span":[899,4,12]},{"path":[4,20,3,0,2,1,5],"span":[899,13,19]},{"path":[4,20,3,0,2,1,1],"span":[899,20,31]},{"path":[4,20,3,0,2,1,3],"span":[899,34,35]},{"path":[4,20,3,0,2,2],"span":[903,4,29],"leadingComments":" Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n"},{"path":[4,20,3,0,2,2,4],"span":[903,4,12]},{"path":[4,20,3,0,2,2,5],"span":[903,13,18]},{"path":[4,20,3,0,2,2,1],"span":[903,19,24]},{"path":[4,20,3,0,2,2,3],"span":[903,27,28]},{"path":[4,20,3,0,2,3],"span":[908,4,27],"leadingComments":" Identifies the ending offset in bytes in the generated code that\n relates to the identified offset. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n"},{"path":[4,20,3,0,2,3,4],"span":[908,4,12]},{"path":[4,20,3,0,2,3,5],"span":[908,13,18]},{"path":[4,20,3,0,2,3,1],"span":[908,19,22]},{"path":[4,20,3,0,2,3,3],"span":[908,25,26]}]}},{"name":"google/protobuf/struct.proto","package":"google.protobuf","messageType":[{"name":"Struct","field":[{"name":"fields","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.Struct.FieldsEntry","jsonName":"fields"}],"nestedType":[{"name":"FieldsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"Value","field":[{"name":"null_value","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".google.protobuf.NullValue","oneofIndex":0,"jsonName":"nullValue"},{"name":"number_value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","oneofIndex":0,"jsonName":"numberValue"},{"name":"string_value","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"stringValue"},{"name":"bool_value","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","oneofIndex":0,"jsonName":"boolValue"},{"name":"struct_value","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Struct","oneofIndex":0,"jsonName":"structValue"},{"name":"list_value","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.ListValue","oneofIndex":0,"jsonName":"listValue"}],"oneofDecl":[{"name":"kind"}]},{"name":"ListValue","field":[{"name":"values","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"values"}]}],"enumType":[{"name":"NullValue","value":[{"name":"NULL_VALUE","number":0}]}],"options":{"javaPackage":"com.google.protobuf","javaOuterClassname":"StructProto","javaMultipleFiles":true,"goPackage":"google.golang.org/protobuf/types/known/structpb","ccEnableArenas":true,"objcClassPrefix":"GPB","csharpNamespace":"Google.Protobuf.WellKnownTypes"},"sourceCodeInfo":{"location":[{"span":[30,0,94,1]},{"path":[12],"span":[30,0,18],"leadingDetachedComments":[" Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"]},{"path":[2],"span":[32,0,24]},{"path":[8],"span":[34,0,59]},{"path":[8,37],"span":[34,0,59]},{"path":[8],"span":[35,0,31]},{"path":[8,31],"span":[35,0,31]},{"path":[8],"span":[36,0,70]},{"path":[8,11],"span":[36,0,70]},{"path":[8],"span":[37,0,44]},{"path":[8,1],"span":[37,0,44]},{"path":[8],"span":[38,0,44]},{"path":[8,8],"span":[38,0,44]},{"path":[8],"span":[39,0,34]},{"path":[8,10],"span":[39,0,34]},{"path":[8],"span":[40,0,33]},{"path":[8,36],"span":[40,0,33]},{"path":[4,0],"span":[50,0,53,1],"leadingComments":" `Struct` represents a structured data value, consisting of fields\n which map to dynamically typed values. In some languages, `Struct`\n might be supported by a native representation. For example, in\n scripting languages like JS a struct is represented as an\n object. The details of that representation are described together\n with the proto support for the language.\n\n The JSON representation for `Struct` is JSON object.\n"},{"path":[4,0,1],"span":[50,8,14]},{"path":[4,0,2,0],"span":[52,2,32],"leadingComments":" Unordered map of dynamically typed values.\n"},{"path":[4,0,2,0,6],"span":[52,2,20]},{"path":[4,0,2,0,1],"span":[52,21,27]},{"path":[4,0,2,0,3],"span":[52,30,31]},{"path":[4,1],"span":[61,0,77,1],"leadingComments":" `Value` represents a dynamically typed value which can be either\n null, a number, a string, a boolean, a recursive struct value, or a\n list of values. A producer of value is expected to set one of that\n variants, absence of any variant indicates an error.\n\n The JSON representation for `Value` is JSON value.\n"},{"path":[4,1,1],"span":[61,8,13]},{"path":[4,1,8,0],"span":[63,2,76,3],"leadingComments":" The kind of value.\n"},{"path":[4,1,8,0,1],"span":[63,8,12]},{"path":[4,1,2,0],"span":[65,4,29],"leadingComments":" Represents a null value.\n"},{"path":[4,1,2,0,6],"span":[65,4,13]},{"path":[4,1,2,0,1],"span":[65,14,24]},{"path":[4,1,2,0,3],"span":[65,27,28]},{"path":[4,1,2,1],"span":[67,4,28],"leadingComments":" Represents a double value.\n"},{"path":[4,1,2,1,5],"span":[67,4,10]},{"path":[4,1,2,1,1],"span":[67,11,23]},{"path":[4,1,2,1,3],"span":[67,26,27]},{"path":[4,1,2,2],"span":[69,4,28],"leadingComments":" Represents a string value.\n"},{"path":[4,1,2,2,5],"span":[69,4,10]},{"path":[4,1,2,2,1],"span":[69,11,23]},{"path":[4,1,2,2,3],"span":[69,26,27]},{"path":[4,1,2,3],"span":[71,4,24],"leadingComments":" Represents a boolean value.\n"},{"path":[4,1,2,3,5],"span":[71,4,8]},{"path":[4,1,2,3,1],"span":[71,9,19]},{"path":[4,1,2,3,3],"span":[71,22,23]},{"path":[4,1,2,4],"span":[73,4,28],"leadingComments":" Represents a structured value.\n"},{"path":[4,1,2,4,6],"span":[73,4,10]},{"path":[4,1,2,4,1],"span":[73,11,23]},{"path":[4,1,2,4,3],"span":[73,26,27]},{"path":[4,1,2,5],"span":[75,4,29],"leadingComments":" Represents a repeated `Value`.\n"},{"path":[4,1,2,5,6],"span":[75,4,13]},{"path":[4,1,2,5,1],"span":[75,14,24]},{"path":[4,1,2,5,3],"span":[75,27,28]},{"path":[5,0],"span":[83,0,86,1],"leadingComments":" `NullValue` is a singleton enumeration to represent the null value for the\n `Value` type union.\n\n  The JSON representation for `NullValue` is JSON `null`.\n"},{"path":[5,0,1],"span":[83,5,14]},{"path":[5,0,2,0],"span":[85,2,17],"leadingComments":" Null value.\n"},{"path":[5,0,2,0,1],"span":[85,2,12]},{"path":[5,0,2,0,2],"span":[85,15,16]},{"path":[4,2],"span":[91,0,94,1],"leadingComments":" `ListValue` is a wrapper around a repeated field of values.\n\n The JSON representation for `ListValue` is JSON array.\n"},{"path":[4,2,1],"span":[91,8,17]},{"path":[4,2,2,0],"span":[93,2,28],"leadingComments":" Repeated field of dynamically typed values.\n"},{"path":[4,2,2,0,4],"span":[93,2,10]},{"path":[4,2,2,0,6],"span":[93,11,16]},{"path":[4,2,2,0,1],"span":[93,17,23]},{"path":[4,2,2,0,3],"span":[93,26,27]}]},"syntax":"proto3"},{"name":"protoc-gen-openapiv2/options/openapiv2.proto","package":"grpc.gateway.protoc_gen_openapiv2.options","dependency":["google/protobuf/struct.proto"],"messageType":[{"name":"Swagger","field":[{"name":"swagger","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"swagger"},{"name":"info","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Info","jsonName":"info"},{"name":"host","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"host"},{"name":"base_path","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"basePath"},{"name":"schemes","number":5,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Scheme","jsonName":"schemes"},{"name":"consumes","number":6,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"consumes"},{"name":"produces","number":7,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"produces"},{"name":"responses","number":10,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Swagger.ResponsesEntry","jsonName":"responses"},{"name":"security_definitions","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions","jsonName":"securityDefinitions"},{"name":"security","number":12,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement","jsonName":"security"},{"name":"external_docs","number":14,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation","jsonName":"externalDocs"},{"name":"extensions","number":15,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Swagger.ExtensionsEntry","jsonName":"extensions"}],"nestedType":[{"name":"ResponsesEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Response","jsonName":"value"}],"options":{"mapEntry":true}},{"name":"ExtensionsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"value"}],"options":{"mapEntry":true}}],"reservedRange":[{"start":8,"end":9},{"start":9,"end":10},{"start":13,"end":14}]},{"name":"Operation","field":[{"name":"tags","number":1,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"tags"},{"name":"summary","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"summary"},{"name":"description","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"external_docs","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation","jsonName":"externalDocs"},{"name":"operation_id","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"operationId"},{"name":"consumes","number":6,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"consumes"},{"name":"produces","number":7,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"produces"},{"name":"responses","number":9,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Operation.ResponsesEntry","jsonName":"responses"},{"name":"schemes","number":10,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Scheme","jsonName":"schemes"},{"name":"deprecated","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"deprecated"},{"name":"security","number":12,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement","jsonName":"security"},{"name":"extensions","number":13,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Operation.ExtensionsEntry","jsonName":"extensions"}],"nestedType":[{"name":"ResponsesEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Response","jsonName":"value"}],"options":{"mapEntry":true}},{"name":"ExtensionsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"value"}],"options":{"mapEntry":true}}],"reservedRange":[{"start":8,"end":9}]},{"name":"Header","field":[{"name":"description","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"type","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"type"},{"name":"format","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"format"},{"name":"default","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"default"},{"name":"pattern","number":13,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"pattern"}],"reservedRange":[{"start":4,"end":5},{"start":5,"end":6},{"start":7,"end":8},{"start":8,"end":9},{"start":9,"end":10},{"start":10,"end":11},{"start":11,"end":12},{"start":12,"end":13},{"start":14,"end":15},{"start":15,"end":16},{"start":16,"end":17},{"start":17,"end":18},{"start":18,"end":19}]},{"name":"Response","field":[{"name":"description","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"schema","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Schema","jsonName":"schema"},{"name":"headers","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Response.HeadersEntry","jsonName":"headers"},{"name":"examples","number":4,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Response.ExamplesEntry","jsonName":"examples"},{"name":"extensions","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Response.ExtensionsEntry","jsonName":"extensions"}],"nestedType":[{"name":"HeadersEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Header","jsonName":"value"}],"options":{"mapEntry":true}},{"name":"ExamplesEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}],"options":{"mapEntry":true}},{"name":"ExtensionsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"Info","field":[{"name":"title","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"title"},{"name":"description","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"terms_of_service","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"termsOfService"},{"name":"contact","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Contact","jsonName":"contact"},{"name":"license","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.License","jsonName":"license"},{"name":"version","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"version"},{"name":"extensions","number":7,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Info.ExtensionsEntry","jsonName":"extensions"}],"nestedType":[{"name":"ExtensionsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"Contact","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"url","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"url"},{"name":"email","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"email"}]},{"name":"License","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"url","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"url"}]},{"name":"ExternalDocumentation","field":[{"name":"description","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"url","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"url"}]},{"name":"Schema","field":[{"name":"json_schema","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.JSONSchema","jsonName":"jsonSchema"},{"name":"discriminator","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"discriminator"},{"name":"read_only","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"readOnly"},{"name":"external_docs","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation","jsonName":"externalDocs"},{"name":"example","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"example"}],"reservedRange":[{"start":4,"end":5}]},{"name":"JSONSchema","field":[{"name":"ref","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"ref"},{"name":"title","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"title"},{"name":"description","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"default","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"default"},{"name":"read_only","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"readOnly"},{"name":"example","number":9,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"example"},{"name":"multiple_of","number":10,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"multipleOf"},{"name":"maximum","number":11,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"maximum"},{"name":"exclusive_maximum","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"exclusiveMaximum"},{"name":"minimum","number":13,"label":"LABEL_OPTIONAL","type":"TYPE_DOUBLE","jsonName":"minimum"},{"name":"exclusive_minimum","number":14,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"exclusiveMinimum"},{"name":"max_length","number":15,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"maxLength"},{"name":"min_length","number":16,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"minLength"},{"name":"pattern","number":17,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"pattern"},{"name":"max_items","number":20,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"maxItems"},{"name":"min_items","number":21,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"minItems"},{"name":"unique_items","number":22,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"uniqueItems"},{"name":"max_properties","number":24,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"maxProperties"},{"name":"min_properties","number":25,"label":"LABEL_OPTIONAL","type":"TYPE_UINT64","jsonName":"minProperties"},{"name":"required","number":26,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"required"},{"name":"array","number":34,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"array"},{"name":"type","number":35,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".grpc.gateway.protoc_gen_openapiv2.options.JSONSchema.JSONSchemaSimpleTypes","jsonName":"type"},{"name":"format","number":36,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"format"},{"name":"enum","number":46,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"enum"}],"enumType":[{"name":"JSONSchemaSimpleTypes","value":[{"name":"UNKNOWN","number":0},{"name":"ARRAY","number":1},{"name":"BOOLEAN","number":2},{"name":"INTEGER","number":3},{"name":"NULL","number":4},{"name":"NUMBER","number":5},{"name":"OBJECT","number":6},{"name":"STRING","number":7}]}],"reservedRange":[{"start":1,"end":2},{"start":2,"end":3},{"start":4,"end":5},{"start":18,"end":19},{"start":19,"end":20},{"start":23,"end":24},{"start":27,"end":28},{"start":28,"end":29},{"start":29,"end":30},{"start":30,"end":34},{"start":37,"end":42},{"start":42,"end":43},{"start":43,"end":46}]},{"name":"Tag","field":[{"name":"description","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"external_docs","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.ExternalDocumentation","jsonName":"externalDocs"}],"reservedRange":[{"start":1,"end":2}]},{"name":"SecurityDefinitions","field":[{"name":"security","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityDefinitions.SecurityEntry","jsonName":"security"}],"nestedType":[{"name":"SecurityEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"SecurityScheme","field":[{"name":"type","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Type","jsonName":"type"},{"name":"description","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"description"},{"name":"name","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"in","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.In","jsonName":"in"},{"name":"flow","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.Flow","jsonName":"flow"},{"name":"authorization_url","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"authorizationUrl"},{"name":"token_url","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"tokenUrl"},{"name":"scopes","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Scopes","jsonName":"scopes"},{"name":"extensions","number":9,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityScheme.ExtensionsEntry","jsonName":"extensions"}],"nestedType":[{"name":"ExtensionsEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.protobuf.Value","jsonName":"value"}],"options":{"mapEntry":true}}],"enumType":[{"name":"Type","value":[{"name":"TYPE_INVALID","number":0},{"name":"TYPE_BASIC","number":1},{"name":"TYPE_API_KEY","number":2},{"name":"TYPE_OAUTH2","number":3}]},{"name":"In","value":[{"name":"IN_INVALID","number":0},{"name":"IN_QUERY","number":1},{"name":"IN_HEADER","number":2}]},{"name":"Flow","value":[{"name":"FLOW_INVALID","number":0},{"name":"FLOW_IMPLICIT","number":1},{"name":"FLOW_PASSWORD","number":2},{"name":"FLOW_APPLICATION","number":3},{"name":"FLOW_ACCESS_CODE","number":4}]}]},{"name":"SecurityRequirement","field":[{"name":"security_requirement","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementEntry","jsonName":"securityRequirement"}],"nestedType":[{"name":"SecurityRequirementValue","field":[{"name":"scope","number":1,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"scope"}]},{"name":"SecurityRequirementEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.SecurityRequirement.SecurityRequirementValue","jsonName":"value"}],"options":{"mapEntry":true}}]},{"name":"Scopes","field":[{"name":"scope","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Scopes.ScopeEntry","jsonName":"scope"}],"nestedType":[{"name":"ScopeEntry","field":[{"name":"key","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"key"},{"name":"value","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"value"}],"options":{"mapEntry":true}}]}],"enumType":[{"name":"Scheme","value":[{"name":"UNKNOWN","number":0},{"name":"HTTP","number":1},{"name":"HTTPS","number":2},{"name":"WS","number":3},{"name":"WSS","number":4}]}],"options":{"goPackage":"github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"},"sourceCodeInfo":{"location":[{"span":[0,0,644,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,50]},{"path":[8],"span":[4,0,93]},{"path":[8,11],"span":[4,0,93]},{"path":[3,0],"span":[6,0,38]},{"path":[5,0],"span":[10,0,16,1],"leadingComments":" Scheme describes the schemes supported by the OpenAPI Swagger\n and Operation objects.\n"},{"path":[5,0,1],"span":[10,5,11]},{"path":[5,0,2,0],"span":[11,2,14]},{"path":[5,0,2,0,1],"span":[11,2,9]},{"path":[5,0,2,0,2],"span":[11,12,13]},{"path":[5,0,2,1],"span":[12,2,11]},{"path":[5,0,2,1,1],"span":[12,2,6]},{"path":[5,0,2,1,2],"span":[12,9,10]},{"path":[5,0,2,2],"span":[13,2,12]},{"path":[5,0,2,2,1],"span":[13,2,7]},{"path":[5,0,2,2,2],"span":[13,10,11]},{"path":[5,0,2,3],"span":[14,2,9]},{"path":[5,0,2,3,1],"span":[14,2,4]},{"path":[5,0,2,3,2],"span":[14,7,8]},{"path":[5,0,2,4],"span":[15,2,10]},{"path":[5,0,2,4,1],"span":[15,2,5]},{"path":[5,0,2,4,2],"span":[15,8,9]},{"path":[4,0],"span":[44,0,101,1],"leadingComments":" `Swagger` is a representation of OpenAPI v2 specification's Swagger object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#swaggerObject\n\n Example:\n\n  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {\n    info: {\n      title: \"Echo API\";\n      version: \"1.0\";\n      description: \";\n      contact: {\n        name: \"gRPC-Gateway project\";\n        url: \"https://github.com/grpc-ecosystem/grpc-gateway\";\n        email: \"none@example.com\";\n      };\n      license: {\n        name: \"BSD 3-Clause License\";\n        url: \"https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt\";\n      };\n    };\n    schemes: HTTPS;\n    consumes: \"application/json\";\n    produces: \"application/json\";\n  };\n\n"},{"path":[4,0,1],"span":[44,8,15]},{"path":[4,0,2,0],"span":[48,2,21],"leadingComments":" Specifies the OpenAPI Specification version being used. It can be\n used by the OpenAPI UI and other clients to interpret the API listing. The \n value MUST be \"2.0\".\n"},{"path":[4,0,2,0,5],"span":[48,2,8]},{"path":[4,0,2,0,1],"span":[48,9,16]},{"path":[4,0,2,0,3],"span":[48,19,20]},{"path":[4,0,2,1],"span":[51,2,16],"leadingComments":" Provides metadata about the API. The metadata can be used by the \n clients if needed.\n"},{"path":[4,0,2,1,6],"span":[51,2,6]},{"path":[4,0,2,1,1],"span":[51,7,11]},{"path":[4,0,2,1,3],"span":[51,14,15]},{"path":[4,0,2,2],"span":[56,2,18],"leadingComments":" The host (name or ip) serving the API. This MUST be the host only and does \n not include the scheme nor sub-paths. It MAY include a port. If the host is\n not included, the host serving the documentation is to be used (including\n the port). The host does not support path templating.\n"},{"path":[4,0,2,2,5],"span":[56,2,8]},{"path":[4,0,2,2,1],"span":[56,9,13]},{"path":[4,0,2,2,3],"span":[56,16,17]},{"path":[4,0,2,3],"span":[66,2,23],"leadingComments":" The base path on which the API is served, which is relative to the host. If\n it is not included, the API is served directly under the host. The value \n MUST start with a leading slash (/). The basePath does not support path\n templating.\n Note that using `base_path` does not change the endpoint paths that are \n generated in the resulting OpenAPI file. If you wish to use `base_path`\n with relatively generated OpenAPI paths, the `base_path` prefix must be \n manually removed from your `google.api.http` paths and your code changed to \n serve the API from the `base_path`.\n"},{"path":[4,0,2,3,5],"span":[66,2,8]},{"path":[4,0,2,3,1],"span":[66,9,18]},{"path":[4,0,2,3,3],"span":[66,21,22]},{"path":[4,0,2,4],"span":[70,2,30],"leadingComments":" The transfer protocol of the API. Values MUST be from the list: \"http\",\n \"https\", \"ws\", \"wss\". If the schemes is not included, the default scheme to\n be used is the one used to access the OpenAPI definition itself.\n"},{"path":[4,0,2,4,4],"span":[70,2,10]},{"path":[4,0,2,4,6],"span":[70,11,17]},{"path":[4,0,2,4,1],"span":[70,18,25]},{"path":[4,0,2,4,3],"span":[70,28,29]},{"path":[4,0,2,5],"span":[74,2,31],"leadingComments":" A list of MIME types the APIs can consume. This is global to all APIs but \n can be overridden on specific API calls. Value MUST be as described under\n Mime Types.\n"},{"path":[4,0,2,5,4],"span":[74,2,10]},{"path":[4,0,2,5,5],"span":[74,11,17]},{"path":[4,0,2,5,1],"span":[74,18,26]},{"path":[4,0,2,5,3],"span":[74,29,30]},{"path":[4,0,2,6],"span":[78,2,31],"leadingComments":" A list of MIME types the APIs can produce. This is global to all APIs but\n can be overridden on specific API calls. Value MUST be as described under\n Mime Types.\n"},{"path":[4,0,2,6,4],"span":[78,2,10]},{"path":[4,0,2,6,5],"span":[78,11,17]},{"path":[4,0,2,6,1],"span":[78,18,26]},{"path":[4,0,2,6,3],"span":[78,29,30]},{"path":[4,0,9],"span":[80,2,13],"leadingComments":" field 8 is reserved for 'paths'.\n"},{"path":[4,0,9,0],"span":[80,11,12]},{"path":[4,0,9,0,1],"span":[80,11,12]},{"path":[4,0,9],"span":[83,2,13],"leadingComments":" field 9 is reserved for 'definitions', which at this time are already\n exposed as and customizable as proto messages.\n"},{"path":[4,0,9,1],"span":[83,11,12]},{"path":[4,0,9,1,1],"span":[83,11,12]},{"path":[4,0,2,7],"span":[86,2,39],"leadingComments":" An object to hold responses that can be used across operations. This\n property does not define global responses for all operations.\n"},{"path":[4,0,2,7,6],"span":[86,2,23]},{"path":[4,0,2,7,1],"span":[86,24,33]},{"path":[4,0,2,7,3],"span":[86,36,38]},{"path":[4,0,2,8],"span":[88,2,48],"leadingComments":" Security scheme definitions that can be used across the specification.\n"},{"path":[4,0,2,8,6],"span":[88,2,21]},{"path":[4,0,2,8,1],"span":[88,22,42]},{"path":[4,0,2,8,3],"span":[88,45,47]},{"path":[4,0,2,9],"span":[93,2,45],"leadingComments":" A declaration of which security schemes are applied for the API as a whole.\n The list of values describes alternative security schemes that can be used \n (that is, there is a logical OR between the security requirements). \n Individual operations can override this definition.\n"},{"path":[4,0,2,9,4],"span":[93,2,10]},{"path":[4,0,2,9,6],"span":[93,11,30]},{"path":[4,0,2,9,1],"span":[93,31,39]},{"path":[4,0,2,9,3],"span":[93,42,44]},{"path":[4,0,9],"span":[97,2,14],"leadingComments":" field 13 is reserved for 'tags', which are supposed to be exposed as and\n customizable as proto services. TODO(ivucica): add processing of proto\n service objects into OpenAPI v2 Tag objects.\n"},{"path":[4,0,9,2],"span":[97,11,13]},{"path":[4,0,9,2,1],"span":[97,11,13]},{"path":[4,0,2,10],"span":[99,2,43],"leadingComments":" Additional external documentation.\n"},{"path":[4,0,2,10,6],"span":[99,2,23]},{"path":[4,0,2,10,1],"span":[99,24,37]},{"path":[4,0,2,10,3],"span":[99,40,42]},{"path":[4,0,2,11],"span":[100,2,53]},{"path":[4,0,2,11,6],"span":[100,2,36]},{"path":[4,0,2,11,1],"span":[100,37,47]},{"path":[4,0,2,11,3],"span":[100,50,52]},{"path":[4,1],"span":[128,0,172,1],"leadingComments":" `Operation` is a representation of OpenAPI v2 specification's Operation object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#operationObject\n\n Example:\n\n  service EchoService {\n    rpc Echo(SimpleMessage) returns (SimpleMessage) {\n      option (google.api.http) = {\n        get: \"/v1/example/echo/{id}\"\n      };\n\n      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {\n        summary: \"Get a message.\";\n        operation_id: \"getMessage\";\n        tags: \"echo\";\n        responses: {\n          key: \"200\"\n            value: {\n            description: \"OK\";\n          }\n        }\n      };\n    }\n  }\n"},{"path":[4,1,1],"span":[128,8,17]},{"path":[4,1,2,0],"span":[131,2,27],"leadingComments":" A list of tags for API documentation control. Tags can be used for logical\n grouping of operations by resources or any other qualifier.\n"},{"path":[4,1,2,0,4],"span":[131,2,10]},{"path":[4,1,2,0,5],"span":[131,11,17]},{"path":[4,1,2,0,1],"span":[131,18,22]},{"path":[4,1,2,0,3],"span":[131,25,26]},{"path":[4,1,2,1],"span":[134,2,21],"leadingComments":" A short summary of what the operation does. For maximum readability in the\n swagger-ui, this field SHOULD be less than 120 characters.\n"},{"path":[4,1,2,1,5],"span":[134,2,8]},{"path":[4,1,2,1,1],"span":[134,9,16]},{"path":[4,1,2,1,3],"span":[134,19,20]},{"path":[4,1,2,2],"span":[137,2,25],"leadingComments":" A verbose explanation of the operation behavior. GFM syntax can be used for\n rich text representation.\n"},{"path":[4,1,2,2,5],"span":[137,2,8]},{"path":[4,1,2,2,1],"span":[137,9,20]},{"path":[4,1,2,2,3],"span":[137,23,24]},{"path":[4,1,2,3],"span":[139,2,42],"leadingComments":" Additional external documentation for this operation.\n"},{"path":[4,1,2,3,6],"span":[139,2,23]},{"path":[4,1,2,3,1],"span":[139,24,37]},{"path":[4,1,2,3,3],"span":[139,40,41]},{"path":[4,1,2,4],"span":[144,2,26],"leadingComments":" Unique string used to identify the operation. The id MUST be unique among\n all operations described in the API. Tools and libraries MAY use the\n operationId to uniquely identify an operation, therefore, it is recommended\n to follow common programming naming conventions.\n"},{"path":[4,1,2,4,5],"span":[144,2,8]},{"path":[4,1,2,4,1],"span":[144,9,21]},{"path":[4,1,2,4,3],"span":[144,24,25]},{"path":[4,1,2,5],"span":[148,2,31],"leadingComments":" A list of MIME types the operation can consume. This overrides the consumes\n definition at the OpenAPI Object. An empty value MAY be used to clear the\n global definition. Value MUST be as described under Mime Types.\n"},{"path":[4,1,2,5,4],"span":[148,2,10]},{"path":[4,1,2,5,5],"span":[148,11,17]},{"path":[4,1,2,5,1],"span":[148,18,26]},{"path":[4,1,2,5,3],"span":[148,29,30]},{"path":[4,1,2,6],"span":[152,2,31],"leadingComments":" A list of MIME types the operation can produce. This overrides the produces\n definition at the OpenAPI Object. An empty value MAY be used to clear the\n global definition. Value MUST be as described under Mime Types.\n"},{"path":[4,1,2,6,4],"span":[152,2,10]},{"path":[4,1,2,6,5],"span":[152,11,17]},{"path":[4,1,2,6,1],"span":[152,18,26]},{"path":[4,1,2,6,3],"span":[152,29,30]},{"path":[4,1,9],"span":[154,2,13],"leadingComments":" field 8 is reserved for 'parameters'.\n"},{"path":[4,1,9,0],"span":[154,11,12]},{"path":[4,1,9,0,1],"span":[154,11,12]},{"path":[4,1,2,7],"span":[157,2,38],"leadingComments":" The list of possible responses as they are returned from executing this\n operation.\n"},{"path":[4,1,2,7,6],"span":[157,2,23]},{"path":[4,1,2,7,1],"span":[157,24,33]},{"path":[4,1,2,7,3],"span":[157,36,37]},{"path":[4,1,2,8],"span":[161,2,31],"leadingComments":" The transfer protocol for the operation. Values MUST be from the list:\n \"http\", \"https\", \"ws\", \"wss\". The value overrides the OpenAPI Object\n schemes definition.\n"},{"path":[4,1,2,8,4],"span":[161,2,10]},{"path":[4,1,2,8,6],"span":[161,11,17]},{"path":[4,1,2,8,1],"span":[161,18,25]},{"path":[4,1,2,8,3],"span":[161,28,30]},{"path":[4,1,2,9],"span":[164,2,23],"leadingComments":" Declares this operation to be deprecated. Usage of the declared operation\n should be refrained. Default value is false.\n"},{"path":[4,1,2,9,5],"span":[164,2,6]},{"path":[4,1,2,9,1],"span":[164,7,17]},{"path":[4,1,2,9,3],"span":[164,20,22]},{"path":[4,1,2,10],"span":[170,2,45],"leadingComments":" A declaration of which security schemes are applied for this operation. The\n list of values describes alternative security schemes that can be used\n (that is, there is a logical OR between the security requirements). This\n definition overrides any declared top-level security. To remove a top-level\n security declaration, an empty array can be used.\n"},{"path":[4,1,2,10,4],"span":[170,2,10]},{"path":[4,1,2,10,6],"span":[170,11,30]},{"path":[4,1,2,10,1],"span":[170,31,39]},{"path":[4,1,2,10,3],"span":[170,42,44]},{"path":[4,1,2,11],"span":[171,2,53]},{"path":[4,1,2,11,6],"span":[171,2,36]},{"path":[4,1,2,11,1],"span":[171,37,47]},{"path":[4,1,2,11,3],"span":[171,50,52]},{"path":[4,2],"span":[178,0,217,1],"leadingComments":" `Header` is a representation of OpenAPI v2 specification's Header object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#headerObject\n\n"},{"path":[4,2,1],"span":[178,8,14]},{"path":[4,2,2,0],"span":[180,2,25],"leadingComments":" `Description` is a short description of the header.\n"},{"path":[4,2,2,0,5],"span":[180,2,8]},{"path":[4,2,2,0,1],"span":[180,9,20]},{"path":[4,2,2,0,3],"span":[180,23,24]},{"path":[4,2,2,1],"span":[182,2,18],"leadingComments":" The type of the object. The value MUST be one of \"string\", \"number\", \"integer\", or \"boolean\". The \"array\" type is not supported.\n"},{"path":[4,2,2,1,5],"span":[182,2,8]},{"path":[4,2,2,1,1],"span":[182,9,13]},{"path":[4,2,2,1,3],"span":[182,16,17]},{"path":[4,2,2,2],"span":[184,2,20],"leadingComments":" `Format` The extending format for the previously mentioned type.\n"},{"path":[4,2,2,2,5],"span":[184,2,8]},{"path":[4,2,2,2,1],"span":[184,9,15]},{"path":[4,2,2,2,3],"span":[184,18,19]},{"path":[4,2,9],"span":[186,2,13],"leadingComments":" field 4 is reserved for 'items', but in OpenAPI-specific way.\n"},{"path":[4,2,9,0],"span":[186,11,12]},{"path":[4,2,9,0,1],"span":[186,11,12]},{"path":[4,2,9],"span":[188,2,13],"leadingComments":" field 5 is reserved `Collection Format` Determines the format of the array if type array is used.\n"},{"path":[4,2,9,1],"span":[188,11,12]},{"path":[4,2,9,1,1],"span":[188,11,12]},{"path":[4,2,2,3],"span":[192,2,21],"leadingComments":" `Default` Declares the value of the header that the server will use if none is provided.\n See: https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-6.2.\n Unlike JSON Schema this value MUST conform to the defined type for the header.\n"},{"path":[4,2,2,3,5],"span":[192,2,8]},{"path":[4,2,2,3,1],"span":[192,9,16]},{"path":[4,2,2,3,3],"span":[192,19,20]},{"path":[4,2,9],"span":[194,2,13],"leadingComments":" field 7 is reserved for 'maximum'.\n"},{"path":[4,2,9,2],"span":[194,11,12]},{"path":[4,2,9,2,1],"span":[194,11,12]},{"path":[4,2,9],"span":[196,2,13],"leadingComments":" field 8 is reserved for 'exclusiveMaximum'.\n"},{"path":[4,2,9,3],"span":[196,11,12]},{"path":[4,2,9,3,1],"span":[196,11,12]},{"path":[4,2,9],"span":[198,2,13],"leadingComments":" field 9 is reserved for 'minimum'.\n"},{"path":[4,2,9,4],"span":[198,11,12]},{"path":[4,2,9,4,1],"span":[198,11,12]},{"path":[4,2,9],"span":[200,2,14],"leadingComments":" field 10 is reserved for 'exclusiveMinimum'.\n"},{"path":[4,2,9,5],"span":[200,11,13]},{"path":[4,2,9,5,1],"span":[200,11,13]},{"path":[4,2,9],"span":[202,2,14],"leadingComments":" field 11 is reserved for 'maxLength'.\n"},{"path":[4,2,9,6],"span":[202,11,13]},{"path":[4,2,9,6,1],"span":[202,11,13]},{"path":[4,2,9],"span":[204,2,14],"leadingComments":" field 12 is reserved for 'minLength'.\n"},{"path":[4,2,9,7],"span":[204,11,13]},{"path":[4,2,9,7,1],"span":[204,11,13]},{"path":[4,2,2,4],"span":[206,2,22],"leadingComments":" 'Pattern' See https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.2.3.\n"},{"path":[4,2,2,4,5],"span":[206,2,8]},{"path":[4,2,2,4,1],"span":[206,9,16]},{"path":[4,2,2,4,3],"span":[206,19,21]},{"path":[4,2,9],"span":[208,2,14],"leadingComments":" field 14 is reserved for 'maxItems'.\n"},{"path":[4,2,9,8],"span":[208,11,13]},{"path":[4,2,9,8,1],"span":[208,11,13]},{"path":[4,2,9],"span":[210,2,14],"leadingComments":" field 15 is reserved for 'minItems'.\n"},{"path":[4,2,9,9],"span":[210,11,13]},{"path":[4,2,9,9,1],"span":[210,11,13]},{"path":[4,2,9],"span":[212,2,14],"leadingComments":" field 16 is reserved for 'uniqueItems'.\n"},{"path":[4,2,9,10],"span":[212,11,13]},{"path":[4,2,9,10,1],"span":[212,11,13]},{"path":[4,2,9],"span":[214,2,14],"leadingComments":" field 17 is reserved for 'enum'.\n"},{"path":[4,2,9,11],"span":[214,11,13]},{"path":[4,2,9,11,1],"span":[214,11,13]},{"path":[4,2,9],"span":[216,2,14],"leadingComments":" field 18 is reserved for 'multipleOf'.\n"},{"path":[4,2,9,12],"span":[216,11,13]},{"path":[4,2,9,12,1],"span":[216,11,13]},{"path":[4,3],"span":[223,0,238,1],"leadingComments":" `Response` is a representation of OpenAPI v2 specification's Response object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#responseObject\n\n"},{"path":[4,3,1],"span":[223,8,16]},{"path":[4,3,2,0],"span":[226,2,25],"leadingComments":" `Description` is a short description of the response.\n GFM syntax can be used for rich text representation.\n"},{"path":[4,3,2,0,5],"span":[226,2,8]},{"path":[4,3,2,0,1],"span":[226,9,20]},{"path":[4,3,2,0,3],"span":[226,23,24]},{"path":[4,3,2,1],"span":[229,2,20],"leadingComments":" `Schema` optionally defines the structure of the response.\n If `Schema` is not provided, it means there is no content to the response.\n"},{"path":[4,3,2,1,6],"span":[229,2,8]},{"path":[4,3,2,1,1],"span":[229,9,15]},{"path":[4,3,2,1,3],"span":[229,18,19]},{"path":[4,3,2,2],"span":[233,2,34],"leadingComments":" `Headers` A list of headers that are sent with the response.\n `Header` name is expected to be a string in the canonical format of the MIME header key\n See: https://golang.org/pkg/net/textproto/#CanonicalMIMEHeaderKey\n"},{"path":[4,3,2,2,6],"span":[233,2,21]},{"path":[4,3,2,2,1],"span":[233,22,29]},{"path":[4,3,2,2,3],"span":[233,32,33]},{"path":[4,3,2,3],"span":[236,2,35],"leadingComments":" `Examples` gives per-mimetype response examples.\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#example-object\n"},{"path":[4,3,2,3,6],"span":[236,2,21]},{"path":[4,3,2,3,1],"span":[236,22,30]},{"path":[4,3,2,3,3],"span":[236,33,34]},{"path":[4,3,2,4],"span":[237,2,52]},{"path":[4,3,2,4,6],"span":[237,2,36]},{"path":[4,3,2,4,1],"span":[237,37,47]},{"path":[4,3,2,4,3],"span":[237,50,51]},{"path":[4,4],"span":[264,0,280,1],"leadingComments":" `Info` is a representation of OpenAPI v2 specification's Info object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#infoObject\n\n Example:\n\n  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {\n    info: {\n      title: \"Echo API\";\n      version: \"1.0\";\n      description: \";\n      contact: {\n        name: \"gRPC-Gateway project\";\n        url: \"https://github.com/grpc-ecosystem/grpc-gateway\";\n        email: \"none@example.com\";\n      };\n      license: {\n        name: \"BSD 3-Clause License\";\n        url: \"https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt\";\n      };\n    };\n    ...\n  };\n\n"},{"path":[4,4,1],"span":[264,8,12]},{"path":[4,4,2,0],"span":[266,2,19],"leadingComments":" The title of the application.\n"},{"path":[4,4,2,0,5],"span":[266,2,8]},{"path":[4,4,2,0,1],"span":[266,9,14]},{"path":[4,4,2,0,3],"span":[266,17,18]},{"path":[4,4,2,1],"span":[269,2,25],"leadingComments":" A short description of the application. GFM syntax can be used for rich\n text representation.\n"},{"path":[4,4,2,1,5],"span":[269,2,8]},{"path":[4,4,2,1,1],"span":[269,9,20]},{"path":[4,4,2,1,3],"span":[269,23,24]},{"path":[4,4,2,2],"span":[271,2,30],"leadingComments":" The Terms of Service for the API.\n"},{"path":[4,4,2,2,5],"span":[271,2,8]},{"path":[4,4,2,2,1],"span":[271,9,25]},{"path":[4,4,2,2,3],"span":[271,28,29]},{"path":[4,4,2,3],"span":[273,2,22],"leadingComments":" The contact information for the exposed API.\n"},{"path":[4,4,2,3,6],"span":[273,2,9]},{"path":[4,4,2,3,1],"span":[273,10,17]},{"path":[4,4,2,3,3],"span":[273,20,21]},{"path":[4,4,2,4],"span":[275,2,22],"leadingComments":" The license information for the exposed API.\n"},{"path":[4,4,2,4,6],"span":[275,2,9]},{"path":[4,4,2,4,1],"span":[275,10,17]},{"path":[4,4,2,4,3],"span":[275,20,21]},{"path":[4,4,2,5],"span":[278,2,21],"leadingComments":" Provides the version of the application API (not to be confused\n with the specification version).\n"},{"path":[4,4,2,5,5],"span":[278,2,8]},{"path":[4,4,2,5,1],"span":[278,9,16]},{"path":[4,4,2,5,3],"span":[278,19,20]},{"path":[4,4,2,6],"span":[279,2,52]},{"path":[4,4,2,6,6],"span":[279,2,36]},{"path":[4,4,2,6,1],"span":[279,37,47]},{"path":[4,4,2,6,3],"span":[279,50,51]},{"path":[4,5],"span":[301,0,310,1],"leadingComments":" `Contact` is a representation of OpenAPI v2 specification's Contact object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#contactObject\n\n Example:\n\n  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {\n    info: {\n      ...\n      contact: {\n        name: \"gRPC-Gateway project\";\n        url: \"https://github.com/grpc-ecosystem/grpc-gateway\";\n        email: \"none@example.com\";\n      };\n      ...\n    };\n    ...\n  };\n\n"},{"path":[4,5,1],"span":[301,8,15]},{"path":[4,5,2,0],"span":[303,2,18],"leadingComments":" The identifying name of the contact person/organization.\n"},{"path":[4,5,2,0,5],"span":[303,2,8]},{"path":[4,5,2,0,1],"span":[303,9,13]},{"path":[4,5,2,0,3],"span":[303,16,17]},{"path":[4,5,2,1],"span":[306,2,17],"leadingComments":" The URL pointing to the contact information. MUST be in the format of a\n URL.\n"},{"path":[4,5,2,1,5],"span":[306,2,8]},{"path":[4,5,2,1,1],"span":[306,9,12]},{"path":[4,5,2,1,3],"span":[306,15,16]},{"path":[4,5,2,2],"span":[309,2,19],"leadingComments":" The email address of the contact person/organization. MUST be in the format\n of an email address.\n"},{"path":[4,5,2,2,5],"span":[309,2,8]},{"path":[4,5,2,2,1],"span":[309,9,14]},{"path":[4,5,2,2,3],"span":[309,17,18]},{"path":[4,6],"span":[330,0,335,1],"leadingComments":" `License` is a representation of OpenAPI v2 specification's License object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#licenseObject\n\n Example:\n\n  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {\n    info: {\n      ...\n      license: {\n        name: \"BSD 3-Clause License\";\n        url: \"https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt\";\n      };\n      ...\n    };\n    ...\n  };\n\n"},{"path":[4,6,1],"span":[330,8,15]},{"path":[4,6,2,0],"span":[332,2,18],"leadingComments":" The license name used for the API.\n"},{"path":[4,6,2,0,5],"span":[332,2,8]},{"path":[4,6,2,0,1],"span":[332,9,13]},{"path":[4,6,2,0,3],"span":[332,16,17]},{"path":[4,6,2,1],"span":[334,2,17],"leadingComments":" A URL to the license used for the API. MUST be in the format of a URL.\n"},{"path":[4,6,2,1,5],"span":[334,2,8]},{"path":[4,6,2,1,1],"span":[334,9,12]},{"path":[4,6,2,1,3],"span":[334,15,16]},{"path":[4,7],"span":[353,0,360,1],"leadingComments":" `ExternalDocumentation` is a representation of OpenAPI v2 specification's\n ExternalDocumentation object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#externalDocumentationObject\n\n Example:\n\n  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {\n    ...\n    external_docs: {\n      description: \"More about gRPC-Gateway\";\n      url: \"https://github.com/grpc-ecosystem/grpc-gateway\";\n    }\n    ...\n  };\n\n"},{"path":[4,7,1],"span":[353,8,29]},{"path":[4,7,2,0],"span":[356,2,25],"leadingComments":" A short description of the target documentation. GFM syntax can be used for\n rich text representation.\n"},{"path":[4,7,2,0,5],"span":[356,2,8]},{"path":[4,7,2,0,1],"span":[356,9,20]},{"path":[4,7,2,0,3],"span":[356,23,24]},{"path":[4,7,2,1],"span":[359,2,17],"leadingComments":" The URL for the target documentation. Value MUST be in the format\n of a URL.\n"},{"path":[4,7,2,1,5],"span":[359,2,8]},{"path":[4,7,2,1,1],"span":[359,9,12]},{"path":[4,7,2,1,3],"span":[359,15,16]},{"path":[4,8],"span":[366,0,387,1],"leadingComments":" `Schema` is a representation of OpenAPI v2 specification's Schema object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject\n\n"},{"path":[4,8,1],"span":[366,8,14]},{"path":[4,8,2,0],"span":[367,2,29]},{"path":[4,8,2,0,6],"span":[367,2,12]},{"path":[4,8,2,0,1],"span":[367,13,24]},{"path":[4,8,2,0,3],"span":[367,27,28]},{"path":[4,8,2,1],"span":[373,2,27],"leadingComments":" Adds support for polymorphism. The discriminator is the schema property\n name that is used to differentiate between other schema that inherit this\n schema. The property name used MUST be defined at this schema and it MUST\n be in the required property list. When used, the value MUST be the name of\n this schema or any schema that inherits it.\n"},{"path":[4,8,2,1,5],"span":[373,2,8]},{"path":[4,8,2,1,1],"span":[373,9,22]},{"path":[4,8,2,1,3],"span":[373,25,26]},{"path":[4,8,2,2],"span":[379,2,21],"leadingComments":" Relevant only for Schema \"properties\" definitions. Declares the property as\n \"read only\". This means that it MAY be sent as part of a response but MUST\n NOT be sent as part of the request. Properties marked as readOnly being\n true SHOULD NOT be in the required list of the defined schema. Default\n value is false.\n"},{"path":[4,8,2,2,5],"span":[379,2,6]},{"path":[4,8,2,2,1],"span":[379,7,16]},{"path":[4,8,2,2,3],"span":[379,19,20]},{"path":[4,8,9],"span":[381,2,13],"leadingComments":" field 4 is reserved for 'xml'.\n"},{"path":[4,8,9,0],"span":[381,11,12]},{"path":[4,8,9,0,1],"span":[381,11,12]},{"path":[4,8,2,3],"span":[383,2,42],"leadingComments":" Additional external documentation for this schema.\n"},{"path":[4,8,2,3,6],"span":[383,2,23]},{"path":[4,8,2,3,1],"span":[383,24,37]},{"path":[4,8,2,3,3],"span":[383,40,41]},{"path":[4,8,2,4],"span":[386,2,21],"leadingComments":" A free-form property to include an example of an instance for this schema in JSON.\n This is copied verbatim to the output.\n"},{"path":[4,8,2,4,5],"span":[386,2,8]},{"path":[4,8,2,4,1],"span":[386,9,16]},{"path":[4,8,2,4,3],"span":[386,19,20]},{"path":[4,9],"span":[417,0,507,1],"leadingComments":" `JSONSchema` represents properties from JSON Schema taken, and as used, in\n the OpenAPI v2 spec.\n\n This includes changes made by OpenAPI v2.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject\n\n See also: https://cswr.github.io/JsonSchema/spec/basic_types/,\n https://github.com/json-schema-org/json-schema-spec/blob/master/schema.json\n\n Example:\n\n  message SimpleMessage {\n    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {\n      json_schema: {\n        title: \"SimpleMessage\"\n        description: \"A simple message.\"\n        required: [\"id\"]\n      }\n    };\n\n    // Id represents the message identifier.\n    string id = 1; [\n        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {\n          {description: \"The unique identifier of the simple message.\"\n        }];\n  }\n\n"},{"path":[4,9,1],"span":[417,8,18]},{"path":[4,9,9],"span":[419,2,13],"leadingComments":" field 1 is reserved for '$id', omitted from OpenAPI v2.\n"},{"path":[4,9,9,0],"span":[419,11,12]},{"path":[4,9,9,0,1],"span":[419,11,12]},{"path":[4,9,9],"span":[421,2,13],"leadingComments":" field 2 is reserved for '$schema', omitted from OpenAPI v2.\n"},{"path":[4,9,9,1],"span":[421,11,12]},{"path":[4,9,9,1,1],"span":[421,11,12]},{"path":[4,9,2,0],"span":[428,2,17],"leadingComments":" Ref is used to define an external reference to include in the message.\n This could be a fully qualified proto message reference, and that type must\n be imported into the protofile. If no message is identified, the Ref will\n be used verbatim in the output.\n For example:\n  `ref: \".google.protobuf.Timestamp\"`.\n"},{"path":[4,9,2,0,5],"span":[428,2,8]},{"path":[4,9,2,0,1],"span":[428,9,12]},{"path":[4,9,2,0,3],"span":[428,15,16]},{"path":[4,9,9],"span":[430,2,13],"leadingComments":" field 4 is reserved for '$comment', omitted from OpenAPI v2.\n"},{"path":[4,9,9,2],"span":[430,11,12]},{"path":[4,9,9,2,1],"span":[430,11,12]},{"path":[4,9,2,1],"span":[432,2,19],"leadingComments":" The title of the schema.\n"},{"path":[4,9,2,1,5],"span":[432,2,8]},{"path":[4,9,2,1,1],"span":[432,9,14]},{"path":[4,9,2,1,3],"span":[432,17,18]},{"path":[4,9,2,2],"span":[434,2,25],"leadingComments":" A short description of the schema.\n"},{"path":[4,9,2,2,5],"span":[434,2,8]},{"path":[4,9,2,2,1],"span":[434,9,20]},{"path":[4,9,2,2,3],"span":[434,23,24]},{"path":[4,9,2,3],"span":[435,2,21]},{"path":[4,9,2,3,5],"span":[435,2,8]},{"path":[4,9,2,3,1],"span":[435,9,16]},{"path":[4,9,2,3,3],"span":[435,19,20]},{"path":[4,9,2,4],"span":[436,2,21]},{"path":[4,9,2,4,5],"span":[436,2,6]},{"path":[4,9,2,4,1],"span":[436,7,16]},{"path":[4,9,2,4,3],"span":[436,19,20]},{"path":[4,9,2,5],"span":[440,2,21],"leadingComments":" A free-form property to include a JSON example of this field. This is copied\n verbatim to the output swagger.json. Quotes must be escaped.\n This property is the same for 2.0 and 3.0.0 https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/3.0.0.md#schemaObject  https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#schemaObject\n"},{"path":[4,9,2,5,5],"span":[440,2,8]},{"path":[4,9,2,5,1],"span":[440,9,16]},{"path":[4,9,2,5,3],"span":[440,19,20]},{"path":[4,9,2,6],"span":[441,2,26]},{"path":[4,9,2,6,5],"span":[441,2,8]},{"path":[4,9,2,6,1],"span":[441,9,20]},{"path":[4,9,2,6,3],"span":[441,23,25]},{"path":[4,9,2,7],"span":[444,2,22],"leadingComments":" Maximum represents an inclusive upper limit for a numeric instance. The \n value of MUST be a number, \n"},{"path":[4,9,2,7,5],"span":[444,2,8]},{"path":[4,9,2,7,1],"span":[444,9,16]},{"path":[4,9,2,7,3],"span":[444,19,21]},{"path":[4,9,2,8],"span":[445,2,30]},{"path":[4,9,2,8,5],"span":[445,2,6]},{"path":[4,9,2,8,1],"span":[445,7,24]},{"path":[4,9,2,8,3],"span":[445,27,29]},{"path":[4,9,2,9],"span":[448,2,22],"leadingComments":" minimum represents an inclusive lower limit for a numeric instance. The \n value of MUST be a number, \n"},{"path":[4,9,2,9,5],"span":[448,2,8]},{"path":[4,9,2,9,1],"span":[448,9,16]},{"path":[4,9,2,9,3],"span":[448,19,21]},{"path":[4,9,2,10],"span":[449,2,30]},{"path":[4,9,2,10,5],"span":[449,2,6]},{"path":[4,9,2,10,1],"span":[449,7,24]},{"path":[4,9,2,10,3],"span":[449,27,29]},{"path":[4,9,2,11],"span":[450,2,25]},{"path":[4,9,2,11,5],"span":[450,2,8]},{"path":[4,9,2,11,1],"span":[450,9,19]},{"path":[4,9,2,11,3],"span":[450,22,24]},{"path":[4,9,2,12],"span":[451,2,25]},{"path":[4,9,2,12,5],"span":[451,2,8]},{"path":[4,9,2,12,1],"span":[451,9,19]},{"path":[4,9,2,12,3],"span":[451,22,24]},{"path":[4,9,2,13],"span":[452,2,22]},{"path":[4,9,2,13,5],"span":[452,2,8]},{"path":[4,9,2,13,1],"span":[452,9,16]},{"path":[4,9,2,13,3],"span":[452,19,21]},{"path":[4,9,9],"span":[454,2,14],"leadingComments":" field 18 is reserved for 'additionalItems', omitted from OpenAPI v2.\n"},{"path":[4,9,9,3],"span":[454,11,13]},{"path":[4,9,9,3,1],"span":[454,11,13]},{"path":[4,9,9],"span":[457,2,14],"leadingComments":" field 19 is reserved for 'items', but in OpenAPI-specific way.\n TODO(ivucica): add 'items'?\n"},{"path":[4,9,9,4],"span":[457,11,13]},{"path":[4,9,9,4,1],"span":[457,11,13]},{"path":[4,9,2,14],"span":[458,2,24]},{"path":[4,9,2,14,5],"span":[458,2,8]},{"path":[4,9,2,14,1],"span":[458,9,18]},{"path":[4,9,2,14,3],"span":[458,21,23]},{"path":[4,9,2,15],"span":[459,2,24]},{"path":[4,9,2,15,5],"span":[459,2,8]},{"path":[4,9,2,15,1],"span":[459,9,18]},{"path":[4,9,2,15,3],"span":[459,21,23]},{"path":[4,9,2,16],"span":[460,2,25]},{"path":[4,9,2,16,5],"span":[460,2,6]},{"path":[4,9,2,16,1],"span":[460,7,19]},{"path":[4,9,2,16,3],"span":[460,22,24]},{"path":[4,9,9],"span":[462,2,14],"leadingComments":" field 23 is reserved for 'contains', omitted from OpenAPI v2.\n"},{"path":[4,9,9,5],"span":[462,11,13]},{"path":[4,9,9,5,1],"span":[462,11,13]},{"path":[4,9,2,17],"span":[463,2,29]},{"path":[4,9,2,17,5],"span":[463,2,8]},{"path":[4,9,2,17,1],"span":[463,9,23]},{"path":[4,9,2,17,3],"span":[463,26,28]},{"path":[4,9,2,18],"span":[464,2,29]},{"path":[4,9,2,18,5],"span":[464,2,8]},{"path":[4,9,2,18,1],"span":[464,9,23]},{"path":[4,9,2,18,3],"span":[464,26,28]},{"path":[4,9,2,19],"span":[465,2,32]},{"path":[4,9,2,19,4],"span":[465,2,10]},{"path":[4,9,2,19,5],"span":[465,11,17]},{"path":[4,9,2,19,1],"span":[465,18,26]},{"path":[4,9,2,19,3],"span":[465,29,31]},{"path":[4,9,9],"span":[468,2,14],"leadingComments":" field 27 is reserved for 'additionalProperties', but in OpenAPI-specific\n way. TODO(ivucica): add 'additionalProperties'?\n"},{"path":[4,9,9,6],"span":[468,11,13]},{"path":[4,9,9,6,1],"span":[468,11,13]},{"path":[4,9,9],"span":[470,2,14],"leadingComments":" field 28 is reserved for 'definitions', omitted from OpenAPI v2.\n"},{"path":[4,9,9,7],"span":[470,11,13]},{"path":[4,9,9,7,1],"span":[470,11,13]},{"path":[4,9,9],"span":[473,2,14],"leadingComments":" field 29 is reserved for 'properties', but in OpenAPI-specific way.\n TODO(ivucica): add 'additionalProperties'?\n"},{"path":[4,9,9,8],"span":[473,11,13]},{"path":[4,9,9,8,1],"span":[473,11,13]},{"path":[4,9,9],"span":[477,2,20],"leadingComments":" following fields are reserved, as the properties have been omitted from\n OpenAPI v2:\n patternProperties, dependencies, propertyNames, const\n"},{"path":[4,9,9,9],"span":[477,11,19]},{"path":[4,9,9,9,1],"span":[477,11,13]},{"path":[4,9,9,9,2],"span":[477,17,19]},{"path":[4,9,2,20],"span":[479,2,29],"leadingComments":" Items in 'array' must be unique.\n"},{"path":[4,9,2,20,4],"span":[479,2,10]},{"path":[4,9,2,20,5],"span":[479,11,17]},{"path":[4,9,2,20,1],"span":[479,18,23]},{"path":[4,9,2,20,3],"span":[479,26,28]},{"path":[4,9,4,0],"span":[481,2,490,3]},{"path":[4,9,4,0,1],"span":[481,7,28]},{"path":[4,9,4,0,2,0],"span":[482,4,16]},{"path":[4,9,4,0,2,0,1],"span":[482,4,11]},{"path":[4,9,4,0,2,0,2],"span":[482,14,15]},{"path":[4,9,4,0,2,1],"span":[483,4,14]},{"path":[4,9,4,0,2,1,1],"span":[483,4,9]},{"path":[4,9,4,0,2,1,2],"span":[483,12,13]},{"path":[4,9,4,0,2,2],"span":[484,4,16]},{"path":[4,9,4,0,2,2,1],"span":[484,4,11]},{"path":[4,9,4,0,2,2,2],"span":[484,14,15]},{"path":[4,9,4,0,2,3],"span":[485,4,16]},{"path":[4,9,4,0,2,3,1],"span":[485,4,11]},{"path":[4,9,4,0,2,3,2],"span":[485,14,15]},{"path":[4,9,4,0,2,4],"span":[486,4,13]},{"path":[4,9,4,0,2,4,1],"span":[486,4,8]},{"path":[4,9,4,0,2,4,2],"span":[486,11,12]},{"path":[4,9,4,0,2,5],"span":[487,4,15]},{"path":[4,9,4,0,2,5,1],"span":[487,4,10]},{"path":[4,9,4,0,2,5,2],"span":[487,13,14]},{"path":[4,9,4,0,2,6],"span":[488,4,15]},{"path":[4,9,4,0,2,6,1],"span":[488,4,10]},{"path":[4,9,4,0,2,6,2],"span":[488,13,14]},{"path":[4,9,4,0,2,7],"span":[489,4,15]},{"path":[4,9,4,0,2,7,1],"span":[489,4,10]},{"path":[4,9,4,0,2,7,2],"span":[489,13,14]},{"path":[4,9,2,21],"span":[492,2,43]},{"path":[4,9,2,21,4],"span":[492,2,10]},{"path":[4,9,2,21,6],"span":[492,11,32]},{"path":[4,9,2,21,1],"span":[492,33,37]},{"path":[4,9,2,21,3],"span":[492,40,42]},{"path":[4,9,2,22],"span":[494,2,21],"leadingComments":" `Format`\n"},{"path":[4,9,2,22,5],"span":[494,2,8]},{"path":[4,9,2,22,1],"span":[494,9,15]},{"path":[4,9,2,22,3],"span":[494,18,20]},{"path":[4,9,9],"span":[497,2,20],"leadingComments":" following fields are reserved, as the properties have been omitted from \n OpenAPI v2: contentMediaType, contentEncoding, if, then, else\n"},{"path":[4,9,9,10],"span":[497,11,19]},{"path":[4,9,9,10,1],"span":[497,11,13]},{"path":[4,9,9,10,2],"span":[497,17,19]},{"path":[4,9,9],"span":[500,2,14],"leadingComments":" field 42 is reserved for 'allOf', but in OpenAPI-specific way.\n TODO(ivucica): add 'allOf'?\n"},{"path":[4,9,9,11],"span":[500,11,13]},{"path":[4,9,9,11,1],"span":[500,11,13]},{"path":[4,9,9],"span":[504,2,20],"leadingComments":" following fields are reserved, as the properties have been omitted from\n OpenAPI v2:\n anyOf, oneOf, not\n"},{"path":[4,9,9,12],"span":[504,11,19]},{"path":[4,9,9,12,1],"span":[504,11,13]},{"path":[4,9,9,12,2],"span":[504,17,19]},{"path":[4,9,2,23],"span":[506,2,28],"leadingComments":" Items in `enum` must be unique https://tools.ietf.org/html/draft-fge-json-schema-validation-00#section-5.5.1\n"},{"path":[4,9,2,23,4],"span":[506,2,10]},{"path":[4,9,2,23,5],"span":[506,11,17]},{"path":[4,9,2,23,1],"span":[506,18,22]},{"path":[4,9,2,23,3],"span":[506,25,27]},{"path":[4,10],"span":[513,0,528,1],"leadingComments":" `Tag` is a representation of OpenAPI v2 specification's Tag object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#tagObject\n\n"},{"path":[4,10,1],"span":[513,8,11]},{"path":[4,10,9],"span":[522,2,13],"leadingComments":" field 1 is reserved for 'name'. In our generator, this is (to be) extracted\n from the name of proto service, and thus not exposed to the user, as\n changing tag object's name would break the link to the references to the\n tag in individual operation specifications.\n\n TODO(ivucica): Add 'name' property. Use it to allow override of the name of\n global Tag object, then use that name to reference the tag throughout the\n OpenAPI file.\n"},{"path":[4,10,9,0],"span":[522,11,12]},{"path":[4,10,9,0,1],"span":[522,11,12]},{"path":[4,10,2,0],"span":[525,2,25],"leadingComments":" A short description for the tag. GFM syntax can be used for rich text \n representation.\n"},{"path":[4,10,2,0,5],"span":[525,2,8]},{"path":[4,10,2,0,1],"span":[525,9,20]},{"path":[4,10,2,0,3],"span":[525,23,24]},{"path":[4,10,2,1],"span":[527,2,42],"leadingComments":" Additional external documentation for this tag.\n"},{"path":[4,10,2,1,6],"span":[527,2,23]},{"path":[4,10,2,1,1],"span":[527,24,37]},{"path":[4,10,2,1,3],"span":[527,40,41]},{"path":[4,11],"span":[538,0,542,1],"leadingComments":" `SecurityDefinitions` is a representation of OpenAPI v2 specification's\n Security Definitions object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityDefinitionsObject\n\n A declaration of the security schemes available to be used in the\n specification. This does not enforce the security schemes on the operations\n and only serves to provide the relevant details for each scheme.\n"},{"path":[4,11,1],"span":[538,8,27]},{"path":[4,11,2,0],"span":[541,2,43],"leadingComments":" A single security scheme definition, mapping a \"name\" to the scheme it\n defines.\n"},{"path":[4,11,2,0,6],"span":[541,2,29]},{"path":[4,11,2,0,1],"span":[541,30,38]},{"path":[4,11,2,0,3],"span":[541,41,42]},{"path":[4,12],"span":[553,0,608,1],"leadingComments":" `SecurityScheme` is a representation of OpenAPI v2 specification's\n Security Scheme object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securitySchemeObject\n\n Allows the definition of a security scheme that can be used by the\n operations. Supported schemes are basic authentication, an API key (either as\n a header or as a query parameter) and OAuth2's common flows (implicit,\n password, application and access code).\n"},{"path":[4,12,1],"span":[553,8,22]},{"path":[4,12,4,0],"span":[556,2,561,3],"leadingComments":" The type of the security scheme. Valid values are \"basic\",\n \"apiKey\" or \"oauth2\".\n"},{"path":[4,12,4,0,1],"span":[556,7,11]},{"path":[4,12,4,0,2,0],"span":[557,4,21]},{"path":[4,12,4,0,2,0,1],"span":[557,4,16]},{"path":[4,12,4,0,2,0,2],"span":[557,19,20]},{"path":[4,12,4,0,2,1],"span":[558,4,19]},{"path":[4,12,4,0,2,1,1],"span":[558,4,14]},{"path":[4,12,4,0,2,1,2],"span":[558,17,18]},{"path":[4,12,4,0,2,2],"span":[559,4,21]},{"path":[4,12,4,0,2,2,1],"span":[559,4,16]},{"path":[4,12,4,0,2,2,2],"span":[559,19,20]},{"path":[4,12,4,0,2,3],"span":[560,4,20]},{"path":[4,12,4,0,2,3,1],"span":[560,4,15]},{"path":[4,12,4,0,2,3,2],"span":[560,18,19]},{"path":[4,12,4,1],"span":[564,2,568,3],"leadingComments":" The location of the API key. Valid values are \"query\" or \"header\".\n"},{"path":[4,12,4,1,1],"span":[564,7,9]},{"path":[4,12,4,1,2,0],"span":[565,4,19]},{"path":[4,12,4,1,2,0,1],"span":[565,4,14]},{"path":[4,12,4,1,2,0,2],"span":[565,17,18]},{"path":[4,12,4,1,2,1],"span":[566,4,17]},{"path":[4,12,4,1,2,1,1],"span":[566,4,12]},{"path":[4,12,4,1,2,1,2],"span":[566,15,16]},{"path":[4,12,4,1,2,2],"span":[567,4,18]},{"path":[4,12,4,1,2,2,1],"span":[567,4,13]},{"path":[4,12,4,1,2,2,2],"span":[567,16,17]},{"path":[4,12,4,2],"span":[572,2,578,3],"leadingComments":" The flow used by the OAuth2 security scheme. Valid values are\n \"implicit\", \"password\", \"application\" or \"accessCode\".\n"},{"path":[4,12,4,2,1],"span":[572,7,11]},{"path":[4,12,4,2,2,0],"span":[573,4,21]},{"path":[4,12,4,2,2,0,1],"span":[573,4,16]},{"path":[4,12,4,2,2,0,2],"span":[573,19,20]},{"path":[4,12,4,2,2,1],"span":[574,4,22]},{"path":[4,12,4,2,2,1,1],"span":[574,4,17]},{"path":[4,12,4,2,2,1,2],"span":[574,20,21]},{"path":[4,12,4,2,2,2],"span":[575,4,22]},{"path":[4,12,4,2,2,2,1],"span":[575,4,17]},{"path":[4,12,4,2,2,2,2],"span":[575,20,21]},{"path":[4,12,4,2,2,3],"span":[576,4,25]},{"path":[4,12,4,2,2,3,1],"span":[576,4,20]},{"path":[4,12,4,2,2,3,2],"span":[576,23,24]},{"path":[4,12,4,2,2,4],"span":[577,4,25]},{"path":[4,12,4,2,2,4,1],"span":[577,4,20]},{"path":[4,12,4,2,2,4,2],"span":[577,23,24]},{"path":[4,12,2,0],"span":[582,2,16],"leadingComments":" The type of the security scheme. Valid values are \"basic\",\n \"apiKey\" or \"oauth2\".\n"},{"path":[4,12,2,0,6],"span":[582,2,6]},{"path":[4,12,2,0,1],"span":[582,7,11]},{"path":[4,12,2,0,3],"span":[582,14,15]},{"path":[4,12,2,1],"span":[584,2,25],"leadingComments":" A short description for security scheme.\n"},{"path":[4,12,2,1,5],"span":[584,2,8]},{"path":[4,12,2,1,1],"span":[584,9,20]},{"path":[4,12,2,1,3],"span":[584,23,24]},{"path":[4,12,2,2],"span":[587,2,18],"leadingComments":" The name of the header or query parameter to be used.\n Valid for apiKey.\n"},{"path":[4,12,2,2,5],"span":[587,2,8]},{"path":[4,12,2,2,1],"span":[587,9,13]},{"path":[4,12,2,2,3],"span":[587,16,17]},{"path":[4,12,2,3],"span":[591,2,12],"leadingComments":" The location of the API key. Valid values are \"query\" or\n \"header\".\n Valid for apiKey.\n"},{"path":[4,12,2,3,6],"span":[591,2,4]},{"path":[4,12,2,3,1],"span":[591,5,7]},{"path":[4,12,2,3,3],"span":[591,10,11]},{"path":[4,12,2,4],"span":[595,2,16],"leadingComments":" The flow used by the OAuth2 security scheme. Valid values are\n \"implicit\", \"password\", \"application\" or \"accessCode\".\n Valid for oauth2.\n"},{"path":[4,12,2,4,6],"span":[595,2,6]},{"path":[4,12,2,4,1],"span":[595,7,11]},{"path":[4,12,2,4,3],"span":[595,14,15]},{"path":[4,12,2,5],"span":[599,2,31],"leadingComments":" The authorization URL to be used for this flow. This SHOULD be in\n the form of a URL.\n Valid for oauth2/implicit and oauth2/accessCode.\n"},{"path":[4,12,2,5,5],"span":[599,2,8]},{"path":[4,12,2,5,1],"span":[599,9,26]},{"path":[4,12,2,5,3],"span":[599,29,30]},{"path":[4,12,2,6],"span":[603,2,23],"leadingComments":" The token URL to be used for this flow. This SHOULD be in the\n form of a URL.\n Valid for oauth2/password, oauth2/application and oauth2/accessCode.\n"},{"path":[4,12,2,6,5],"span":[603,2,8]},{"path":[4,12,2,6,1],"span":[603,9,18]},{"path":[4,12,2,6,3],"span":[603,21,22]},{"path":[4,12,2,7],"span":[606,2,20],"leadingComments":" The available scopes for the OAuth2 security scheme.\n Valid for oauth2.\n"},{"path":[4,12,2,7,6],"span":[606,2,8]},{"path":[4,12,2,7,1],"span":[606,9,15]},{"path":[4,12,2,7,3],"span":[606,18,19]},{"path":[4,12,2,8],"span":[607,2,52]},{"path":[4,12,2,8,6],"span":[607,2,36]},{"path":[4,12,2,8,1],"span":[607,37,47]},{"path":[4,12,2,8,3],"span":[607,50,51]},{"path":[4,13],"span":[621,0,633,1],"leadingComments":" `SecurityRequirement` is a representation of OpenAPI v2 specification's\n Security Requirement object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#securityRequirementObject\n\n Lists the required security schemes to execute this operation. The object can\n have multiple security schemes declared in it which are all required (that\n is, there is a logical AND between the schemes).\n\n The name used for each property MUST correspond to a security scheme\n declared in the Security Definitions.\n"},{"path":[4,13,1],"span":[621,8,27]},{"path":[4,13,3,0],"span":[625,2,627,3],"leadingComments":" If the security scheme is of type \"oauth2\", then the value is a list of\n scope names required for the execution. For other security scheme types,\n the array MUST be empty.\n"},{"path":[4,13,3,0,1],"span":[625,10,34]},{"path":[4,13,3,0,2,0],"span":[626,4,30]},{"path":[4,13,3,0,2,0,4],"span":[626,4,12]},{"path":[4,13,3,0,2,0,5],"span":[626,13,19]},{"path":[4,13,3,0,2,0,1],"span":[626,20,25]},{"path":[4,13,3,0,2,0,3],"span":[626,28,29]},{"path":[4,13,2,0],"span":[632,2,65],"leadingComments":" Each name must correspond to a security scheme which is declared in\n the Security Definitions. If the security scheme is of type \"oauth2\",\n then the value is a list of scope names required for the execution.\n For other security scheme types, the array MUST be empty.\n"},{"path":[4,13,2,0,6],"span":[632,2,39]},{"path":[4,13,2,0,1],"span":[632,40,60]},{"path":[4,13,2,0,3],"span":[632,63,64]},{"path":[4,14],"span":[640,0,644,1],"leadingComments":" `Scopes` is a representation of OpenAPI v2 specification's Scopes object.\n\n See: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md#scopesObject\n\n Lists the available scopes for an OAuth2 security scheme.\n"},{"path":[4,14,1],"span":[640,8,14]},{"path":[4,14,2,0],"span":[643,2,32],"leadingComments":" Maps between a name of a scope to a short description of it (as the value\n of the property).\n"},{"path":[4,14,2,0,6],"span":[643,2,21]},{"path":[4,14,2,0,1],"span":[643,22,27]},{"path":[4,14,2,0,3],"span":[643,30,31]}]},"syntax":"proto3"},{"name":"protoc-gen-openapiv2/options/annotations.proto","package":"grpc.gateway.protoc_gen_openapiv2.options","dependency":["google/protobuf/descriptor.proto","protoc-gen-openapiv2/options/openapiv2.proto"],"extension":[{"name":"openapiv2_swagger","number":1042,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Swagger","extendee":".google.protobuf.FileOptions","jsonName":"openapiv2Swagger"},{"name":"openapiv2_operation","number":1042,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Operation","extendee":".google.protobuf.MethodOptions","jsonName":"openapiv2Operation"},{"name":"openapiv2_schema","number":1042,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Schema","extendee":".google.protobuf.MessageOptions","jsonName":"openapiv2Schema"},{"name":"openapiv2_tag","number":1042,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.Tag","extendee":".google.protobuf.ServiceOptions","jsonName":"openapiv2Tag"},{"name":"openapiv2_field","number":1042,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".grpc.gateway.protoc_gen_openapiv2.options.JSONSchema","extendee":".google.protobuf.FieldOptions","jsonName":"openapiv2Field"}],"options":{"goPackage":"github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"},"sourceCodeInfo":{"location":[{"span":[0,0,43,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,50]},{"path":[8],"span":[4,0,93]},{"path":[8,11],"span":[4,0,93]},{"path":[3,0],"span":[6,0,42]},{"path":[3,1],"span":[7,0,54]},{"path":[7],"span":[9,0,15,1]},{"path":[7,0],"span":[14,2,35],"leadingComments":" ID assigned by protobuf-global-extension-registry@google.com for gRPC-Gateway project.\n\n All IDs are the same, as assigned. It is okay that they are the same, as they extend\n different descriptor messages.\n"},{"path":[7,0,2],"span":[9,7,34]},{"path":[7,0,6],"span":[14,2,9]},{"path":[7,0,1],"span":[14,10,27]},{"path":[7,0,3],"span":[14,30,34]},{"path":[7],"span":[16,0,22,1]},{"path":[7,1],"span":[21,2,39],"leadingComments":" ID assigned by protobuf-global-extension-registry@google.com for gRPC-Gateway project.\n\n All IDs are the same, as assigned. It is okay that they are the same, as they extend\n different descriptor messages.\n"},{"path":[7,1,2],"span":[16,7,36]},{"path":[7,1,6],"span":[21,2,11]},{"path":[7,1,1],"span":[21,12,31]},{"path":[7,1,3],"span":[21,34,38]},{"path":[7],"span":[23,0,29,1]},{"path":[7,2],"span":[28,2,33],"leadingComments":" ID assigned by protobuf-global-extension-registry@google.com for gRPC-Gateway project.\n\n All IDs are the same, as assigned. It is okay that they are the same, as they extend\n different descriptor messages.\n"},{"path":[7,2,2],"span":[23,7,37]},{"path":[7,2,6],"span":[28,2,8]},{"path":[7,2,1],"span":[28,9,25]},{"path":[7,2,3],"span":[28,28,32]},{"path":[7],"span":[30,0,36,1]},{"path":[7,3],"span":[35,2,27],"leadingComments":" ID assigned by protobuf-global-extension-registry@google.com for gRPC-Gateway project.\n\n All IDs are the same, as assigned. It is okay that they are the same, as they extend\n different descriptor messages.\n"},{"path":[7,3,2],"span":[30,7,37]},{"path":[7,3,6],"span":[35,2,5]},{"path":[7,3,1],"span":[35,6,19]},{"path":[7,3,3],"span":[35,22,26]},{"path":[7],"span":[37,0,43,1]},{"path":[7,4],"span":[42,2,36],"leadingComments":" ID assigned by protobuf-global-extension-registry@google.com for gRPC-Gateway project.\n\n All IDs are the same, as assigned. It is okay that they are the same, as they extend\n different descriptor messages.\n"},{"path":[7,4,2],"span":[37,7,35]},{"path":[7,4,6],"span":[42,2,12]},{"path":[7,4,1],"span":[42,13,28]},{"path":[7,4,3],"span":[42,31,35]}]},"syntax":"proto3"},{"name":"protos/common/v1/health.proto","package":"protos.common.v1","dependency":["protoc-gen-openapiv2/options/annotations.proto"],"messageType":[{"name":"HealthRequest"},{"name":"HealthResponse","field":[{"name":"status","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".protos.common.v1.HealthStatus","jsonName":"status"}],"options":{"[grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema]":{"jsonSchema":{"title":"protos.v1.HealthResponse"}}}}],"enumType":[{"name":"HealthStatus","value":[{"name":"HEALTH_STATUS_UNSPECIFIED","number":0},{"name":"HEALTH_STATUS_SERVING","number":1},{"name":"HEALTH_STATUS_WARNING","number":2},{"name":"HEALTH_STATUS_DEGRADED","number":3},{"name":"HEALTH_STATUS_CRITICAL","number":4}]}],"options":{"goPackage":"protocol-example/gen/go/protos/common/v1;commonpb"},"sourceCodeInfo":{"location":[{"span":[0,0,35,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,25]},{"path":[8],"span":[3,0,72]},{"path":[8,11],"span":[3,0,72]},{"path":[3,0],"span":[5,0,56]},{"path":[4,0],"span":[7,0,24]},{"path":[4,0,1],"span":[7,8,21]},{"path":[5,0],"span":[9,0,19,1]},{"path":[5,0,1],"span":[9,5,17]},{"path":[5,0,2,0],"span":[10,2,32]},{"path":[5,0,2,0,1],"span":[10,2,27]},{"path":[5,0,2,0,2],"span":[10,30,31]},{"path":[5,0,2,1],"span":[12,2,28],"leadingComments":" The application run normally and successfully\n"},{"path":[5,0,2,1,1],"span":[12,2,23]},{"path":[5,0,2,1,2],"span":[12,26,27]},{"path":[5,0,2,2],"span":[14,2,28],"leadingComments":" An error is occurred recently and can produce more errors. One or more components in the stack might become overloaded soon.\n"},{"path":[5,0,2,2,1],"span":[14,2,23]},{"path":[5,0,2,2,2],"span":[14,26,27]},{"path":[5,0,2,3],"span":[16,2,29],"leadingComments":" A partial anomaly of full outage of service. Non-security patches might be available.\n"},{"path":[5,0,2,3,1],"span":[16,2,24]},{"path":[5,0,2,3,2],"span":[16,27,28]},{"path":[5,0,2,4],"span":[18,2,29],"leadingComments":" One or more components in the stack might be in an unusable status and the stack might become unresponsive soon. Security patches might be available.\n"},{"path":[5,0,2,4,1],"span":[18,2,24]},{"path":[5,0,2,4,2],"span":[18,27,28]},{"path":[4,1],"span":[27,0,35,1],"leadingComments":"\n HealthResponse Message\n\n This message is only used to respond to Health Service.\n This message return an enumerator of Status onf app\n"},{"path":[4,1,1],"span":[27,8,22]},{"path":[4,1,7],"span":[28,2,32,4]},{"path":[4,1,7,1042],"span":[28,2,32,4]},{"path":[4,1,2,0],"span":[34,2,26],"leadingComments":" Status represents the current status of the application\n"},{"path":[4,1,2,0,6],"span":[34,2,14]},{"path":[4,1,2,0,1],"span":[34,15,21]},{"path":[4,1,2,0,3],"span":[34,24,25]}]},"syntax":"proto3"},{"name":"protos/common/v1/project_state.proto","package":"protos.common.v1","enumType":[{"name":"ProjectState","value":[{"name":"PROJECT_STATE_UNSPECIFIED","number":0},{"name":"PROJECT_STATE_PENDING","number":1},{"name":"PROJECT_STATE_FUNDED","number":2},{"name":"PROJECT_STATE_WAITING_FOR_VALIDATION","number":3},{"name":"PROJECT_STATE_PUBLISHED","number":4},{"name":"PROJECT_STATE_CREATED","number":5},{"name":"PROJECT_STATE_WAITING_FOR_APPROVAL","number":6},{"name":"PROJECT_STATE_FAILED","number":7}]}],"options":{"goPackage":"protocol-example/gen/go/protos/common/v1;commonpb"},"sourceCodeInfo":{"location":[{"span":[0,0,14,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,25]},{"path":[8],"span":[3,0,72]},{"path":[8,11],"span":[3,0,72]},{"path":[5,0],"span":[5,0,14,1]},{"path":[5,0,1],"span":[5,5,17]},{"path":[5,0,2,0],"span":[6,2,32]},{"path":[5,0,2,0,1],"span":[6,2,27]},{"path":[5,0,2,0,2],"span":[6,30,31]},{"path":[5,0,2,1],"span":[7,2,28]},{"path":[5,0,2,1,1],"span":[7,2,23]},{"path":[5,0,2,1,2],"span":[7,26,27]},{"path":[5,0,2,2],"span":[8,2,27]},{"path":[5,0,2,2,1],"span":[8,2,22]},{"path":[5,0,2,2,2],"span":[8,25,26]},{"path":[5,0,2,3],"span":[9,2,43]},{"path":[5,0,2,3,1],"span":[9,2,38]},{"path":[5,0,2,3,2],"span":[9,41,42]},{"path":[5,0,2,4],"span":[10,2,30]},{"path":[5,0,2,4,1],"span":[10,2,25]},{"path":[5,0,2,4,2],"span":[10,28,29]},{"path":[5,0,2,5],"span":[11,2,28]},{"path":[5,0,2,5,1],"span":[11,2,23]},{"path":[5,0,2,5,2],"span":[11,26,27]},{"path":[5,0,2,6],"span":[12,2,41]},{"path":[5,0,2,6,1],"span":[12,2,36]},{"path":[5,0,2,6,2],"span":[12,39,40]},{"path":[5,0,2,7],"span":[13,2,27]},{"path":[5,0,2,7,1],"span":[13,2,22]},{"path":[5,0,2,7,2],"span":[13,25,26]}]},"syntax":"proto3"},{"name":"protos/common/v1/project_type.proto","package":"protos.common.v1","enumType":[{"name":"ProjectType","value":[{"name":"PROJECT_TYPE_UNSPECIFIED","number":0},{"name":"PROJECT_TYPE_DONATION","number":1},{"name":"PROJECT_TYPE_LENDING","number":2}]}],"options":{"goPackage":"protocol-example/gen/go/protos/common/v1;commonpb"},"sourceCodeInfo":{"location":[{"span":[0,0,9,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,25]},{"path":[8],"span":[3,0,72]},{"path":[8,11],"span":[3,0,72]},{"path":[5,0],"span":[5,0,9,1]},{"path":[5,0,1],"span":[5,5,16]},{"path":[5,0,2,0],"span":[6,2,31],"trailingComments":" All\n"},{"path":[5,0,2,0,1],"span":[6,2,26]},{"path":[5,0,2,0,2],"span":[6,29,30]},{"path":[5,0,2,1],"span":[7,2,28],"trailingComments":" Project::Collect::Donation\n"},{"path":[5,0,2,1,1],"span":[7,2,23]},{"path":[5,0,2,1,2],"span":[7,26,27]},{"path":[5,0,2,2],"span":[8,2,27],"trailingComments":" Project::Collect::Lending\n"},{"path":[5,0,2,2,1],"span":[8,2,22]},{"path":[5,0,2,2,2],"span":[8,25,26]}]},"syntax":"proto3"},{"name":"protos/common/v1/term_frequency.proto","package":"protos.common.v1","enumType":[{"name":"TermFrequency","value":[{"name":"TERM_FREQUENCY_UNSPECIFIED","number":0},{"name":"TERM_FREQUENCY_MONTHLY","number":1},{"name":"TERM_FREQUENCY_QUARTERLY","number":2},{"name":"TERM_FREQUENCY_HALF_YEARLY","number":3},{"name":"TERM_FREQUENCY_YEARLY","number":4}]}],"options":{"goPackage":"protocol-example/gen/go/protos/common/v1;commonpb"},"sourceCodeInfo":{"location":[{"span":[0,0,12,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,25]},{"path":[8],"span":[3,0,72]},{"path":[8,11],"span":[3,0,72]},{"path":[5,0],"span":[6,0,12,1]},{"path":[5,0,1],"span":[6,5,18]},{"path":[5,0,2,0],"span":[7,2,33]},{"path":[5,0,2,0,1],"span":[7,2,28]},{"path":[5,0,2,0,2],"span":[7,31,32]},{"path":[5,0,2,1],"span":[8,2,29]},{"path":[5,0,2,1,1],"span":[8,2,24]},{"path":[5,0,2,1,2],"span":[8,27,28]},{"path":[5,0,2,2],"span":[9,2,31]},{"path":[5,0,2,2,1],"span":[9,2,26]},{"path":[5,0,2,2,2],"span":[9,29,30]},{"path":[5,0,2,3],"span":[10,2,33]},{"path":[5,0,2,3,1],"span":[10,2,28]},{"path":[5,0,2,3,2],"span":[10,31,32]},{"path":[5,0,2,4],"span":[11,2,28]},{"path":[5,0,2,4,1],"span":[11,2,23]},{"path":[5,0,2,4,2],"span":[11,26,27]}]},"syntax":"proto3"},{"name":"google/api/http.proto","package":"google.api","messageType":[{"name":"Http","field":[{"name":"rules","number":1,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.HttpRule","jsonName":"rules"},{"name":"fully_decode_reserved_expansion","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_BOOL","jsonName":"fullyDecodeReservedExpansion"}]},{"name":"HttpRule","field":[{"name":"selector","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"selector"},{"name":"get","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"get"},{"name":"put","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"put"},{"name":"post","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"post"},{"name":"delete","number":5,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"delete"},{"name":"patch","number":6,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"patch"},{"name":"custom","number":8,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.CustomHttpPattern","oneofIndex":0,"jsonName":"custom"},{"name":"body","number":7,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"body"},{"name":"response_body","number":12,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"responseBody"},{"name":"additional_bindings","number":11,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".google.api.HttpRule","jsonName":"additionalBindings"}],"oneofDecl":[{"name":"pattern"}]},{"name":"CustomHttpPattern","field":[{"name":"kind","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"kind"},{"name":"path","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"path"}]}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"HttpProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api/annotations;annotations","ccEnableArenas":true,"objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,374,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2015 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[8],"span":[18,0,31]},{"path":[8,31],"span":[18,0,31]},{"path":[8],"span":[19,0,88]},{"path":[8,11],"span":[19,0,88]},{"path":[8],"span":[20,0,34]},{"path":[8,10],"span":[20,0,34]},{"path":[8],"span":[21,0,42]},{"path":[8,8],"span":[21,0,42]},{"path":[8],"span":[22,0,39]},{"path":[8,1],"span":[22,0,39]},{"path":[8],"span":[23,0,34]},{"path":[8,36],"span":[23,0,34]},{"path":[4,0],"span":[28,0,41,1],"leadingComments":" Defines the HTTP configuration for an API service. It contains a list of\n [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method\n to one or more HTTP REST API methods.\n"},{"path":[4,0,1],"span":[28,8,12]},{"path":[4,0,2,0],"span":[32,2,30],"leadingComments":" A list of HTTP configuration rules that apply to individual API methods.\n\n **NOTE:** All service configuration rules follow \"last one wins\" order.\n"},{"path":[4,0,2,0,4],"span":[32,2,10]},{"path":[4,0,2,0,6],"span":[32,11,19]},{"path":[4,0,2,0,1],"span":[32,20,25]},{"path":[4,0,2,0,3],"span":[32,28,29]},{"path":[4,0,2,1],"span":[40,2,43],"leadingComments":" When set to true, URL path parameters will be fully URI-decoded except in\n cases of single segment matches in reserved expansion, where \"%2F\" will be\n left encoded.\n\n The default behavior is to not decode RFC 6570 reserved characters in multi\n segment matches.\n"},{"path":[4,0,2,1,5],"span":[40,2,6]},{"path":[4,0,2,1,1],"span":[40,7,38]},{"path":[4,0,2,1,3],"span":[40,41,42]},{"path":[4,1],"span":[312,0,365,1],"leadingComments":" # gRPC Transcoding\n\n gRPC Transcoding is a feature for mapping between a gRPC method and one or\n more HTTP REST endpoints. It allows developers to build a single API service\n that supports both gRPC APIs and REST APIs. Many systems, including [Google\n APIs](https://github.com/googleapis/googleapis),\n [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC\n Gateway](https://github.com/grpc-ecosystem/grpc-gateway),\n and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature\n and use it for large scale production services.\n\n `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies\n how different portions of the gRPC request message are mapped to the URL\n path, URL query parameters, and HTTP request body. It also controls how the\n gRPC response message is mapped to the HTTP response body. `HttpRule` is\n typically specified as an `google.api.http` annotation on the gRPC method.\n\n Each mapping specifies a URL path template and an HTTP method. The path\n template may refer to one or more fields in the gRPC request message, as long\n as each field is a non-repeated field with a primitive (non-message) type.\n The path template controls how fields of the request message are mapped to\n the URL path.\n\n Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get: \"/v1/{name=messages/*}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       string name = 1; // Mapped to URL path.\n     }\n     message Message {\n       string text = 1; // The resource content.\n     }\n\n This enables an HTTP REST to gRPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456`  | `GetMessage(name: \"messages/123456\")`\n\n Any fields in the request message which are not bound by the path template\n automatically become HTTP query parameters if there is no HTTP request body.\n For example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get:\"/v1/messages/{message_id}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       message SubMessage {\n         string subfield = 1;\n       }\n       string message_id = 1; // Mapped to URL path.\n       int64 revision = 2;    // Mapped to URL query parameter `revision`.\n       SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.\n     }\n\n This enables a HTTP JSON to RPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456?revision=2&sub.subfield=foo` |\n `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield:\n \"foo\"))`\n\n Note that fields which are mapped to URL query parameters must have a\n primitive type or a repeated primitive type or a non-repeated message type.\n In the case of a repeated type, the parameter can be repeated in the URL\n as `...?param=A&param=B`. In the case of a message type, each field of the\n message is mapped to a separate parameter, such as\n `...?foo.a=A&foo.b=B&foo.c=C`.\n\n For HTTP methods that allow a request body, the `body` field\n specifies the mapping. Consider a REST update method on the\n message resource collection:\n\n     service Messaging {\n       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"message\"\n         };\n       }\n     }\n     message UpdateMessageRequest {\n       string message_id = 1; // mapped to the URL\n       Message message = 2;   // mapped to the body\n     }\n\n The following HTTP JSON to RPC mapping is enabled, where the\n representation of the JSON in the request body is determined by\n protos JSON encoding:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" message { text: \"Hi!\" })`\n\n The special name `*` can be used in the body mapping to define that\n every field not bound by the path template should be mapped to the\n request body.  This enables the following alternative definition of\n the update method:\n\n     service Messaging {\n       rpc UpdateMessage(Message) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"*\"\n         };\n       }\n     }\n     message Message {\n       string message_id = 1;\n       string text = 2;\n     }\n\n\n The following HTTP JSON to RPC mapping is enabled:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" text: \"Hi!\")`\n\n Note that when using `*` in the body mapping, it is not possible to\n have HTTP parameters, as all fields not bound by the path end in\n the body. This makes this option more rarely used in practice when\n defining REST APIs. The common usage of `*` is in custom methods\n which don't use the URL at all for transferring data.\n\n It is possible to define multiple HTTP methods for one RPC by using\n the `additional_bindings` option. Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           get: \"/v1/messages/{message_id}\"\n           additional_bindings {\n             get: \"/v1/users/{user_id}/messages/{message_id}\"\n           }\n         };\n       }\n     }\n     message GetMessageRequest {\n       string message_id = 1;\n       string user_id = 2;\n     }\n\n This enables the following two alternative HTTP JSON to RPC mappings:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id:\n \"123456\")`\n\n ## Rules for HTTP mapping\n\n 1. Leaf request fields (recursive expansion nested messages in the request\n    message) are classified into three categories:\n    - Fields referred by the path template. They are passed via the URL path.\n    - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They are passed via the HTTP\n      request body.\n    - All other fields are passed via the URL query parameters, and the\n      parameter name is the field path in the request message. A repeated\n      field can be represented as multiple query parameters under the same\n      name.\n  2. If [HttpRule.body][google.api.HttpRule.body] is \"*\", there is no URL query parameter, all fields\n     are passed via URL path and HTTP request body.\n  3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP request body, all\n     fields are passed via URL path and URL query parameters.\n\n ### Path template syntax\n\n     Template = \"/\" Segments [ Verb ] ;\n     Segments = Segment { \"/\" Segment } ;\n     Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n     Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n     FieldPath = IDENT { \".\" IDENT } ;\n     Verb     = \":\" LITERAL ;\n\n The syntax `*` matches a single URL path segment. The syntax `**` matches\n zero or more URL path segments, which must be the last part of the URL path\n except the `Verb`.\n\n The syntax `Variable` matches part of the URL path as specified by its\n template. A variable template must not contain other variables. If a variable\n matches a single path segment, its template may be omitted, e.g. `{var}`\n is equivalent to `{var=*}`.\n\n The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`\n contains any reserved character, such characters should be percent-encoded\n before the matching.\n\n If a variable contains exactly one path segment, such as `\"{var}\"` or\n `\"{var=*}\"`, when such a variable is expanded into a URL path on the client\n side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The\n server side does the reverse decoding. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{var}`.\n\n If a variable contains multiple path segments, such as `\"{var=foo/*}\"`\n or `\"{var=**}\"`, when such a variable is expanded into a URL path on the\n client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.\n The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left\n unchanged. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{+var}`.\n\n ## Using gRPC API Service Configuration\n\n gRPC API Service Configuration (service config) is a configuration language\n for configuring a gRPC service to become a user-facing product. The\n service config is simply the YAML representation of the `google.api.Service`\n proto message.\n\n As an alternative to annotating your proto file, you can configure gRPC\n transcoding in your service config YAML files. You do this by specifying a\n `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same\n effect as the proto annotation. This can be particularly useful if you\n have a proto that is reused in multiple services. Note that any transcoding\n specified in the service config will override any matching transcoding\n configuration in the proto.\n\n Example:\n\n     http:\n       rules:\n         # Selects a gRPC method and applies HttpRule to it.\n         - selector: example.v1.Messaging.GetMessage\n           get: /v1/messages/{message_id}/{sub.subfield}\n\n ## Special notes\n\n When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the\n proto to JSON conversion must follow the [proto3\n specification](https://developers.google.com/protocol-buffers/docs/proto3#json).\n\n While the single segment variable follows the semantics of\n [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String\n Expansion, the multi segment variable **does not** follow RFC 6570 Section\n 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion\n does not expand special characters like `?` and `#`, which would lead\n to invalid URLs. As the result, gRPC Transcoding uses a custom encoding\n for multi segment variables.\n\n The path variables **must not** refer to any repeated or mapped field,\n because client libraries are not capable of handling such variable expansion.\n\n The path variables **must not** capture the leading \"/\" character. The reason\n is that the most common use case \"{var}\" does not capture the leading \"/\"\n character. For consistency, all path variables must share the same behavior.\n\n Repeated message fields must not be mapped to URL query parameters, because\n no client library can support such complicated mapping.\n\n If an API needs to use a JSON array for request or response body, it can map\n the request or response body to a repeated field. However, some gRPC\n Transcoding implementations may not support this feature.\n"},{"path":[4,1,1],"span":[312,8,16]},{"path":[4,1,2,0],"span":[316,2,22],"leadingComments":" Selects a method to which this rule applies.\n\n Refer to [selector][google.api.DocumentationRule.selector] for syntax details.\n"},{"path":[4,1,2,0,5],"span":[316,2,8]},{"path":[4,1,2,0,1],"span":[316,9,17]},{"path":[4,1,2,0,3],"span":[316,20,21]},{"path":[4,1,8,0],"span":[321,2,343,3],"leadingComments":" Determines the URL pattern is matched by this rules. This pattern can be\n used with any of the {get|put|post|delete|patch} methods. A custom method\n can be defined using the 'custom' field.\n"},{"path":[4,1,8,0,1],"span":[321,8,15]},{"path":[4,1,2,1],"span":[324,4,19],"leadingComments":" Maps to HTTP GET. Used for listing and getting information about\n resources.\n"},{"path":[4,1,2,1,5],"span":[324,4,10]},{"path":[4,1,2,1,1],"span":[324,11,14]},{"path":[4,1,2,1,3],"span":[324,17,18]},{"path":[4,1,2,2],"span":[327,4,19],"leadingComments":" Maps to HTTP PUT. Used for replacing a resource.\n"},{"path":[4,1,2,2,5],"span":[327,4,10]},{"path":[4,1,2,2,1],"span":[327,11,14]},{"path":[4,1,2,2,3],"span":[327,17,18]},{"path":[4,1,2,3],"span":[330,4,20],"leadingComments":" Maps to HTTP POST. Used for creating a resource or performing an action.\n"},{"path":[4,1,2,3,5],"span":[330,4,10]},{"path":[4,1,2,3,1],"span":[330,11,15]},{"path":[4,1,2,3,3],"span":[330,18,19]},{"path":[4,1,2,4],"span":[333,4,22],"leadingComments":" Maps to HTTP DELETE. Used for deleting a resource.\n"},{"path":[4,1,2,4,5],"span":[333,4,10]},{"path":[4,1,2,4,1],"span":[333,11,17]},{"path":[4,1,2,4,3],"span":[333,20,21]},{"path":[4,1,2,5],"span":[336,4,21],"leadingComments":" Maps to HTTP PATCH. Used for updating a resource.\n"},{"path":[4,1,2,5,5],"span":[336,4,10]},{"path":[4,1,2,5,1],"span":[336,11,16]},{"path":[4,1,2,5,3],"span":[336,19,20]},{"path":[4,1,2,6],"span":[342,4,33],"leadingComments":" The custom pattern is used for specifying an HTTP method that is not\n included in the `pattern` field, such as HEAD, or \"*\" to leave the\n HTTP method unspecified for this rule. The wild-card rule is useful\n for services that provide content to Web (HTML) clients.\n"},{"path":[4,1,2,6,6],"span":[342,4,21]},{"path":[4,1,2,6,1],"span":[342,22,28]},{"path":[4,1,2,6,3],"span":[342,31,32]},{"path":[4,1,2,7],"span":[351,2,18],"leadingComments":" The name of the request field whose value is mapped to the HTTP request\n body, or `*` for mapping all request fields not captured by the path\n pattern to the HTTP body, or omitted for not having any HTTP request body.\n\n NOTE: the referred field must be present at the top-level of the request\n message type.\n"},{"path":[4,1,2,7,5],"span":[351,2,8]},{"path":[4,1,2,7,1],"span":[351,9,13]},{"path":[4,1,2,7,3],"span":[351,16,17]},{"path":[4,1,2,8],"span":[359,2,28],"leadingComments":" Optional. The name of the response field whose value is mapped to the HTTP\n response body. When omitted, the entire response message will be used\n as the HTTP response body.\n\n NOTE: The referred field must be present at the top-level of the response\n message type.\n"},{"path":[4,1,2,8,5],"span":[359,2,8]},{"path":[4,1,2,8,1],"span":[359,9,22]},{"path":[4,1,2,8,3],"span":[359,25,27]},{"path":[4,1,2,9],"span":[364,2,45],"leadingComments":" Additional HTTP bindings for the selector. Nested bindings must\n not contain an `additional_bindings` field themselves (that is,\n the nesting may only be one level deep).\n"},{"path":[4,1,2,9,4],"span":[364,2,10]},{"path":[4,1,2,9,6],"span":[364,11,19]},{"path":[4,1,2,9,1],"span":[364,20,39]},{"path":[4,1,2,9,3],"span":[364,42,44]},{"path":[4,2],"span":[368,0,374,1],"leadingComments":" A custom pattern is used for defining custom HTTP verb.\n"},{"path":[4,2,1],"span":[368,8,25]},{"path":[4,2,2,0],"span":[370,2,18],"leadingComments":" The name of this custom HTTP verb.\n"},{"path":[4,2,2,0,5],"span":[370,2,8]},{"path":[4,2,2,0,1],"span":[370,9,13]},{"path":[4,2,2,0,3],"span":[370,16,17]},{"path":[4,2,2,1],"span":[373,2,18],"leadingComments":" The path matched by this custom verb.\n"},{"path":[4,2,2,1,5],"span":[373,2,8]},{"path":[4,2,2,1,1],"span":[373,9,13]},{"path":[4,2,2,1,3],"span":[373,16,17]}]},"syntax":"proto3"},{"name":"google/api/annotations.proto","package":"google.api","dependency":["google/api/http.proto","google/protobuf/descriptor.proto"],"extension":[{"name":"http","number":72295728,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".google.api.HttpRule","extendee":".google.protobuf.MethodOptions","jsonName":"http"}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"AnnotationsProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api/annotations;annotations","objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,30,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2015 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[3,0],"span":[18,0,31]},{"path":[3,1],"span":[19,0,42]},{"path":[8],"span":[21,0,88]},{"path":[8,11],"span":[21,0,88]},{"path":[8],"span":[22,0,34]},{"path":[8,10],"span":[22,0,34]},{"path":[8],"span":[23,0,49]},{"path":[8,8],"span":[23,0,49]},{"path":[8],"span":[24,0,39]},{"path":[8,1],"span":[24,0,39]},{"path":[8],"span":[25,0,34]},{"path":[8,36],"span":[25,0,34]},{"path":[7],"span":[27,0,30,1]},{"path":[7,0],"span":[29,2,27],"leadingComments":" See `HttpRule`.\n"},{"path":[7,0,2],"span":[27,7,36]},{"path":[7,0,6],"span":[29,2,10]},{"path":[7,0,1],"span":[29,11,15]},{"path":[7,0,3],"span":[29,18,26]}]},"syntax":"proto3"},{"name":"google/api/field_behavior.proto","package":"google.api","dependency":["google/protobuf/descriptor.proto"],"enumType":[{"name":"FieldBehavior","value":[{"name":"FIELD_BEHAVIOR_UNSPECIFIED","number":0},{"name":"OPTIONAL","number":1},{"name":"REQUIRED","number":2},{"name":"OUTPUT_ONLY","number":3},{"name":"INPUT_ONLY","number":4},{"name":"IMMUTABLE","number":5},{"name":"UNORDERED_LIST","number":6}]}],"extension":[{"name":"field_behavior","number":1052,"label":"LABEL_REPEATED","type":"TYPE_ENUM","typeName":".google.api.FieldBehavior","extendee":".google.protobuf.FieldOptions","jsonName":"fieldBehavior"}],"options":{"javaPackage":"com.google.api","javaOuterClassname":"FieldBehaviorProto","javaMultipleFiles":true,"goPackage":"google.golang.org/genproto/googleapis/api/annotations;annotations","objcClassPrefix":"GAPI"},"sourceCodeInfo":{"location":[{"span":[14,0,83,1]},{"path":[12],"span":[14,0,18],"leadingDetachedComments":[" Copyright 2018 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"]},{"path":[2],"span":[16,0,19]},{"path":[3,0],"span":[18,0,42]},{"path":[8],"span":[20,0,88]},{"path":[8,11],"span":[20,0,88]},{"path":[8],"span":[21,0,34]},{"path":[8,10],"span":[21,0,34]},{"path":[8],"span":[22,0,51]},{"path":[8,8],"span":[22,0,51]},{"path":[8],"span":[23,0,39]},{"path":[8,1],"span":[23,0,39]},{"path":[8],"span":[24,0,34]},{"path":[8,36],"span":[24,0,34]},{"path":[7],"span":[26,0,40,1]},{"path":[7,0],"span":[39,2,58],"leadingComments":" A designation of a specific field behavior (required, output only, etc.)\n in protobuf messages.\n\n Examples:\n\n   string name = 1 [(google.api.field_behavior) = REQUIRED];\n   State state = 1 [(google.api.field_behavior) = OUTPUT_ONLY];\n   google.protobuf.Duration ttl = 1\n     [(google.api.field_behavior) = INPUT_ONLY];\n   google.protobuf.Timestamp expire_time = 1\n     [(google.api.field_behavior) = OUTPUT_ONLY,\n      (google.api.field_behavior) = IMMUTABLE];\n"},{"path":[7,0,2],"span":[26,7,35]},{"path":[7,0,4],"span":[39,2,10]},{"path":[7,0,6],"span":[39,11,35]},{"path":[7,0,1],"span":[39,36,50]},{"path":[7,0,3],"span":[39,53,57]},{"path":[5,0],"span":[48,0,83,1],"leadingComments":" An indicator of the behavior of a given field (for example, that a field\n is required in requests, or given as output but ignored as input).\n This **does not** change the behavior in protocol buffers itself; it only\n denotes the behavior and may affect how API tooling handles the field.\n\n Note: This enum **may** receive new values in the future.\n"},{"path":[5,0,1],"span":[48,5,18]},{"path":[5,0,2,0],"span":[50,2,33],"leadingComments":" Conventional default for enums. Do not use this.\n"},{"path":[5,0,2,0,1],"span":[50,2,28]},{"path":[5,0,2,0,2],"span":[50,31,32]},{"path":[5,0,2,1],"span":[55,2,15],"leadingComments":" Specifically denotes a field as optional.\n While all fields in protocol buffers are optional, this may be specified\n for emphasis if appropriate.\n"},{"path":[5,0,2,1,1],"span":[55,2,10]},{"path":[5,0,2,1,2],"span":[55,13,14]},{"path":[5,0,2,2],"span":[60,2,15],"leadingComments":" Denotes a field as required.\n This indicates that the field **must** be provided as part of the request,\n and failure to do so will cause an error (usually `INVALID_ARGUMENT`).\n"},{"path":[5,0,2,2,1],"span":[60,2,10]},{"path":[5,0,2,2,2],"span":[60,13,14]},{"path":[5,0,2,3],"span":[66,2,18],"leadingComments":" Denotes a field as output only.\n This indicates that the field is provided in responses, but including the\n field in a request does nothing (the server *must* ignore it and\n *must not* throw an error as a result of the field's presence).\n"},{"path":[5,0,2,3,1],"span":[66,2,13]},{"path":[5,0,2,3,2],"span":[66,16,17]},{"path":[5,0,2,4],"span":[71,2,17],"leadingComments":" Denotes a field as input only.\n This indicates that the field is provided in requests, and the\n corresponding field is not included in output.\n"},{"path":[5,0,2,4,1],"span":[71,2,12]},{"path":[5,0,2,4,2],"span":[71,15,16]},{"path":[5,0,2,5],"span":[76,2,16],"leadingComments":" Denotes a field as immutable.\n This indicates that the field may be set once in a request to create a\n resource, but may not be changed thereafter.\n"},{"path":[5,0,2,5,1],"span":[76,2,11]},{"path":[5,0,2,5,2],"span":[76,14,15]},{"path":[5,0,2,6],"span":[82,2,21],"leadingComments":" Denotes that a (repeated) field is an unordered list.\n This indicates that the service may provide the elements of the list\n in any arbitrary  order, rather than the order the user originally\n provided. Additionally, the list's order may or may not be stable.\n"},{"path":[5,0,2,6,1],"span":[82,2,16]},{"path":[5,0,2,6,2],"span":[82,19,20]}]},"syntax":"proto3"},{"name":"protos/dummy/v1/service_dummy.proto","package":"protos.dummy.v1","dependency":["google/api/annotations.proto","google/api/field_behavior.proto","protoc-gen-openapiv2/options/annotations.proto","protos/common/v1/health.proto"],"messageType":[{"name":"LogRequest","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"level","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".protos.dummy.v1.LogRequest.LogLevel","jsonName":"level"}],"enumType":[{"name":"LogLevel","value":[{"name":"LOG_LEVEL_UNSPECIFIED","number":0},{"name":"LOG_LEVEL_DEBUG","number":1},{"name":"LOG_LEVEL_INFO","number":2},{"name":"LOG_LEVEL_WARN","number":3},{"name":"LOG_LEVEL_ERROR","number":4},{"name":"LOG_LEVEL_FATAL","number":5},{"name":"LOG_LEVEL_PANIC","number":6},{"name":"LOG_LEVEL_NO","number":7},{"name":"LOG_LEVEL_DIS","number":8},{"name":"LOG_LEVEL_TRACE","number":9}]}]},{"name":"LogResponse","field":[{"name":"response","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"response"}]}],"service":[{"name":"DummyService","method":[{"name":"Health","inputType":".protos.common.v1.HealthRequest","outputType":".protos.common.v1.HealthResponse","options":{"[google.api.http]":{"get":"/v1/dummy/health"}}},{"name":"Log","inputType":".protos.dummy.v1.LogRequest","outputType":".protos.dummy.v1.LogResponse","options":{"[google.api.http]":{"post":"/v1/dummy/log","body":"*"}}}]}],"options":{"goPackage":"protocol-example/gen/go/protos/dummy/v1;dummypb"},"sourceCodeInfo":{"location":[{"span":[0,0,52,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,24]},{"path":[8],"span":[3,0,70]},{"path":[8,11],"span":[3,0,70]},{"path":[3,0],"span":[5,0,38]},{"path":[3,1],"span":[6,0,41]},{"path":[3,2],"span":[7,0,56]},{"path":[3,3],"span":[8,0,39]},{"path":[4,0],"span":[10,0,27,1]},{"path":[4,0,1],"span":[10,8,18]},{"path":[4,0,2,0],"span":[11,2,18]},{"path":[4,0,2,0,5],"span":[11,2,8]},{"path":[4,0,2,0,1],"span":[11,9,13]},{"path":[4,0,2,0,3],"span":[11,16,17]},{"path":[4,0,4,0],"span":[13,2,24,3]},{"path":[4,0,4,0,1],"span":[13,7,15]},{"path":[4,0,4,0,2,0],"span":[14,4,30]},{"path":[4,0,4,0,2,0,1],"span":[14,4,25]},{"path":[4,0,4,0,2,0,2],"span":[14,28,29]},{"path":[4,0,4,0,2,1],"span":[15,4,24]},{"path":[4,0,4,0,2,1,1],"span":[15,4,19]},{"path":[4,0,4,0,2,1,2],"span":[15,22,23]},{"path":[4,0,4,0,2,2],"span":[16,4,23]},{"path":[4,0,4,0,2,2,1],"span":[16,4,18]},{"path":[4,0,4,0,2,2,2],"span":[16,21,22]},{"path":[4,0,4,0,2,3],"span":[17,4,23]},{"path":[4,0,4,0,2,3,1],"span":[17,4,18]},{"path":[4,0,4,0,2,3,2],"span":[17,21,22]},{"path":[4,0,4,0,2,4],"span":[18,4,24]},{"path":[4,0,4,0,2,4,1],"span":[18,4,19]},{"path":[4,0,4,0,2,4,2],"span":[18,22,23]},{"path":[4,0,4,0,2,5],"span":[19,4,24]},{"path":[4,0,4,0,2,5,1],"span":[19,4,19]},{"path":[4,0,4,0,2,5,2],"span":[19,22,23]},{"path":[4,0,4,0,2,6],"span":[20,4,24]},{"path":[4,0,4,0,2,6,1],"span":[20,4,19]},{"path":[4,0,4,0,2,6,2],"span":[20,22,23]},{"path":[4,0,4,0,2,7],"span":[21,4,21]},{"path":[4,0,4,0,2,7,1],"span":[21,4,16]},{"path":[4,0,4,0,2,7,2],"span":[21,19,20]},{"path":[4,0,4,0,2,8],"span":[22,4,22]},{"path":[4,0,4,0,2,8,1],"span":[22,4,17]},{"path":[4,0,4,0,2,8,2],"span":[22,20,21]},{"path":[4,0,4,0,2,9],"span":[23,4,24]},{"path":[4,0,4,0,2,9,1],"span":[23,4,19]},{"path":[4,0,4,0,2,9,2],"span":[23,22,23]},{"path":[4,0,2,1],"span":[26,2,21]},{"path":[4,0,2,1,6],"span":[26,2,10]},{"path":[4,0,2,1,1],"span":[26,11,16]},{"path":[4,0,2,1,3],"span":[26,19,20]},{"path":[4,1],"span":[29,0,31,1]},{"path":[4,1,1],"span":[29,8,19]},{"path":[4,1,2,0],"span":[30,2,22]},{"path":[4,1,2,0,5],"span":[30,2,8]},{"path":[4,1,2,0,1],"span":[30,9,17]},{"path":[4,1,2,0,3],"span":[30,20,21]},{"path":[6,0],"span":[33,0,52,1]},{"path":[6,0,1],"span":[33,8,20]},{"path":[6,0,2,0],"span":[40,2,44,3],"leadingComments":"\n The primary usage of this endpoint is for the Kubernetes probes\n (readinessProbe, liveProbe, startupProbe) and responds without\n any authentication or authorization\n"},{"path":[6,0,2,0,1],"span":[40,6,12]},{"path":[6,0,2,0,2],"span":[40,13,36]},{"path":[6,0,2,0,3],"span":[40,47,71]},{"path":[6,0,2,0,4],"span":[41,4,43,6]},{"path":[6,0,2,0,4,72295728],"span":[41,4,43,6]},{"path":[6,0,2,1],"span":[46,2,51,3]},{"path":[6,0,2,1,1],"span":[46,6,9]},{"path":[6,0,2,1,2],"span":[46,10,20]},{"path":[6,0,2,1,3],"span":[46,31,42]},{"path":[6,0,2,1,4],"span":[47,4,50,6]},{"path":[6,0,2,1,4,72295728],"span":[47,4,50,6]}]},"syntax":"proto3"},{"name":"protos/leads/v1/input.proto","package":"protos.leads.v1","messageType":[{"name":"InputDescriptor","field":[{"name":"input_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".protos.leads.v1.InputName","jsonName":"inputName"},{"name":"input_type","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".protos.leads.v1.InputType","jsonName":"inputType"},{"name":"options","number":3,"label":"LABEL_REPEATED","type":"TYPE_STRING","jsonName":"options"}]},{"name":"InputValue","field":[{"name":"input_name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_ENUM","typeName":".protos.leads.v1.InputName","jsonName":"inputName"},{"name":"input_value_number","number":100,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","oneofIndex":0,"jsonName":"inputValueNumber"},{"name":"input_value_string","number":101,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","oneofIndex":0,"jsonName":"inputValueString"}],"oneofDecl":[{"name":"value"}]}],"enumType":[{"name":"InputName","value":[{"name":"INPUT_NAME_UNSPECIFIED","number":0},{"name":"INPUT_NAME_AMOUNT","number":1},{"name":"INPUT_NAME_ACCOUNT_TYPE","number":2}]},{"name":"InputType","value":[{"name":"INPUT_TYPE_UNSPECIFIED","number":0},{"name":"INPUT_TYPE_CURRENCY","number":1},{"name":"INPUT_TYPE_TEXT","number":2},{"name":"INPUT_TYPE_TEXT_AREA","number":3},{"name":"INPUT_TYPE_SELECT_OPTION","number":4},{"name":"INPUT_TYPE_REGION_OPTION","number":5},{"name":"INPUT_TYPE_PHONE","number":6}]}],"options":{"goPackage":"protocol-example/gen/go/protos/leads/v1;leadspb"},"sourceCodeInfo":{"location":[{"span":[0,0,38,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,24]},{"path":[8],"span":[3,0,70]},{"path":[8,11],"span":[3,0,70]},{"path":[4,0],"span":[5,0,9,1]},{"path":[4,0,1],"span":[5,8,23]},{"path":[4,0,2,0],"span":[6,2,27]},{"path":[4,0,2,0,6],"span":[6,2,11]},{"path":[4,0,2,0,1],"span":[6,12,22]},{"path":[4,0,2,0,3],"span":[6,25,26]},{"path":[4,0,2,1],"span":[7,2,27]},{"path":[4,0,2,1,6],"span":[7,2,11]},{"path":[4,0,2,1,1],"span":[7,12,22]},{"path":[4,0,2,1,3],"span":[7,25,26]},{"path":[4,0,2,2],"span":[8,2,30]},{"path":[4,0,2,2,4],"span":[8,2,10]},{"path":[4,0,2,2,5],"span":[8,11,17]},{"path":[4,0,2,2,1],"span":[8,18,25]},{"path":[4,0,2,2,3],"span":[8,28,29]},{"path":[4,1],"span":[12,0,18,1]},{"path":[4,1,1],"span":[12,8,18]},{"path":[4,1,2,0],"span":[13,2,27]},{"path":[4,1,2,0,6],"span":[13,2,11]},{"path":[4,1,2,0,1],"span":[13,12,22]},{"path":[4,1,2,0,3],"span":[13,25,26]},{"path":[4,1,8,0],"span":[14,2,17,3]},{"path":[4,1,8,0,1],"span":[14,8,13]},{"path":[4,1,2,1],"span":[15,4,35]},{"path":[4,1,2,1,5],"span":[15,4,9]},{"path":[4,1,2,1,1],"span":[15,10,28]},{"path":[4,1,2,1,3],"span":[15,31,34]},{"path":[4,1,2,2],"span":[16,4,36]},{"path":[4,1,2,2,5],"span":[16,4,10]},{"path":[4,1,2,2,1],"span":[16,11,29]},{"path":[4,1,2,2,3],"span":[16,32,35]},{"path":[5,0],"span":[23,0,27,1],"leadingComments":" InputName represent the name of a input, it allow use to determine the i18n for the label, helper text...\n The type of the in\n"},{"path":[5,0,1],"span":[23,5,14]},{"path":[5,0,2,0],"span":[24,2,29]},{"path":[5,0,2,0,1],"span":[24,2,24]},{"path":[5,0,2,0,2],"span":[24,27,28]},{"path":[5,0,2,1],"span":[25,2,24]},{"path":[5,0,2,1,1],"span":[25,2,19]},{"path":[5,0,2,1,2],"span":[25,22,23]},{"path":[5,0,2,2],"span":[26,2,30]},{"path":[5,0,2,2,1],"span":[26,2,25]},{"path":[5,0,2,2,2],"span":[26,28,29]},{"path":[5,1],"span":[30,0,38,1],"leadingComments":" InputType represent the type of an input\n"},{"path":[5,1,1],"span":[30,5,14]},{"path":[5,1,2,0],"span":[31,2,29]},{"path":[5,1,2,0,1],"span":[31,2,24]},{"path":[5,1,2,0,2],"span":[31,27,28]},{"path":[5,1,2,1],"span":[32,2,26],"trailingComments":" use input_value_number\n"},{"path":[5,1,2,1,1],"span":[32,2,21]},{"path":[5,1,2,1,2],"span":[32,24,25]},{"path":[5,1,2,2],"span":[33,2,22],"trailingComments":" use input_value_string\n"},{"path":[5,1,2,2,1],"span":[33,2,17]},{"path":[5,1,2,2,2],"span":[33,20,21]},{"path":[5,1,2,3],"span":[34,2,27],"trailingComments":" use input_value_string\n"},{"path":[5,1,2,3,1],"span":[34,2,22]},{"path":[5,1,2,3,2],"span":[34,25,26]},{"path":[5,1,2,4],"span":[35,2,31],"trailingComments":" use input_value_string\n"},{"path":[5,1,2,4,1],"span":[35,2,26]},{"path":[5,1,2,4,2],"span":[35,29,30]},{"path":[5,1,2,5],"span":[36,2,31],"trailingComments":" use input_value_string\n"},{"path":[5,1,2,5,1],"span":[36,2,26]},{"path":[5,1,2,5,2],"span":[36,29,30]},{"path":[5,1,2,6],"span":[37,2,23],"trailingComments":" use input_value_string\n"},{"path":[5,1,2,6,1],"span":[37,2,18]},{"path":[5,1,2,6,2],"span":[37,21,22]}]},"syntax":"proto3"},{"name":"protos/leads/v1/steps_names.proto","package":"protos.leads.v1","enumType":[{"name":"StepName","value":[{"name":"STEP_NAME_UNSPECIFIED","number":0},{"name":"STEP_NAME_COLLECT_TYPE","number":1}]}],"options":{"goPackage":"protocol-example/gen/go/protos/leads/v1;leadspb"},"sourceCodeInfo":{"location":[{"span":[0,0,9,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,24]},{"path":[8],"span":[3,0,70]},{"path":[8,11],"span":[3,0,70]},{"path":[5,0],"span":[6,0,9,1],"leadingComments":" StepName represent the different step names\n"},{"path":[5,0,1],"span":[6,5,13]},{"path":[5,0,2,0],"span":[7,2,28]},{"path":[5,0,2,0,1],"span":[7,2,23]},{"path":[5,0,2,0,2],"span":[7,26,27]},{"path":[5,0,2,1],"span":[8,2,29]},{"path":[5,0,2,1,1],"span":[8,2,24]},{"path":[5,0,2,1,2],"span":[8,27,28]}]},"syntax":"proto3"},{"name":"protos/leads/v1/leads.proto","package":"protos.leads.v1","dependency":["google/api/annotations.proto","google/api/field_behavior.proto","protoc-gen-openapiv2/options/annotations.proto","protos/common/v1/health.proto","protos/leads/v1/steps_names.proto","protos/leads/v1/input.proto"],"messageType":[{"name":"CreateRequest","field":[{"name":"amount","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"amount"}]},{"name":"CreateResponse","field":[{"name":"lead_id","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"leadId"},{"name":"progress","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Progress","jsonName":"progress"},{"name":"step","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Step","jsonName":"step"}]},{"name":"FetchRequest","field":[{"name":"lead_id","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"leadId"}]},{"name":"FetchResponse","field":[{"name":"progress","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Progress","jsonName":"progress"},{"name":"step","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Step","jsonName":"step"}]},{"name":"UpdateRequest","field":[{"name":"lead_id","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"leadId"},{"name":"step_name","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"stepName"},{"name":"answers","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.InputValue","jsonName":"answers"}]},{"name":"UpdateResponse","field":[{"name":"progress","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Progress","jsonName":"progress"},{"name":"step","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Step","jsonName":"step"}]},{"name":"PreviousRequest","field":[{"name":"lead_id","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT64","jsonName":"leadId"}]},{"name":"PreviousResponse","field":[{"name":"progress","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Progress","jsonName":"progress"},{"name":"step","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.Step","jsonName":"step"}]},{"name":"Step","field":[{"name":"name","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"name"},{"name":"previous_name","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_STRING","jsonName":"previousName"},{"name":"input_descriptors","number":3,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.InputDescriptor","jsonName":"inputDescriptors"},{"name":"answers","number":5,"label":"LABEL_REPEATED","type":"TYPE_MESSAGE","typeName":".protos.leads.v1.InputValue","jsonName":"answers"}]},{"name":"Progress","field":[{"name":"step_count","number":1,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"stepCount"},{"name":"current_step","number":2,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"currentStep"},{"name":"sub_step_count","number":3,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"subStepCount"},{"name":"current_sub_step","number":4,"label":"LABEL_OPTIONAL","type":"TYPE_INT32","jsonName":"currentSubStep"}]}],"service":[{"name":"LeadsService","method":[{"name":"Health","inputType":".protos.common.v1.HealthRequest","outputType":".protos.common.v1.HealthResponse","options":{"[google.api.http]":{"get":"/v1/leads/health"}}},{"name":"Create","inputType":".protos.leads.v1.CreateRequest","outputType":".protos.leads.v1.CreateResponse","options":{"[google.api.http]":{"post":"/v1/leads/create","body":"*"}}},{"name":"Update","inputType":".protos.leads.v1.UpdateRequest","outputType":".protos.leads.v1.UpdateResponse","options":{"[google.api.http]":{"patch":"/v1/leads/update","body":"*"}}},{"name":"Fetch","inputType":".protos.leads.v1.FetchRequest","outputType":".protos.leads.v1.FetchResponse","options":{"[google.api.http]":{"get":"/v1/leads/fetch"}}},{"name":"Previous","inputType":".protos.leads.v1.PreviousRequest","outputType":".protos.leads.v1.PreviousResponse","options":{"[google.api.http]":{"get":"/v1/leads/previous"}}}]}],"options":{"goPackage":"protocol-example/gen/go/protos/leads/v1;leadspb"},"sourceCodeInfo":{"location":[{"span":[0,0,104,1]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,24]},{"path":[8],"span":[3,0,70]},{"path":[8,11],"span":[3,0,70]},{"path":[3,0],"span":[5,0,38]},{"path":[3,1],"span":[6,0,41]},{"path":[3,2],"span":[7,0,56]},{"path":[3,3],"span":[8,0,39]},{"path":[3,4],"span":[9,0,43]},{"path":[3,5],"span":[10,0,37]},{"path":[6,0],"span":[12,0,44,1]},{"path":[6,0,1],"span":[12,8,20]},{"path":[6,0,2,0],"span":[13,2,17,3]},{"path":[6,0,2,0,1],"span":[13,6,12]},{"path":[6,0,2,0,2],"span":[13,13,36]},{"path":[6,0,2,0,3],"span":[13,47,71]},{"path":[6,0,2,0,4],"span":[14,4,16,6]},{"path":[6,0,2,0,4,72295728],"span":[14,4,16,6]},{"path":[6,0,2,1],"span":[19,2,24,3]},{"path":[6,0,2,1,1],"span":[19,6,12]},{"path":[6,0,2,1,2],"span":[19,13,26]},{"path":[6,0,2,1,3],"span":[19,37,51]},{"path":[6,0,2,1,4],"span":[20,4,23,6]},{"path":[6,0,2,1,4,72295728],"span":[20,4,23,6]},{"path":[6,0,2,2],"span":[26,2,31,3]},{"path":[6,0,2,2,1],"span":[26,6,12]},{"path":[6,0,2,2,2],"span":[26,13,26]},{"path":[6,0,2,2,3],"span":[26,37,51]},{"path":[6,0,2,2,4],"span":[27,4,30,6]},{"path":[6,0,2,2,4,72295728],"span":[27,4,30,6]},{"path":[6,0,2,3],"span":[33,1,37,2]},{"path":[6,0,2,3,1],"span":[33,5,10]},{"path":[6,0,2,3,2],"span":[33,11,23]},{"path":[6,0,2,3,3],"span":[33,34,47]},{"path":[6,0,2,3,4],"span":[34,3,36,5]},{"path":[6,0,2,3,4,72295728],"span":[34,3,36,5]},{"path":[6,0,2,4],"span":[39,1,43,2]},{"path":[6,0,2,4,1],"span":[39,5,13]},{"path":[6,0,2,4,2],"span":[39,14,29]},{"path":[6,0,2,4,3],"span":[39,40,56]},{"path":[6,0,2,4,4],"span":[40,2,42,4]},{"path":[6,0,2,4,4,72295728],"span":[40,2,42,4]},{"path":[4,0],"span":[46,0,48,1]},{"path":[4,0,1],"span":[46,8,21]},{"path":[4,0,2,0],"span":[47,2,19]},{"path":[4,0,2,0,5],"span":[47,2,7]},{"path":[4,0,2,0,1],"span":[47,8,14]},{"path":[4,0,2,0,3],"span":[47,17,18]},{"path":[4,1],"span":[50,0,54,1]},{"path":[4,1,1],"span":[50,8,22]},{"path":[4,1,2,0],"span":[51,2,20]},{"path":[4,1,2,0,5],"span":[51,2,7]},{"path":[4,1,2,0,1],"span":[51,8,15]},{"path":[4,1,2,0,3],"span":[51,18,19]},{"path":[4,1,2,1],"span":[52,2,24]},{"path":[4,1,2,1,6],"span":[52,2,10]},{"path":[4,1,2,1,1],"span":[52,11,19]},{"path":[4,1,2,1,3],"span":[52,22,23]},{"path":[4,1,2,2],"span":[53,2,16]},{"path":[4,1,2,2,6],"span":[53,2,6]},{"path":[4,1,2,2,1],"span":[53,7,11]},{"path":[4,1,2,2,3],"span":[53,14,15]},{"path":[4,2],"span":[56,0,58,1]},{"path":[4,2,1],"span":[56,8,20]},{"path":[4,2,2,0],"span":[57,2,20]},{"path":[4,2,2,0,5],"span":[57,2,7]},{"path":[4,2,2,0,1],"span":[57,8,15]},{"path":[4,2,2,0,3],"span":[57,18,19]},{"path":[4,3],"span":[60,0,63,1]},{"path":[4,3,1],"span":[60,8,21]},{"path":[4,3,2,0],"span":[61,2,24]},{"path":[4,3,2,0,6],"span":[61,2,10]},{"path":[4,3,2,0,1],"span":[61,11,19]},{"path":[4,3,2,0,3],"span":[61,22,23]},{"path":[4,3,2,1],"span":[62,2,16]},{"path":[4,3,2,1,6],"span":[62,2,6]},{"path":[4,3,2,1,1],"span":[62,7,11]},{"path":[4,3,2,1,3],"span":[62,14,15]},{"path":[4,4],"span":[65,0,69,1]},{"path":[4,4,1],"span":[65,8,21]},{"path":[4,4,2,0],"span":[66,2,20]},{"path":[4,4,2,0,5],"span":[66,2,7]},{"path":[4,4,2,0,1],"span":[66,8,15]},{"path":[4,4,2,0,3],"span":[66,18,19]},{"path":[4,4,2,1],"span":[67,2,23]},{"path":[4,4,2,1,5],"span":[67,2,8]},{"path":[4,4,2,1,1],"span":[67,9,18]},{"path":[4,4,2,1,3],"span":[67,21,22]},{"path":[4,4,2,2],"span":[68,2,34]},{"path":[4,4,2,2,4],"span":[68,2,10]},{"path":[4,4,2,2,6],"span":[68,11,21]},{"path":[4,4,2,2,1],"span":[68,22,29]},{"path":[4,4,2,2,3],"span":[68,32,33]},{"path":[4,5],"span":[71,0,74,1]},{"path":[4,5,1],"span":[71,8,22]},{"path":[4,5,2,0],"span":[72,2,24]},{"path":[4,5,2,0,6],"span":[72,2,10]},{"path":[4,5,2,0,1],"span":[72,11,19]},{"path":[4,5,2,0,3],"span":[72,22,23]},{"path":[4,5,2,1],"span":[73,2,16]},{"path":[4,5,2,1,6],"span":[73,2,6]},{"path":[4,5,2,1,1],"span":[73,7,11]},{"path":[4,5,2,1,3],"span":[73,14,15]},{"path":[4,6],"span":[76,0,78,1]},{"path":[4,6,1],"span":[76,8,23]},{"path":[4,6,2,0],"span":[77,2,20]},{"path":[4,6,2,0,5],"span":[77,2,7]},{"path":[4,6,2,0,1],"span":[77,8,15]},{"path":[4,6,2,0,3],"span":[77,18,19]},{"path":[4,7],"span":[80,0,83,1]},{"path":[4,7,1],"span":[80,8,24]},{"path":[4,7,2,0],"span":[81,2,24]},{"path":[4,7,2,0,6],"span":[81,2,10]},{"path":[4,7,2,0,1],"span":[81,11,19]},{"path":[4,7,2,0,3],"span":[81,22,23]},{"path":[4,7,2,1],"span":[82,2,16]},{"path":[4,7,2,1,6],"span":[82,2,6]},{"path":[4,7,2,1,1],"span":[82,7,11]},{"path":[4,7,2,1,3],"span":[82,14,15]},{"path":[4,8],"span":[90,0,95,1],"leadingComments":" returns the all needed for each step\n name is the step name\n list of inputs names for the front to build\n when filling inputs answers returns a map of inputs names with their values\n"},{"path":[4,8,1],"span":[90,8,12]},{"path":[4,8,2,0],"span":[91,2,18]},{"path":[4,8,2,0,5],"span":[91,2,8]},{"path":[4,8,2,0,1],"span":[91,9,13]},{"path":[4,8,2,0,3],"span":[91,16,17]},{"path":[4,8,2,1],"span":[92,2,27]},{"path":[4,8,2,1,5],"span":[92,2,8]},{"path":[4,8,2,1,1],"span":[92,9,22]},{"path":[4,8,2,1,3],"span":[92,25,26]},{"path":[4,8,2,2],"span":[93,2,49]},{"path":[4,8,2,2,4],"span":[93,2,10]},{"path":[4,8,2,2,6],"span":[93,11,26]},{"path":[4,8,2,2,1],"span":[93,27,44]},{"path":[4,8,2,2,3],"span":[93,47,48]},{"path":[4,8,2,3],"span":[94,2,34]},{"path":[4,8,2,3,4],"span":[94,2,10]},{"path":[4,8,2,3,6],"span":[94,11,21]},{"path":[4,8,2,3,1],"span":[94,22,29]},{"path":[4,8,2,3,3],"span":[94,32,33]},{"path":[4,9],"span":[99,0,104,1],"leadingComments":" Represent the progression of a lead, primary usage is for the frontend\n **-- ---- ---- ---- = {step_count: 4, current_step: 1, sub_step_count: 4, current_sub_step: 2}\n"},{"path":[4,9,1],"span":[99,8,16]},{"path":[4,9,2,0],"span":[100,2,23]},{"path":[4,9,2,0,5],"span":[100,2,7]},{"path":[4,9,2,0,1],"span":[100,8,18]},{"path":[4,9,2,0,3],"span":[100,21,22]},{"path":[4,9,2,1],"span":[101,2,25]},{"path":[4,9,2,1,5],"span":[101,2,7]},{"path":[4,9,2,1,1],"span":[101,8,20]},{"path":[4,9,2,1,3],"span":[101,23,24]},{"path":[4,9,2,2],"span":[102,2,27]},{"path":[4,9,2,2,5],"span":[102,2,7]},{"path":[4,9,2,2,1],"span":[102,8,22]},{"path":[4,9,2,2,3],"span":[102,25,26]},{"path":[4,9,2,3],"span":[103,2,29]},{"path":[4,9,2,3,5],"span":[103,2,7]},{"path":[4,9,2,3,1],"span":[103,8,24]},{"path":[4,9,2,3,3],"span":[103,27,28]}]},"syntax":"proto3"},{"name":"protos/v1/openapiv2.proto","package":"protos.v1","dependency":["google/api/annotations.proto","protoc-gen-openapiv2/options/annotations.proto"],"options":{"goPackage":"protocol-example/gen/go/protos/v1;protospb","[grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger]":{"info":{"title":"Protos API","version":"1.0"}}},"sourceCodeInfo":{"location":[{"span":[0,0,14,2]},{"path":[12],"span":[0,0,18]},{"path":[2],"span":[2,0,18]},{"path":[8],"span":[4,0,65]},{"path":[8,11],"span":[4,0,65]},{"path":[3,0],"span":[6,0,38]},{"path":[3,1],"span":[7,0,56]},{"path":[8],"span":[9,0,14,2]},{"path":[8,1042],"span":[9,0,14,2]}]},"syntax":"proto3"}]}