// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
// Source: protos/common/v1/health.proto

import type { ByteSource, MapMessage } from "twirpscript";
import {
  BinaryReader,
  BinaryWriter,
  encodeBase64Bytes,
  decodeBase64Bytes,
} from "twirpscript";

//========================================//
//                 Types                  //
//========================================//

export type HealthStatus =
  | "HEALTH_STATUS_UNSPECIFIED"
  | "HEALTH_STATUS_SERVING"
  | "HEALTH_STATUS_WARNING"
  | "HEALTH_STATUS_DEGRADED"
  | "HEALTH_STATUS_CRITICAL";

export interface HealthRequest {}

/**
 *
 * HealthResponse Message
 *
 * This message is only used to respond to Health Service.
 * This message return an enumerator of Status onf app
 */
export interface HealthResponse {
  /**
   * Status represents the current status of the application
   */
  status: HealthStatus;
}

//========================================//
//        Protobuf Encode / Decode        //
//========================================//

export const HealthStatus = {
  HEALTH_STATUS_UNSPECIFIED: "HEALTH_STATUS_UNSPECIFIED",
  /**
   * The application run normally and successfully
   */
  HEALTH_STATUS_SERVING: "HEALTH_STATUS_SERVING",
  /**
   * An error is occurred recently and can produce more errors. One or more components in the stack might become overloaded soon.
   */
  HEALTH_STATUS_WARNING: "HEALTH_STATUS_WARNING",
  /**
   * A partial anomaly of full outage of service. Non-security patches might be available.
   */
  HEALTH_STATUS_DEGRADED: "HEALTH_STATUS_DEGRADED",
  /**
   * One or more components in the stack might be in an unusable status and the stack might become unresponsive soon. Security patches might be available.
   */
  HEALTH_STATUS_CRITICAL: "HEALTH_STATUS_CRITICAL",
} as const;

const HealthStatusFromInt = function (i: number): HealthStatus {
  switch (i) {
    case 0: {
      return "HEALTH_STATUS_UNSPECIFIED";
    }
    case 1: {
      return "HEALTH_STATUS_SERVING";
    }
    case 2: {
      return "HEALTH_STATUS_WARNING";
    }
    case 3: {
      return "HEALTH_STATUS_DEGRADED";
    }
    case 4: {
      return "HEALTH_STATUS_CRITICAL";
    }
    // unknown values are preserved as numbers. this occurs when new enum values are introduced and the generated code is out of date.
    default: {
      return i as unknown as HealthStatus;
    }
  }
};

const HealthStatusToInt = function (i: HealthStatus): number {
  switch (i) {
    case "HEALTH_STATUS_UNSPECIFIED": {
      return 0;
    }
    case "HEALTH_STATUS_SERVING": {
      return 1;
    }
    case "HEALTH_STATUS_WARNING": {
      return 2;
    }
    case "HEALTH_STATUS_DEGRADED": {
      return 3;
    }
    case "HEALTH_STATUS_CRITICAL": {
      return 4;
    }
    // unknown values are preserved as numbers. this occurs when new enum values are introduced and the generated code is out of date.
    default: {
      return i as unknown as number;
    }
  }
};

export const HealthRequest = {
  /**
   * Serializes a HealthRequest to protobuf.
   */
  encode: function (_msg?: Partial<HealthRequest>): Uint8Array {
    return new Uint8Array();
  },

  /**
   * Deserializes a HealthRequest from protobuf.
   */
  decode: function (_bytes?: ByteSource): HealthRequest {
    return {};
  },

  /**
   * Serializes a HealthRequest to JSON.
   */
  encodeJSON: function (_msg?: Partial<HealthRequest>): string {
    return "{}";
  },

  /**
   * Deserializes a HealthRequest from JSON.
   */
  decodeJSON: function (_json?: string): HealthRequest {
    return {};
  },

  /**
   * Initializes a HealthRequest with all fields set to their default value.
   */
  initialize: function (): HealthRequest {
    return {};
  },
};

export const HealthResponse = {
  /**
   * Serializes a HealthResponse to protobuf.
   */
  encode: function (msg: Partial<HealthResponse>): Uint8Array {
    return HealthResponse._writeMessage(
      msg,
      new BinaryWriter()
    ).getResultBuffer();
  },

  /**
   * Deserializes a HealthResponse from protobuf.
   */
  decode: function (bytes: ByteSource): HealthResponse {
    return HealthResponse._readMessage(
      HealthResponse.initialize(),
      new BinaryReader(bytes)
    );
  },

  /**
   * Serializes a HealthResponse to JSON.
   */
  encodeJSON: function (msg: Partial<HealthResponse>): string {
    return JSON.stringify(HealthResponse._writeMessageJSON(msg));
  },

  /**
   * Deserializes a HealthResponse from JSON.
   */
  decodeJSON: function (json: string): HealthResponse {
    return HealthResponse._readMessageJSON(
      HealthResponse.initialize(),
      JSON.parse(json)
    );
  },

  /**
   * Initializes a HealthResponse with all fields set to their default value.
   */
  initialize: function (): HealthResponse {
    return {
      status: HealthStatusFromInt(0),
    };
  },

  /**
   * @private
   */
  _writeMessage: function (
    msg: Partial<HealthResponse>,
    writer: BinaryWriter
  ): BinaryWriter {
    if (msg.status && HealthStatusToInt(msg.status)) {
      writer.writeEnum(1, HealthStatusToInt(msg.status));
    }
    return writer;
  },

  /**
   * @private
   */
  _writeMessageJSON: function (
    msg: Partial<HealthResponse>
  ): Record<string, unknown> {
    const json: Record<string, unknown> = {};
    if (msg.status && HealthStatusToInt(msg.status)) {
      json.status = msg.status;
    }
    return json;
  },

  /**
   * @private
   */
  _readMessage: function (
    msg: HealthResponse,
    reader: BinaryReader
  ): HealthResponse {
    while (reader.nextField()) {
      const field = reader.getFieldNumber();
      switch (field) {
        case 1: {
          msg.status = HealthStatusFromInt(reader.readEnum());
          break;
        }
        default: {
          reader.skipField();
          break;
        }
      }
    }
    return msg;
  },

  /**
   * @private
   */
  _readMessageJSON: function (msg: HealthResponse, json: any): HealthResponse {
    const _status = json.status;
    if (_status) {
      msg.status = _status;
    }
    return msg;
  },
};
