// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: protos/leads/v1/input.proto

package leadspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InputName represent the name of a input, it allow use to determine the i18n for the label, helper text...
// The type of the in
type InputName int32

const (
	InputName_INPUT_NAME_UNSPECIFIED  InputName = 0
	InputName_INPUT_NAME_AMOUNT       InputName = 1
	InputName_INPUT_NAME_ACCOUNT_TYPE InputName = 2
)

// Enum value maps for InputName.
var (
	InputName_name = map[int32]string{
		0: "INPUT_NAME_UNSPECIFIED",
		1: "INPUT_NAME_AMOUNT",
		2: "INPUT_NAME_ACCOUNT_TYPE",
	}
	InputName_value = map[string]int32{
		"INPUT_NAME_UNSPECIFIED":  0,
		"INPUT_NAME_AMOUNT":       1,
		"INPUT_NAME_ACCOUNT_TYPE": 2,
	}
)

func (x InputName) Enum() *InputName {
	p := new(InputName)
	*p = x
	return p
}

func (x InputName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputName) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_leads_v1_input_proto_enumTypes[0].Descriptor()
}

func (InputName) Type() protoreflect.EnumType {
	return &file_protos_leads_v1_input_proto_enumTypes[0]
}

func (x InputName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputName.Descriptor instead.
func (InputName) EnumDescriptor() ([]byte, []int) {
	return file_protos_leads_v1_input_proto_rawDescGZIP(), []int{0}
}

// InputType represent the type of an input
type InputType int32

const (
	InputType_INPUT_TYPE_UNSPECIFIED   InputType = 0
	InputType_INPUT_TYPE_CURRENCY      InputType = 1 // use input_value_number
	InputType_INPUT_TYPE_TEXT          InputType = 2 // use input_value_string
	InputType_INPUT_TYPE_TEXT_AREA     InputType = 3 // use input_value_string
	InputType_INPUT_TYPE_SELECT_OPTION InputType = 4 // use input_value_string
	InputType_INPUT_TYPE_REGION_OPTION InputType = 5 // use input_value_string
	InputType_INPUT_TYPE_PHONE         InputType = 6 // use input_value_string
)

// Enum value maps for InputType.
var (
	InputType_name = map[int32]string{
		0: "INPUT_TYPE_UNSPECIFIED",
		1: "INPUT_TYPE_CURRENCY",
		2: "INPUT_TYPE_TEXT",
		3: "INPUT_TYPE_TEXT_AREA",
		4: "INPUT_TYPE_SELECT_OPTION",
		5: "INPUT_TYPE_REGION_OPTION",
		6: "INPUT_TYPE_PHONE",
	}
	InputType_value = map[string]int32{
		"INPUT_TYPE_UNSPECIFIED":   0,
		"INPUT_TYPE_CURRENCY":      1,
		"INPUT_TYPE_TEXT":          2,
		"INPUT_TYPE_TEXT_AREA":     3,
		"INPUT_TYPE_SELECT_OPTION": 4,
		"INPUT_TYPE_REGION_OPTION": 5,
		"INPUT_TYPE_PHONE":         6,
	}
)

func (x InputType) Enum() *InputType {
	p := new(InputType)
	*p = x
	return p
}

func (x InputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InputType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_leads_v1_input_proto_enumTypes[1].Descriptor()
}

func (InputType) Type() protoreflect.EnumType {
	return &file_protos_leads_v1_input_proto_enumTypes[1]
}

func (x InputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InputType.Descriptor instead.
func (InputType) EnumDescriptor() ([]byte, []int) {
	return file_protos_leads_v1_input_proto_rawDescGZIP(), []int{1}
}

type InputDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputName InputName `protobuf:"varint,1,opt,name=input_name,json=inputName,proto3,enum=protos.leads.v1.InputName" json:"input_name,omitempty"`
	InputType InputType `protobuf:"varint,2,opt,name=input_type,json=inputType,proto3,enum=protos.leads.v1.InputType" json:"input_type,omitempty"`
	Options   []string  `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
}

func (x *InputDescriptor) Reset() {
	*x = InputDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_leads_v1_input_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputDescriptor) ProtoMessage() {}

func (x *InputDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_protos_leads_v1_input_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputDescriptor.ProtoReflect.Descriptor instead.
func (*InputDescriptor) Descriptor() ([]byte, []int) {
	return file_protos_leads_v1_input_proto_rawDescGZIP(), []int{0}
}

func (x *InputDescriptor) GetInputName() InputName {
	if x != nil {
		return x.InputName
	}
	return InputName_INPUT_NAME_UNSPECIFIED
}

func (x *InputDescriptor) GetInputType() InputType {
	if x != nil {
		return x.InputType
	}
	return InputType_INPUT_TYPE_UNSPECIFIED
}

func (x *InputDescriptor) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

type InputValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputName InputName `protobuf:"varint,1,opt,name=input_name,json=inputName,proto3,enum=protos.leads.v1.InputName" json:"input_name,omitempty"`
	// Types that are assignable to Value:
	//	*InputValue_InputValueNumber
	//	*InputValue_InputValueString
	Value isInputValue_Value `protobuf_oneof:"value"`
}

func (x *InputValue) Reset() {
	*x = InputValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_leads_v1_input_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValue) ProtoMessage() {}

func (x *InputValue) ProtoReflect() protoreflect.Message {
	mi := &file_protos_leads_v1_input_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValue.ProtoReflect.Descriptor instead.
func (*InputValue) Descriptor() ([]byte, []int) {
	return file_protos_leads_v1_input_proto_rawDescGZIP(), []int{1}
}

func (x *InputValue) GetInputName() InputName {
	if x != nil {
		return x.InputName
	}
	return InputName_INPUT_NAME_UNSPECIFIED
}

func (m *InputValue) GetValue() isInputValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *InputValue) GetInputValueNumber() int64 {
	if x, ok := x.GetValue().(*InputValue_InputValueNumber); ok {
		return x.InputValueNumber
	}
	return 0
}

func (x *InputValue) GetInputValueString() string {
	if x, ok := x.GetValue().(*InputValue_InputValueString); ok {
		return x.InputValueString
	}
	return ""
}

type isInputValue_Value interface {
	isInputValue_Value()
}

type InputValue_InputValueNumber struct {
	InputValueNumber int64 `protobuf:"varint,100,opt,name=input_value_number,json=inputValueNumber,proto3,oneof"`
}

type InputValue_InputValueString struct {
	InputValueString string `protobuf:"bytes,101,opt,name=input_value_string,json=inputValueString,proto3,oneof"`
}

func (*InputValue_InputValueNumber) isInputValue_Value() {}

func (*InputValue_InputValueString) isInputValue_Value() {}

var File_protos_leads_v1_input_proto protoreflect.FileDescriptor

var file_protos_leads_v1_input_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xa1,
	0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x6c, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6c, 0x65, 0x61, 0x64, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x6c,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x64, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x12,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x5b, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x4d, 0x4f,
	0x55, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x02, 0x2a, 0xc1, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x52,
	0x45, 0x41, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x47, 0x49, 0x4f, 0x4e, 0x5f, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05,
	0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x48, 0x4f, 0x4e, 0x45, 0x10, 0x06, 0x42, 0x31, 0x5a, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2d, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x3b, 0x6c, 0x65, 0x61, 0x64, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_leads_v1_input_proto_rawDescOnce sync.Once
	file_protos_leads_v1_input_proto_rawDescData = file_protos_leads_v1_input_proto_rawDesc
)

func file_protos_leads_v1_input_proto_rawDescGZIP() []byte {
	file_protos_leads_v1_input_proto_rawDescOnce.Do(func() {
		file_protos_leads_v1_input_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_leads_v1_input_proto_rawDescData)
	})
	return file_protos_leads_v1_input_proto_rawDescData
}

var file_protos_leads_v1_input_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_leads_v1_input_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_protos_leads_v1_input_proto_goTypes = []interface{}{
	(InputName)(0),          // 0: protos.leads.v1.InputName
	(InputType)(0),          // 1: protos.leads.v1.InputType
	(*InputDescriptor)(nil), // 2: protos.leads.v1.InputDescriptor
	(*InputValue)(nil),      // 3: protos.leads.v1.InputValue
}
var file_protos_leads_v1_input_proto_depIdxs = []int32{
	0, // 0: protos.leads.v1.InputDescriptor.input_name:type_name -> protos.leads.v1.InputName
	1, // 1: protos.leads.v1.InputDescriptor.input_type:type_name -> protos.leads.v1.InputType
	0, // 2: protos.leads.v1.InputValue.input_name:type_name -> protos.leads.v1.InputName
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protos_leads_v1_input_proto_init() }
func file_protos_leads_v1_input_proto_init() {
	if File_protos_leads_v1_input_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_leads_v1_input_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_leads_v1_input_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_leads_v1_input_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*InputValue_InputValueNumber)(nil),
		(*InputValue_InputValueString)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_leads_v1_input_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_leads_v1_input_proto_goTypes,
		DependencyIndexes: file_protos_leads_v1_input_proto_depIdxs,
		EnumInfos:         file_protos_leads_v1_input_proto_enumTypes,
		MessageInfos:      file_protos_leads_v1_input_proto_msgTypes,
	}.Build()
	File_protos_leads_v1_input_proto = out.File
	file_protos_leads_v1_input_proto_rawDesc = nil
	file_protos_leads_v1_input_proto_goTypes = nil
	file_protos_leads_v1_input_proto_depIdxs = nil
}
